<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Unity.Addressables.Editor</name>
    </assembly>
    <members>
        <member name="T:UnityEditor.AddressableAssets.GUIElements.Ribbon.UxmlFactory">
            <summary>
            Instantiates a <see cref="T:UnityEditor.AddressableAssets.GUIElements.Ribbon"/> using the data read from a UXML file.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.GUIElements.Ribbon.UxmlTraits">
            <summary>
            Defines <see cref="T:UnityEditor.AddressableAssets.GUIElements.Ribbon.UxmlTraits"/> for the <see cref="T:UnityEditor.AddressableAssets.GUIElements.Ribbon"/>.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.GUIElements.Filter">
            <summary>
            string based filter with identifying char
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.GUIElements.FilterString.IsValid">
            <summary>
            true if the parsed string query resulted is valid search queries
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUIElements.FilterString.ProcessSearchValue(System.String)">
            <summary>
            Take the given string and convert to content search queries
            </summary>
            <param name="value">string to parse</param>
        </member>
        <member name="P:UnityEditor.AddressableAssets.GUIElements.NumericQuery.IsValid">
            <summary>
            True if the numeric search query has been correctly parsed
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUIElements.NumericQuery.Parse(System.String)">
            <summary>
            Parse a numeric equality string to get the equality symbol and number value
            </summary>
            <param name="parseString">string to parse for numeric equality</param>
            <returns>true if the parse was successful, else false</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUIElements.NumericQuery.Evaluate(System.Int32)">
            <summary>
            Evaluates a value based on the equality set for the query
            </summary>
            <param name="value">value to check for evaluation</param>
            <returns>true if the evaluation is true, else false</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUIElements.NumericQuery.Clear">
            <summary>
            invalidates and clears the query
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUIElements.RibbonButton.SetButtonEnabled(System.Boolean,System.String)">
            <summary>
            Sets the Buttons enabled state and if a disablingTooltipReason is passed, it is set as the tool-tip on disabling and will restore the old tooltip on re-enabling later.
            </summary>
            <param name="enabled"></param>
            <param name="disablingTooltipReason">Provide a non-null, non-empty-string reason even when enabling to confirm that the tool-tip should be restored to what it was before toggling the enabled status off.</param>
        </member>
        <member name="T:UnityEditor.AddressableAssets.GUIElements.RibbonButton.UxmlFactory">
            <summary>
            Instantiates a <see cref="T:UnityEditor.AddressableAssets.GUIElements.Ribbon"/> using the data read from a UXML file.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.GUIElements.RibbonButton.UxmlTraits">
            <summary>
            Defines <see cref="T:UnityEditor.AddressableAssets.GUIElements.RibbonButton.UxmlTraits"/> for the <see cref="T:UnityEditor.AddressableAssets.GUIElements.RibbonButton"/>.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Diagnostics.ContentSearch.InitialiseLongForms">
            <summary>
            adds any search filter strings to be used to identify a query
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Diagnostics.ContentSearch.ProcessSearchValue(System.String)">
            <summary>
            Take the given string and convert to content search queries
            </summary>
            <param name="value">string to parse</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Diagnostics.BundleData.GetOrCreateAssetData(UnityEditor.AddressableAssets.Build.Layout.BuildLayout.DataFromOtherAsset,UnityEditor.AddressableAssets.Diagnostics.AssetData@)">
             <summary>
            
             </summary>
             <param name="asset"></param>
             <param name="assetData"></param>
             <returns>true if new assetData is created, else false is already a child of bundle</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Diagnostics.BundleData.GetOrCreateAssetData(UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset,UnityEditor.AddressableAssets.Diagnostics.AssetData@)">
             <summary>
            
             </summary>
             <param name="asset"></param>
             <param name="assetData"></param>
             <returns>true if new assetData is created, else false is already a child of bundle</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.GUI.AnalyzeWindow">
            <summary>
            Window used to execute AnalyzeRule sets.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.AnalyzeWindow.RegisterNewRule``1">
            <summary>
            Obsolete - please use AnalyzeSystem.RegisterNewRule&lt;TRule&gt;()
            </summary>
            <typeparam name="TRule">The rule type.</typeparam>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.HostingServicesListTreeView.SelectRow(System.Int32)">
            <summary>
            Selects a row based on its index if the given index is valid.
            </summary>
            <param name="index">The index of the row.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.AssetReferenceDrawer.ValidateAsset(System.String)">
            <summary>
            Validates that the referenced asset allowable for this asset reference.
            </summary>
            <param name="path">The path to the asset in question.</param>
            <returns>Whether the referenced asset is valid.</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.GUI.SerializedPropertyExtensions">
            <summary>
            Used to manipulate data from a serialized property.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.SerializedPropertyExtensions.GetActualObjectForSerializedProperty``1(UnityEditor.SerializedProperty,System.Reflection.FieldInfo,System.String@)">
            <summary>
            Used to extract the target object from a serialized property.
            </summary>
            <typeparam name="T">The type of the object to extract.</typeparam>
            <param name="property">The property containing the object.</param>
            <param name="field">The field data.</param>
            <param name="label">The label name.</param>
            <returns>Returns the target object type.</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.GUI.AssetReferenceSurrogateAttribute">
            <summary>
            Used to restrict a class to only allow items with specific labels.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.GUI.AssetReferenceSurrogateAttribute.TargetType">
            <summary>
            The type of the attribute.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.AssetReferenceSurrogateAttribute.#ctor(System.Type)">
            <summary>
            Construct a new AssetReferenceSurrogateAttribute.
            </summary>
            <param name="type">The Type of the class in question.</param>
        </member>
        <member name="T:UnityEditor.AddressableAssets.GUI.AssetReferenceUIRestrictionSurrogate">
            <summary>
            Surrogate to AssetReferenceUIRestriction.
            This surrogate class provides the editor-side implementation of AssetReferenceUIRestriction attribute
            Used to restrict an AssetReference field or property to only allow items with specific labels. This is only enforced through the UI.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.AssetReferenceUIRestrictionSurrogate.Init(UnityEngine.AssetReferenceUIRestriction)">
            <summary>
            Sets the AssetReferenceUIRestriction for this surrogate
            </summary>
            <param name="initData">To initialize AssetReferenceUIRestriction for surrogate</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.AssetReferenceUIRestrictionSurrogate.ValidateAsset(UnityEngine.Object)">
            <summary>
            Validates the referenced asset allowable for this asset reference.
            </summary>
            <param name="obj">The Object to validate.</param>
            <returns>Whether the referenced asset is valid.</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.GUI.AssetReferenceUILabelRestrictionSurrogate">
            <summary>
            Surrogate to AssetReferenceUILabelRestriction
            This surrogate class provides the editor-side implementation of AssetReferenceUILabelRestriction attribute
            Used to restrict an AssetReference field or property to only allow items wil specific labels. This is only enforced through the UI.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.AssetReferenceUILabelRestrictionSurrogate.Init(UnityEngine.AssetReferenceUIRestriction)">
            <summary>
            Sets the AssetReferenceUILabelRestriction for this surrogate
            </summary>
            <param name="initData">To initialize AssetReferenceUILabelRestriction field</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.AssetReferenceUILabelRestrictionSurrogate.ValidateAsset(UnityEngine.Object)">
            <inheritdoc/>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.AssetReferenceUILabelRestrictionSurrogate.ValidateAsset(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.AssetReferenceUILabelRestrictionSurrogate.ToString">
            <inheritdoc/>
        </member>
        <member name="T:UnityEditor.AddressableAssets.GUI.AssetReferenceUtility">
            <summary>
            Utility Class
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.AssetReferenceUtility.GetSurrogate(System.Type)">
            <summary>
            Finds surrogate class for an Assembly with a particular TargetType
            </summary>
            <param name="targetType">Target Type to search</param>
            <returns>Type of the surrogate found for the Assembly with a particular Target Type.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.HostingServicesAddServiceWindow.Initialize(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <summary>
            Initialize the dialog for the given <see cref="T:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings"/>
            </summary>
            <param name="settings"></param>
        </member>
        <member name="T:UnityEditor.AddressableAssets.GUI.AddressableAssetsSettingsGroupEditor.IAddressablesBuildMenu">
            <summary>
            Interface used for classes that implement Addressables build menu steps.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.GUI.AddressableAssetsSettingsGroupEditor.IAddressablesBuildMenu.BuildMenuPath">
            <summary>
            Path from Build in the Addressables Groups Window.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.GUI.AddressableAssetsSettingsGroupEditor.IAddressablesBuildMenu.SelectableBuildScript">
            <summary>
            If returns true, build menu will extend to available Build Scripts.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.GUI.AddressableAssetsSettingsGroupEditor.IAddressablesBuildMenu.Order">
            <summary>
            Display order in the menu, lower values are displayed first.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.AddressableAssetsSettingsGroupEditor.IAddressablesBuildMenu.OnPrebuild(UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput)">
            <summary>
            Called before beginning the Addressables content build.
            </summary>
            <param name="input">Input used for the Addressables content build</param>
            <returns>True for success, else false and fail the build</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.AddressableAssetsSettingsGroupEditor.IAddressablesBuildMenu.OnPostbuild(UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput,UnityEditor.AddressableAssets.Build.AddressablesPlayerBuildResult)">
            <summary>
            Called after the Addressables content build if the build was successful.
            </summary>
            <param name="input">Input used for the Addressables content build</param>
            <param name="result">Result of the Addressables content build</param>
            <returns>True for success, else false and fail the build</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.GUI.LabelWindow">
            <summary>
            Configuration GUI for addressable labels in <see cref="T:UnityEditor.AddressableAssets.Settings" />
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.LabelWindow.Intialize(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <summary>
            Creates a new LabelWindow instance and retrieves label names from the given settings object.
            </summary>
            <param name="settings">The settings object.</param>
        </member>
        <member name="T:UnityEditor.AddressableAssets.GUI.HostingServicesWindow">
            <summary>
            Configuration GUI for <see cref="T:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager" />
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.GUI.HostingServicesWindow.ServiceIndex">
            <summary>
            Returns the index of the currently selected hosting service.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.HostingServicesWindow.Show(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <summary>
            Show the <see cref="T:UnityEditor.AddressableAssets.GUI.HostingServicesWindow"/>, initialized with the given <see cref="T:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings"/>
            </summary>
            <param name="settings"></param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.HostingServicesWindow.AddService(System.Int32,System.String)">
            <summary>
            Add a new hosting service to the HostingServicesManager. The service at index <paramref name="typeIndex"/> in ServiceTypes must implement the <see cref="T:UnityEditor.AddressableAssets.HostingServices.IHostingService"/> interface, or an <see cref="T:System.ArgumentException"/> is thrown.
            </summary>
            <param name="typeIndex">The index of the service stored in ServiceTypes. The service at this index must implement <see cref="T:UnityEditor.AddressableAssets.HostingServices.IHostingService"/></param>
            <param name="serviceName">A descriptive name for the new service instance.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.HostingServicesWindow.RemoveService(UnityEditor.AddressableAssets.HostingServices.IHostingService,System.Boolean)">
            <summary>
            Add a hosting service to the removal queue.
            </summary>
            <param name="svc">The service type to be removed.</param>
            <param name="showDialog">Indicates whether or not a warning dialogue box is shown.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.HostingServicesWindow.LogFormat(UnityEngine.LogType,UnityEngine.Object,System.String,System.Object[])">
            <inheritdoc/>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.HostingServicesWindow.LogException(System.Exception,UnityEngine.Object)">
            <inheritdoc/>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.HostingServicesWindow.OnBeforeSerialize">
            <inheritdoc/>
        </member>
        <member name="M:UnityEditor.AddressableAssets.GUI.HostingServicesWindow.OnAfterDeserialize">
            <inheritdoc/>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.AssetReferenceDrawerUtilities">
            <summary>
            Contains editor data for the AssetReference.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings">
            <summary>
            Contains user defined variables to control build parameters.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.ProfileIdData">
            <summary>
            A container for profile specific data, such as the name and ID of a profile.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.ProfileIdData.Id">
            <summary>
            The unique ID set to identify a specific profile.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.ProfileIdData.ProfileName">
            <summary>
            The name of the specific profile.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.ProfileIdData.SetName(System.String,UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings)">
            <summary>
            Changes the name of a given profile and updates the values in the profile settings.
            </summary>
            <param name="newName">The new name you want to set the profile to.</param>
            <param name="profileSettings">The profile settings object that contains this profile.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.ProfileIdData.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Create a new ProfileIdData.
            </summary>
            <param name="entryId">The unique ID for this ProfileIdData</param>
            <param name="entryName">The name of the ProfileIdData.  ProfileIdData names should be unique in a given AddressableAssetProfileSettings.</param>
            <param name="inline">False by default, this informs the BuildProifleSettingsEditor on if it should evaluate the ProfileIdData directly (true) 
            or get the value by Id first before evaluation (false).</param>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.customEntryString">
            <summary>
            Text that represents a custom profile entry.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.defaultSettingsPathString">
            <summary>
            Text that represents when the default settings path is being used.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.undefinedEntryValue">
            <summary>
            Text that represents an undefined profile entry.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.GetProfileDataById(System.String)">
            <summary>
            Get the profile specific data for a given profile id.
            </summary>
            <param name="id">The profile id you're requesting data for.</param>
            <returns>A ProfileIdData with information about a specific profile.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.GetProfileDataByName(System.String)">
            <summary>
            Get the profile specific data for a given profile name.
            </summary>
            <param name="name">The profile name you're requesting data for.</param>
            <returns>A ProfileIdData with information about a specific profile.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.Reset">
            <summary>
            Clears out the list of profiles, then creates a new default one.
            </summary>
            <returns>Returns the ID of the newly created default profile.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.EvaluateString(System.String,System.String)">
            <summary>
            Evaluate a string given a profile id.
            </summary>
            <param name="profileId">The profile id to use for evaluation.</param>
            <param name="varString">The string to evaluate.  Any tokens surrounded by '[' and ']' will be replaced with matching variables.</param>
            <returns>The evaluated string.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.GetVariableNames">
            <summary>
            Get all available variable names
            </summary>
            <returns>The variable names, sorted alphabetically.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.GetAllProfileNames">
            <summary>
            Get all profile names.
            </summary>
            <returns>The list of profile names.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.GetProfileName(System.String)">
            <summary>
            Get a profile's display name.
            </summary>
            <param name="profileId">The profile id.</param>
            <returns>The display name of the profile.  Returns empty string if not found.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.GetProfileId(System.String)">
            <summary>
            Get the id of a given display name.
            </summary>
            <param name="profileName">The profile name.</param>
            <returns>The id of the profile.  Returns empty string if not found.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.GetAllVariableIds">
            <summary>
            Gets the set of all profile ids.
            </summary>
            <returns>The set of profile ids.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.SetDirty(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent,System.Object,System.Boolean)">
            <summary>
            Marks the object as modified.
            </summary>
            <param name="modificationEvent">The event type that is changed.</param>
            <param name="eventData">The object data that corresponds to the event.</param>
            <param name="postEvent">If true, the event is propagated to callbacks.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.AddProfile(System.String,System.String)">
            <summary>
            Adds a new profile.
            </summary>
            <param name="name">The name of the new profile.</param>
            <param name="copyFromId">The id of the profile to copy values from.</param>
            <returns>The id of the created profile.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.RenameProfile(System.String,System.String)">
            <summary>
            Renames a profile. profileId must refer to an existing profile. Profile names must be unique and must not be comprised of only whitespace.
            Returns false if profileId or newName is invalid.
            </summary>
            <param name="profileId"> The id of the profile to be renamed. </param>
            <param name="newName"> The new name to be given to the profile. </param>
            <returns> True if the rename is successful, false otherwise. </returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.RemoveProfile(System.String)">
            <summary>
            Removes a profile.
            </summary>
            <param name="profileId">The id of the profile to remove.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.SetValue(System.String,System.String,System.String)">
            <summary>
            Set the value of a variable for a specified profile.
            </summary>
            <param name="profileId">The profile id.</param>
            <param name="variableName">The property name.</param>
            <param name="val">The value to set the property.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.CreateValue(System.String,System.String)">
            <summary>
            Create a new profile property.
            </summary>
            <param name="variableName">The name of the property.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The id of the created variable.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.RemoveValue(System.String)">
            <summary>
            Remove a profile property.
            </summary>
            <param name="variableId">The id of the property.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.GetValueById(System.String,System.String)">
            <summary>
            Get the value of a property.
            </summary>
            <param name="profileId">The profile id.</param>
            <param name="varId">The property id.</param>
            <returns></returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings.GetValueByName(System.String,System.String)">
            <summary>
            Get the value of a property by name.
            </summary>
            <param name="profileId">The profile id.</param>
            <param name="varName">The variable name.</param>
            <returns></returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchema">
            <summary>
            Contains data for AddressableAssetGroups.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchema.Group">
            <summary>
            Get the group that the schema belongs to.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchema.OnSetGroup(UnityEditor.AddressableAssets.Settings.AddressableAssetGroup)">
            <summary>
            Override this method to perform post creation initialization.
            </summary>
            <param name="group">The group that the schema is added to.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchema.OnGUI">
            <summary>
            Used to display the GUI of the schema.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchema.OnGUIMultiple(System.Collections.Generic.List{UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchema})">
            <summary>
            Used to display the GUI of multiple selected groups.
            </summary>
            <param name="otherSchemas">Schema instances in the other selected groups</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchema.SetDirty(System.Boolean)">
            <summary>
            Used to notify the addressables settings that data has been modified.  This must be called by subclasses to ensure proper cache invalidation.
            </summary>
            <param name="postEvent">Determines if this method call will post an event to the internal addressables event system</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchema.ShowAllProperties">
            <summary>
            Used for drawing properties in the inspector.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchema.ShowMixedValue(UnityEditor.SerializedProperty,System.Collections.Generic.List{UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchema},System.Type,System.String)">
            <summary>
            Display mixed values for the specified property found in a list of schemas.
            </summary>
            <param name="property">The property.</param>
            <param name="otherSchemas">The list of schemas that may contain the property.</param>
            <param name="type">The property type.</param>
            <param name="propertyName">The property name.</param>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.ProfileGroupType">
            <summary>
            Used to store path pairs and act as an abstraction between path pairs and profile variables. 
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.ProfileGroupType.GroupTypeVariable">
             <summary>
             Used to store path values, identified by postfix
             </summary>
            
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProfileGroupType.GroupTypeVariable.#ctor(System.String,System.String)">
            <summary>
            Constructor for variables
            </summary>
            <param name="suffix"></param>
            <param name="value"></param>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.ProfileGroupType.GroupTypeVariable.m_Suffix">
             <summary>
             Postfix of a GroupTypeVariable
             </summary>
            
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.ProfileGroupType.GroupTypeVariable.m_Value">
            <summary>
            Specified Value
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.ProfileGroupType.GroupTypePrefix">
            <summary>
            Common prefix used in determining a path pair
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.ProfileGroupType.m_Variables">
             <summary>
             Group of variables that share a common prefix
             </summary>
            
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProfileGroupType.#ctor">
            <summary>
            ctors for profile group type
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProfileGroupType.GetName(UnityEditor.AddressableAssets.Settings.ProfileGroupType.GroupTypeVariable)">
            <summary>
            Returns the full variable name
            </summary>
            <param name="variable"></param>
            <returns>the full name of a variable</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProfileGroupType.AddVariable(UnityEditor.AddressableAssets.Settings.ProfileGroupType.GroupTypeVariable)">
            <summary>
            Adds a variable in the group
            </summary>
            <param name="variable"></param>
            <returns>True if the variable was added, false if the variable already exists</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProfileGroupType.RemoveVariable(UnityEditor.AddressableAssets.Settings.ProfileGroupType.GroupTypeVariable)">
            <summary>
            Removes a variable from the group
            </summary>
            <param name="variable"></param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProfileGroupType.GetVariableBySuffix(System.String)">
            <summary>
            Gets a variable by its suffix name
            </summary>
            <param name="suffix"></param>
            <returns>the variable if exists, null otherwise</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProfileGroupType.ContainsVariable(UnityEditor.AddressableAssets.Settings.ProfileGroupType.GroupTypeVariable)">
            <summary>
            Returns true if a group type has a certain variable
            </summary>
            <param name="groupTypeVariable">group type variable</param>
            <returns>true if the group type contains the variable, false otherwise</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProfileGroupType.IsValidGroupType">
            <summary>
            Determines if the group type is a valid
            </summary>
            <returns>True, if the group type has a prefix, a build path, and a load path, false otherwise</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.ProfileDataSourceSettings">
            <summary>
            Scriptable Object that holds data source setting information for the profile data source dropdown window
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.ProfileDataSourceSettings.profileGroupTypes">
            <summary>
            Group types that exist within the settings object
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProfileDataSourceSettings.Create(System.String,System.String)">
            <summary>
            Creates, if needed, and returns the profile data source settings for the project
            </summary>
            <param name="path">Desired path to put settings</param>
            <param name="settingName">Desired name for settings</param>
            <returns></returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProfileDataSourceSettings.GetSettings(System.String,System.String)">
            <summary>
            Gets the profile data source settings for the project
            </summary>
            <param name="path"></param>
            <param name="settingName"></param>
            <returns></returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProfileDataSourceSettings.CreateDefaultGroupTypes">
            <summary>
            Creates a list of default group types that are automatically added on ProfileDataSourceSettings object creation
            </summary>
            <returns>List of ProfileGroupTypes: Built-In and Editor Hosted</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProfileDataSourceSettings.FindGroupType(UnityEditor.AddressableAssets.Settings.ProfileGroupType)">
            <summary>
            Given a valid profileGroupType, searches the settings and returns, if exists, the profile group type
            </summary>
            <param name="groupType"></param>
            <returns>ProfileGroupType if found, null otherwise</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProfileDataSourceSettings.GetGroupTypesByPrefix(System.String)">
            <summary>
            Retrieves a list of ProfileGroupType that matches the given prefix
            </summary>
            <param name="prefix">prefix to search by</param>
            <returns>List of ProfileGroupType</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.ProfileDataSourceSettings.Token">
            <summary>
            Access Token
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.ProfileDataSourceSettings.Environments">
            <summary>
            Environment Wrapper Object
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.ProfileDataSourceSettings.Environment">
            <summary>
            Identity API Environment Object
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.IGroupTemplate">
            <summary>
            Stores information about a group template.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.IGroupTemplate.Name">
            <summary>
            The name of the group, used for the menu and newly created group name.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.IGroupTemplate.Description">
            <summary>
            Description of the Template, to be used as a tooltip
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry">
            <summary>
            Contains data for an addressable asset entry.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.FlaggedDuringContentUpdateRestriction">
            <summary>
            If true, this asset was changed after being built into an Addressable Group marked 'Cannot Change Post Release'.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.IsFolder">
            <summary>
            Flag indicating if an AssetEntry is a folder or not.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.SubAssets">
            <summary>
            List of AddressableAssetEntries that are considered sub-assets of a main Asset.  Typically used for Folder entires.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.parentGroup">
            <summary>
            The asset group that this entry belongs to.  An entry can only belong to a single group at a time.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.BundleFileId">
            <summary>
            The id for the bundle file.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.guid">
            <summary>
            The asset guid.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.address">
            <summary>
            The address of the entry.  This is treated as the primary key in the ResourceManager system.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.SetAddress(System.String,System.Boolean)">
            <summary>
            Set the address of the entry.
            </summary>
            <param name="addr">The address.</param>
            <param name="postEvent">Post modification event.</param>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.ReadOnly">
            <summary>
            Read only state of the entry.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.IsInResources">
            <summary>
            Is the asset in a resource folder.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.IsInSceneList">
            <summary>
            Is scene in scene list.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.IsSubAsset">
            <summary>
            Is a sub asset.  For example an asset in an addressable folder.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.ParentEntry">
            <summary>
            Stores a reference to the parent entry. Only used if the asset is a sub asset.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.IsScene">
            <summary>
            Is this entry for a scene.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.labels">
            <summary>
            The set of labels for this entry.  There is no inherent limit to the number of labels.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.MainAssetType">
            <summary>
            The System.Type of the main Object referenced by an AddressableAssetEntry
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.SetLabel(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Set or unset a label on this entry.
            </summary>
            <param name="label">The label name.</param>
            <param name="enable">Setting to true will add the label, false will remove it.</param>
            <param name="force">When enable is true, setting force to true will force the label to exist on the parent AddressableAssetSettings object if it does not already.</param>
            <param name="postEvent">Post modification event.</param>
            <returns></returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.CreateKeyList">
            <summary>
            Creates a list of keys that can be used to load this entry.
            </summary>
            <returns>The list of keys.  This will contain the address, the guid as a Hash128 if valid, all assigned labels, and the scene index if applicable.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.CreateKeyList(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a list of keys that can be used to load this entry.
            </summary>
            <returns>The list of keys.  This will contain the address, the guid as a Hash128 if valid, all assigned labels, and the scene index if applicable.</returns>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.AssetPath">
            <summary>
            The path of the asset.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.MainAsset">
            <summary>
            The main asset object for this entry.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.TargetAsset">
            <summary>
            The asset object for this entry.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.GetAssetLoadPath(System.Boolean)">
            <summary>
            The asset load path.  This is used to determine the internal id of resource locations.
            </summary>
            <param name="isBundled">True if the asset will be contained in an asset bundle.</param>
            <returns>Return the runtime path that should be used to load this entry.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.GetAssetLoadPath(System.Boolean,System.Collections.Generic.HashSet{System.String})">
            <summary>
            The asset load path.  This is used to determine the internal id of resource locations.
            </summary>
            <param name="isBundled">True if the asset will be contained in an asset bundle.</param>
            <param name="otherLoadPaths">The internal ids of the asset, typically shortened versions of the asset's GUID.</param>
            <returns>Return the runtime path that should be used to load this entry.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.GatherAllAssets(System.Collections.Generic.List{UnityEditor.AddressableAssets.Settings.AddressableAssetEntry},System.Boolean,System.Boolean,System.Boolean,System.Func{UnityEditor.AddressableAssets.Settings.AddressableAssetEntry,System.Boolean})">
            <summary>
            Gathers all asset entries.  Each explicit entry may contain multiple sub entries. For example, addressable folders create entries for each asset contained within.
            </summary>
            <param name="assets">The generated list of entries.  For simple entries, this will contain just the entry itself if specified.</param>
            <param name="includeSelf">Determines if the entry should be contained in the result list or just sub entries.</param>
            <param name="recurseAll">Determines if full recursion should be done when gathering entries.</param>
            <param name="includeSubObjects">Determines if sub objects such as sprites should be included.</param>
            <param name="entryFilter">Optional predicate to run against each entry, only returning those that pass.  A null filter will return all entries</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.GetFolderSubEntry(System.String,System.String)">
            <summary>
            Gets an entry for this folder entry
            </summary>
            <param name="subAssetGuid"></param>
            <param name="subAssetPath"></param>
            <returns></returns>
            <remarks>Assumes that this asset entry is a valid folder asset</remarks>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.OnBeforeSerialize">
            <summary>
            Implementation of ISerializationCallbackReceiver.  Converts data to serializable form before serialization.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.OnAfterDeserialize">
            <summary>
            Implementation of ISerializationCallbackReceiver.  Converts data from serializable form after deserialization.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.ToString">
            <summary>
            Returns the address of the AddressableAssetEntry.
            </summary>
            <returns>The address of the AddressableAssetEntry</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.CreateCatalogEntries(System.Collections.Generic.List{UnityEngine.AddressableAssets.ResourceLocators.ContentCatalogDataEntry},System.Boolean,System.String,System.Collections.Generic.IEnumerable{System.Object},System.Object,System.Collections.Generic.HashSet{System.Type})">
            <summary>
            Create all entries for this addressable asset.  This will expand subassets (Sprites, Meshes, etc) and also different representations.
            </summary>
            <param name="entries">The list of entries to fill in.</param>
            <param name="isBundled">Whether the entry is bundles or not.  This will affect the load path.</param>
            <param name="providerType">The provider type for the main entry.</param>
            <param name="dependencies">Keys of dependencies</param>
            <param name="extraData">Extra data to append to catalog entries.</param>
            <param name="providerTypes">Any unknown provider types are added to this set in order to ensure they are not stripped.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetEntry.CreateCatalogEntries(System.Collections.Generic.List{UnityEngine.AddressableAssets.ResourceLocators.ContentCatalogDataEntry},System.Boolean,System.String,System.Collections.Generic.IEnumerable{System.Object},System.Object,System.Collections.Generic.Dictionary{UnityEditor.GUID,UnityEditor.Build.Content.AssetLoadInfo},System.Collections.Generic.HashSet{System.Type},System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.HashSet{System.String})">
            <summary>
            Create all entries for this addressable asset.  This will expand subassets (Sprites, Meshes, etc) and also different representations.
            </summary>
            <param name="entries">The list of entries to fill in.</param>
            <param name="isBundled">Whether the entry is bundles or not.  This will affect the load path.</param>
            <param name="providerType">The provider type for the main entry.</param>
            <param name="dependencies">Keys of dependencies</param>
            <param name="extraData">Extra data to append to catalog entries.</param>
            <param name="depInfo">Map of guids to AssetLoadInfo for object identifiers in an Asset.  If null, ContentBuildInterface gathers object ids automatically.</param>
            <param name="providerTypes">Any unknown provider types are added to this set in order to ensure they are not stripped.</param>
            <param name="includeAddress">Flag indicating if address locations should be included</param>
            <param name="includeGUID">Flag indicating if guid locations should be included</param>
            <param name="includeLabels">Flag indicating if label locations should be included</param>
            <param name="assetsInBundle">The internal ids of the asset, typically shortened versions of the asset's GUID.</param>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup">
            <summary>
            Contains the collection of asset entries associated with this group.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.FlaggedDuringContentUpdateRestriction">
            <summary>
            If true, this Group is likely marked 'Cannot Change Post Release', but has a modified asset since the previous build.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.Name">
            <summary>
            The group name.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.Guid">
            <summary>
            The group GUID.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.Schemas">
            <summary>
            List of schemas for this group.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.SchemaTypes">
            <summary>
            Get the types of added schema for this group.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.AddSchema(UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchema,System.Boolean)">
            <summary>
            Adds a copy of the provided schema object.
            </summary>
            <param name="schema">The schema to add. A copy will be made and saved in a folder relative to the main Addressables settings asset. </param>
            <param name="postEvent">Determines if this method call will post an event to the internal addressables event system</param>
            <returns>The created schema object.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.AddSchema(System.Type,System.Boolean)">
            <summary>
            Creates and adds a schema of a given type to this group.  The schema asset will be created in the GroupSchemas directory relative to the settings asset.
            </summary>
            <param name="type">The schema type. This type must not already be added.</param>
            <param name="postEvent">Determines if this method call will post an event to the internal addressables event system</param>
            <returns>The created schema object.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.AddSchema``1(System.Boolean)">
            <summary>
            Creates and adds a schema of a given type to this group.
            </summary>
            <param name="postEvent">Determines if this method call will post an event to the internal addressables event system</param>
            <typeparam name="TSchema">The schema type. This type must not already be added.</typeparam>
            <returns>The created schema object.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.RemoveSchema(System.Type,System.Boolean)">
            <summary>
             Remove a given schema from this group.
            </summary>
            <param name="type">The schema type.</param>
            <param name="postEvent">Determines if this method call will post an event to the internal addressables event system</param>
            <returns>True if the schema was found and removed, false otherwise.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.RemoveSchema``1(System.Boolean)">
            <summary>
             Remove a given schema from this group.
            </summary>
            <param name="postEvent">Determines if this method call will post an event to the internal addressables event system</param>
            <typeparam name="TSchema">The schema type.</typeparam>
            <returns>True if the schema was found and removed, false otherwise.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.GetSchema``1">
            <summary>
            Gets an added schema of the specified type.
            </summary>
            <typeparam name="TSchema">The schema type.</typeparam>
            <returns>The schema if found, otherwise null.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.GetSchema(System.Type)">
            <summary>
            Gets an added schema of the specified type.
            </summary>
            <param name="type">The schema type.</param>
            <returns>The schema if found, otherwise null.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.HasSchema``1">
            <summary>
            Checks if the group contains a schema of a given type.
            </summary>
            <typeparam name="TSchema">The schema type.</typeparam>
            <returns>True if the schema type or subclass has been added to this group.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.ClearSchemas(System.Boolean,System.Boolean)">
            <summary>
            Removes all schemas and optionally deletes the assets associated with them.
            </summary>
            <param name="deleteAssets">If true, the schema assets will also be deleted.</param>
            <param name="postEvent">Determines if this method call will post an event to the internal addressables event system</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.HasSchema(System.Type)">
            <summary>
            Checks if the group contains a schema of a given type.
            </summary>
            <param name="type">The schema type.</param>
            <returns>True if the schema type or subclass has been added to this group.</returns>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.ReadOnly">
            <summary>
            Is this group read only.  This is normally false.  Built in resources (resource folders and the scene list) are put into a special read only group.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.Settings">
            <summary>
            The AddressableAssetSettings that this group belongs to.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.entries">
            <summary>
            The collection of asset entries.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.Default">
            <summary>
            Is the default group.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.Compare(UnityEditor.AddressableAssets.Settings.AddressableAssetEntry,UnityEditor.AddressableAssets.Settings.AddressableAssetEntry)">
            <summary>
            Compares two asset entries based on their guids.
            </summary>
            <param name="x">The first entry to compare.</param>
            <param name="y">The second entry to compare.</param>
            <returns>Returns 0 if both entries are null or equivalent.
            Returns -1 if the first entry is null or the first entry precedes the second entry in the sort order.
            Returns 1 if the second entry is null or the first entry follows the second entry in the sort order.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.OnBeforeSerialize">
            <summary>
            Converts data to serializable format.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.OnAfterDeserialize">
            <summary>
            Converts data from serializable format.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.GatherAllAssets(System.Collections.Generic.List{UnityEditor.AddressableAssets.Settings.AddressableAssetEntry},System.Boolean,System.Boolean,System.Boolean,System.Func{UnityEditor.AddressableAssets.Settings.AddressableAssetEntry,System.Boolean})">
            <summary>
            Gathers all asset entries.  Each explicit entry may contain multiple sub entries. For example, addressable folders create entries for each asset contained within.
            </summary>
            <param name="results">The generated list of entries.  For simple entries, this will contain just the entry itself if specified.</param>
            <param name="includeSelf">Determines if the entry should be contained in the result list or just sub entries.</param>
            <param name="recurseAll">Determines if full recursion should be done when gathering entries.</param>
            <param name="includeSubObjects">Determines if sub objects such as sprites should be included.</param>
            <param name="entryFilter">Optional predicate to run against each entry, only returning those that pass.  A null filter will return all entries</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.GetAssetEntry(System.String)">
            <summary>
            Get an entry via the asset guid.
            </summary>
            <param name="guid">The asset guid.</param>
            <returns></returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.GetAssetEntry(System.String,System.Boolean)">
            <summary>
            Get an entry via the asset guid.
            </summary>
            <param name="guid">The asset guid.</param>
            <param name="includeImplicit">Whether or not to include implicit asset entries in the search.</param>
            <returns></returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.SetDirty(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Marks the object as modified.
            </summary>
            <param name="modificationEvent">The event type that is changed.</param>
            <param name="eventData">The object data that corresponds to the event.</param>
            <param name="postEvent">If true, the event is propagated to callbacks.</param>
            <param name="groupModified">If true, the group asset will be marked as dirty.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.RemoveAssetEntry(UnityEditor.AddressableAssets.Settings.AddressableAssetEntry,System.Boolean)">
            <summary>
            Remove an entry.
            </summary>
            <param name="entry">The entry to remove.</param>
            <param name="postEvent">If true, post the event to callbacks.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.IsDefaultGroup">
            <summary>
            Check to see if a group is the Default Group.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.CanBeSetAsDefault">
            <summary>
            Check if a group has the appropriate schemas and attributes that the Default Group requires.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup.FindSchema(System.Type)">
            <summary>
            Gets the index of a schema based on its specified type.
            </summary>
            <param name="type">The schema type.</param>
            <returns>Valid index if found, otherwise returns -1.</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings">
            <summary>
            Contains editor data for the addressables system.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.kBuildPath">
            <summary>
            Build Path Name
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.kLoadPath">
            <summary>
            Load Path Name
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.kNewGroupName">
            <summary>
            Default name of a newly created group.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.kLocalBuildPath">
            <summary>
            Default name of local build path.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.kLocalLoadPath">
            <summary>
            Default name of local load path.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.kRemoteBuildPath">
            <summary>
            Default name of remote build path.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.kRemoteLoadPath">
            <summary>
            Default name of remote load path.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.kLocalBuildPathValue">
            <summary>
            Default value of local build path.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.kLocalLoadPathValue">
            <summary>
            Default value of local load path.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.kRemoteBuildPathValue">
            <summary>
            Default value of remote build path.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.kRemoteLoadPathValue">
            <summary>
            Default value of remote load path.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.PlayerBuildOption">
            <summary>
            Options for building Addressables when building a player.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.PlayerBuildOption.PreferencesValue">
            <summary>
            Use to indicate that the global settings (stored in preferences) will determine if building a player will also build Addressables.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.PlayerBuildOption.BuildWithPlayer">
            <summary>
            Use to indicate that building a player will also build Addressables.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.PlayerBuildOption.DoNotBuildWithPlayer">
            <summary>
            Use to indicate that building a player won't build Addressables.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent">
            <summary>
            Options for labeling all the different generated events.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.GroupAdded">
            <summary>
            Use to indicate that a group was added to the settings object.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.GroupRemoved">
            <summary>
            Use to indicate that a group was removed from the the settings object.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.GroupRenamed">
            <summary>
            Use to indicate that a group in the settings object was renamed.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.GroupSchemaAdded">
            <summary>
            Use to indicate that a schema was added to a group.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.GroupSchemaRemoved">
            <summary>
            Use to indicate that a schema was removed from a group.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.GroupSchemaModified">
            <summary>
            Use to indicate that a schema was modified.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.GroupTemplateAdded">
            <summary>
            Use to indicate that a group template was added to the settings object.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.GroupTemplateRemoved">
            <summary>
            Use to indicate that a group template was removed from the settings object.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.GroupTemplateSchemaAdded">
            <summary>
            Use to indicate that a schema was added to a group template.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.GroupTemplateSchemaRemoved">
            <summary>
            Use to indicate that a schema was removed from a group template.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.EntryCreated">
            <summary>
            Use to indicate that an asset entry was created.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.EntryAdded">
            <summary>
            Use to indicate that an asset entry was added to a group.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.EntryMoved">
            <summary>
            Use to indicate that an asset entry moved from one group to another.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.EntryRemoved">
            <summary>
            Use to indicate that an asset entry was removed from a group.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.LabelAdded">
            <summary>
            Use to indicate that an asset label was added to the settings object.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.LabelRemoved">
            <summary>
            Use to indicate that an asset label was removed from the settings object.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.ProfileAdded">
            <summary>
            Use to indicate that a profile was added to the settings object.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.ProfileRemoved">
            <summary>
            Use to indicate that a profile was removed from the settings object.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.ProfileModified">
            <summary>
            Use to indicate that a profile was modified.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.ActiveProfileSet">
            <summary>
            Use to indicate that a profile has been set as the active profile.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.EntryModified">
            <summary>
            Use to indicate that an asset entry was modified.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.BuildSettingsChanged">
            <summary>
            Use to indicate that the build settings object was modified.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.ActiveBuildScriptChanged">
            <summary>
            Use to indicate that a new build script is being used as the active build script.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.DataBuilderAdded">
            <summary>
            Use to indicate that a new data builder script was added to the settings object.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.DataBuilderRemoved">
            <summary>
            Use to indicate that a data builder script was removed from the settings object.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.InitializationObjectAdded">
            <summary>
            Use to indicate a new initialization object was added to the settings object.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.InitializationObjectRemoved">
            <summary>
            Use to indicate a initialization object was removed from the settings object.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.ActivePlayModeScriptChanged">
            <summary>
            Use to indicate that a new script is being used as the active playmode data builder.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.BatchModification">
            <summary>
            Use to indicate that a batch of asset entries was modified. Note that the posted object will be null.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.HostingServicesManagerModified">
            <summary>
            Use to indicate that the hosting services manager was modified.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.GroupMoved">
            <summary>
            Use to indicate that a group changed its order placement within the list of groups in the settings object.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent.CertificateHandlerChanged">
            <summary>
            Use to indicate that a new certificate handler is being used for the initialization object provider.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.AssetPath">
            <summary>
            The path of the settings asset.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ConfigFolder">
            <summary>
            The folder of the settings asset.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.GroupFolder">
            <summary>
            The folder for the group assets.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.DataBuilderFolder">
            <summary>
            The folder for the script assets.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.GroupSchemaFolder">
            <summary>
            The folder for the asset group schema assets.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.GroupTemplateFolder">
            <summary>
            The default folder for the group template assets.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.OnModification">
            <summary>
            Event for handling settings changes.  The object passed depends on the event type.
            </summary>
        </member>
        <member name="E:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.OnModificationGlobal">
            <summary>
            Event for handling settings changes on all instances of AddressableAssetSettings.  The object passed depends on the event type.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.OnDataBuilderComplete">
            <summary>
            Event for handling the result of a DataBuilder.Build call.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.IsPersisted">
            <summary>
            Returns whether this settings object is persisted to an asset.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.CatalogRequestsTimeout">
            <summary>
            The maximum time to download hash and json catalog files before a timeout error.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.MaxConcurrentWebRequests">
            <summary>
            The maximum number of concurrent web requests.  This value will be clamped from 1 to 1024.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.UniqueBundleIds">
            <summary>
            Set this to true to ensure unique bundle ids. Set to false to allow duplicate bundle ids.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ContiguousBundles">
            <summary>
            If set, packs assets in bundles contiguously based on the ordering of the source asset which results in improved asset loading times. Disable this if you've built bundles with a version of Addressables older than 1.12.1 and you want to minimize bundle changes.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.NonRecursiveBuilding">
            <summary>
            If set, Calculates and build asset bundles using Non-Recursive Dependency calculation methods. This approach helps reduce asset bundle rebuilds and runtime memory consumption.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.OptimizeCatalogSize">
            <summary>
            Enables size optimization of content catalogs.  This may increase the cpu usage of loading the catalog.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.BuildRemoteCatalog">
            <summary>
            Determine if a remote catalog should be built-for and loaded-by the app.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.BundleLocalCatalog">
            <summary>
            Whether the local catalog should be serialized in an asset bundle or as json.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.DisableCatalogUpdateOnStartup">
            <summary>
            Tells Addressables if it should check for a Content Catalog Update during the initialization step.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.StripUnityVersionFromBundleBuild">
            <summary>
            If true, this option will strip the Unity Editor Version from the header of the AssetBundle during a build.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.DisableVisibleSubAssetRepresentations">
            <summary>
            If true, the build will assume that sub Assets have no visible asset representations (are not visible in the Project view) which results in improved build times.
            However sub assets in the built bundles cannot be accessed by AssetBundle.LoadAsset&lt;T&gt; or AssetBundle.LoadAllAssets&lt;T&gt;.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.IgnoreUnsupportedFilesInBuild">
            <summary>
            Whether unsupported files during build should be ignored or treated as an error.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ShaderBundleNaming">
            <summary>
            Sets the naming convention used for the Unity built in shader bundle at build time.
            The recommended setting is Project Name.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ShaderBundleCustomNaming">
            <summary>
            Custom Unity built in shader bundle prefix that is used if AddressableAssetSettings.ShaderBundleNaming is set to ShaderBundleNaming.Custom.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.MonoScriptBundleNaming">
            <summary>
            Sets the naming convention used for the MonoScript bundle at build time. Or disabled MonoScript bundle generation.
            The recommended setting is Project Name.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.CheckForContentUpdateRestrictionsOption">
            <summary>
            Informs the Addressable system how to handle checking for Content Update Restrictions during a Content Update build.
            During this check, assets are flagged that have changed, yet are contained in a Group that has the Cannot Change Post Release option set.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.MonoScriptBundleCustomNaming">
            <summary>
            Custom MonoScript bundle prefix that is used if AddressableAssetSettings.MonoScriptBundleNaming is set to MonoScriptBundleNaming.Custom.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.RemoteCatalogBuildPath">
            <summary>
            The path to place a copy of the content catalog for online retrieval.  To do any content updates
            to an existing built app, there must be a remote catalog. Overwriting the catalog is how the app
            gets informed of the updated content.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.RemoteCatalogLoadPath">
            <summary>
            The path to load the remote content catalog from.  This is the location the app will check to
            look for updated catalogs, which is the only indication the app has for updated content.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ContentStateBuildPath">
            <summary>
            The path used for saving the addressables_content_state.bin file.  If empty, this will be the addressable settings config folder in your project.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.BuildAddressablesWithPlayerBuild">
            <summary>
            Defines if Addressables content will be built along with a Player build. (Requires 2021.2 or above)
            </summary>
            <remarks>
            Build with Player, will build Addressables with a Player build, this overrides preferences value.
            Do not Build with Player, will not build Addressables with a Player build, this overrides preferences value.
            Preferences value, will build with the Player dependant on is the user preferences value for "Build Addressables on Player build" is set.
            </remarks>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.currentHash">
            <summary>
            Hash of the current settings.  This value is recomputed if anything changes.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.CreateAssetReference(System.String)">
            <summary>
            Create an AssetReference object.  If the asset is not already addressable, it will be added.
            </summary>
            <param name="guid">The guid of the asset reference.</param>
            <returns>Returns the newly created AssetReference.</returns>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.OverridePlayerVersion">
            <summary>
            Allows for overriding the player version used to generated catalog names.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.PlayerBuildVersion">
            <summary>
            The version of the player build.  This is implemented as a timestamp int UTC of the form  string.Format("{0:D4}.{1:D2}.{2:D2}.{3:D2}.{4:D2}.{5:D2}", now.Year, now.Month, now.Day, now.Hour, now.Minute, now.Second).
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.groups">
            <summary>
            List of asset groups.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.buildSettings">
            <summary>
            Build settings object.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.profileSettings">
            <summary>
            Profile settings object.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.labelTable">
            <summary>
            LabelTable object.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.RemoveSchemaTemplate(System.Int32,System.Boolean)">
            <summary>
            Remove  the schema at the specified index.
            </summary>
            <param name="index">The index to remove at.</param>
            <param name="postEvent">Indicates if an even should be posted to the Addressables event system for this change.</param>
            <returns>True if the schema was removed.</returns>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.GroupTemplateObjects">
            <summary>
            List of ScriptableObjects that implement the IGroupTemplate interface for providing new templates.
            For use in the AddressableAssetsWindow to display new groups to create
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.GetGroupTemplateObject(System.Int32)">
            <summary>
            Get the IGroupTemplate at the specified index.
            </summary>
            <param name="index">The index of the template object.</param>
            <returns>The AddressableAssetGroupTemplate object at the specified index.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.AddGroupTemplateObject(UnityEditor.AddressableAssets.Settings.IGroupTemplate,System.Boolean)">
            <summary>
            Adds a AddressableAssetsGroupTemplate object.
            </summary>
            <param name="templateObject">The AddressableAssetGroupTemplate object to add.</param>
            <param name="postEvent">Indicates if an even should be posted to the Addressables event system for this change.</param>
            <returns>True if the initialization object was added.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.RemoveGroupTemplateObject(System.Int32,System.Boolean)">
            <summary>
            Remove the AddressableAssetGroupTemplate object at the specified index.
            </summary>
            <param name="index">The index to remove.</param>
            <param name="postEvent">Indicates if an event should be posted to the Addressables event system for this change.</param>
            <returns>True if the initialization object was removed.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.SetGroupTemplateObjectAtIndex(System.Int32,UnityEditor.AddressableAssets.Settings.IGroupTemplate,System.Boolean)">
            <summary>
            Sets the initialization object at the specified index.
            </summary>
            <param name="index">The index to set the initialization object.</param>
            <param name="templateObject">The rroup template object to set.  This must be a valid scriptable object that implements the IGroupTemplate interface.</param>
            <param name="postEvent">Indicates if an even should be posted to the Addressables event system for this change.</param>
            <returns>True if the initialization object was set, false otherwise.</returns>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.InitializationObjects">
            <summary>
            List of ScriptableObjects that implement the IObjectInitializationDataProvider interface for providing runtime initialization.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.GetInitializationObject(System.Int32)">
            <summary>
            Get the IObjectInitializationDataProvider at a specifc index.
            </summary>
            <param name="index">The index of the initialization object.</param>
            <returns>The initialization object at the specified index.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.AddInitializationObject(UnityEngine.ResourceManagement.Util.IObjectInitializationDataProvider,System.Boolean)">
            <summary>
            Adds an initialization object.
            </summary>
            <param name="initObject">The initialization object to add.</param>
            <param name="postEvent">Indicates if an even should be posted to the Addressables event system for this change.</param>
            <returns>True if the initialization object was added.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.RemoveInitializationObject(System.Int32,System.Boolean)">
            <summary>
            Remove the initialization object at the specified index.
            </summary>
            <param name="index">The index to remove.</param>
            <param name="postEvent">Indicates if an even should be posted to the Addressables event system for this change.</param>
            <returns>True if the initialization object was removed.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.SetInitializationObjectAtIndex(System.Int32,UnityEngine.ResourceManagement.Util.IObjectInitializationDataProvider,System.Boolean)">
            <summary>
            Sets the initialization object at the specified index.
            </summary>
            <param name="index">The index to set the initialization object.</param>
            <param name="initObject">The initialization object to set.  This must be a valid scriptable object that implements the IInitializationObject interface.</param>
            <param name="postEvent">Indicates if an even should be posted to the Addressables event system for this change.</param>
            <returns>True if the initialization object was set, false otherwise.</returns>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.CertificateHandlerType">
            <summary>
            The type of CertificateHandler to use for this provider.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.DataBuilders">
            <summary>
            List of ScriptableObjects that implement the IDataBuilder interface.  These are used to create data for editor play mode and for player builds.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.GetDataBuilder(System.Int32)">
            <summary>
            Get The data builder at a specifc index.
            </summary>
            <param name="index">The index of the builder.</param>
            <returns>The data builder at the specified index.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.AddDataBuilder(UnityEditor.AddressableAssets.Build.IDataBuilder,System.Boolean)">
            <summary>
            Adds a data builder.
            </summary>
            <param name="builder">The data builder to add.</param>
            <param name="postEvent">Indicates if an even should be posted to the Addressables event system for this change.</param>
            <returns>True if the data builder was added.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.RemoveDataBuilder(System.Int32,System.Boolean)">
            <summary>
            Remove the data builder at the sprcified index.
            </summary>
            <param name="index">The index to remove.</param>
            <param name="postEvent">Indicates if an even should be posted to the Addressables event system for this change.</param>
            <returns>True if the builder was removed.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.SetDataBuilderAtIndex(System.Int32,UnityEditor.AddressableAssets.Build.IDataBuilder,System.Boolean)">
            <summary>
            Sets the data builder at the specified index.
            </summary>
            <param name="index">The index to set the builder.</param>
            <param name="builder">The builder to set.  This must be a valid scriptable object that implements the IDataBuilder interface.</param>
            <param name="postEvent">Indicates if an even should be posted to the Addressables event system for this change.</param>
            <returns>True if the builder was set, false otherwise.</returns>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ActivePlayerDataBuilder">
            <summary>
            Get the active data builder for player data.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ActivePlayModeDataBuilder">
            <summary>
            Get the active data builder for editor play mode data.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ActivePlayerDataBuilderIndex">
            <summary>
            Get the index of the active player data builder.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ActivePlayModeDataBuilderIndex">
            <summary>
            Get the index of the active play mode data builder.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.GetLabels">
            <summary>
            Gets the list of all defined labels.
            </summary>
            <returns>Returns a list of all defined labels.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.AddLabel(System.String,System.Boolean)">
            <summary>
            Add a new label.
            </summary>
            <param name="label">The label name.</param>
            <param name="postEvent">Send modification event.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.RemoveLabel(System.String,System.Boolean)">
            <summary>
            Remove a label by name.
            </summary>
            <param name="label">The label name.</param>
            <param name="postEvent">Send modification event.</param>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.activeProfileId">
            <summary>
            The active profile id.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.HostingServicesManager">
            <summary>
            Get the HostingServicesManager object.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.GetAllAssets(System.Collections.Generic.List{UnityEditor.AddressableAssets.Settings.AddressableAssetEntry},System.Boolean,System.Func{UnityEditor.AddressableAssets.Settings.AddressableAssetGroup,System.Boolean},System.Func{UnityEditor.AddressableAssets.Settings.AddressableAssetEntry,System.Boolean})">
            <summary>
            Gets all asset entries from all groups.
            </summary>
            <param name="assets">The list of asset entries.</param>
            <param name="includeSubObjects">Determines if sub objects such as sprites should be included.</param>
            <param name="groupFilter">A method to filter groups.  Groups will be processed if filter is null, or it returns TRUE</param>
            <param name="entryFilter">A method to filter entries.  Entries will be processed if filter is null, or it returns TRUE</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.RemoveAssetEntry(System.String,System.Boolean)">
            <summary>
            Remove an asset entry.
            </summary>
            <param name="guid">The  guid of the asset.</param>
            <param name="postEvent">Send modifcation event.</param>
            <returns>True if the entry was found and removed.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.RemoveAssetEntry(UnityEditor.AddressableAssets.Settings.AddressableAssetEntry,System.Boolean)">
            <summary>
            Remove an asset entry.
            </summary>
            <param name="entry">The entry to remove.</param>
            <param name="postEvent">Send modifcation event.</param>
            <returns>True if the entry was found and removed.</returns>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.PlayerDataGroupName">
            <summary>
            The default name of the built in player data AddressableAssetGroup
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.DefaultLocalGroupName">
            <summary>
            The default name of the local data AddressableAsssetGroup
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.Create(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Create a new AddressableAssetSettings object.
            </summary>
            <param name="configFolder">The folder to store the settings object.</param>
            <param name="configName">The name of the settings object.</param>
            <param name="createDefaultGroups">If true, create groups for player data and local packed content.</param>
            <param name="isPersisted">If true, assets are created.</param>
            <returns></returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.CreateAndAddGroupTemplate(System.String,System.String,System.Type[])">
            <summary>
            Creates a new AddressableAssetGroupTemplate Object with the set of schema types with default settings for use in the editor GUI.
            </summary>
            <param name="displayName">The display name of the template.</param>
            <param name="description">Description text use with the template.</param>
            <param name="types">The schema types for the template.</param>
            <returns>True if the template was added, false otherwise.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.FindGroup(System.Func{UnityEditor.AddressableAssets.Settings.AddressableAssetGroup,System.Boolean})">
            <summary>
            Find asset group by functor.
            </summary>
            <param name="func">The functor to call on each group.  The first group that evaluates to true is returned.</param>
            <returns>The group found or null.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.FindGroup(System.String)">
            <summary>
            Find asset group by name.
            </summary>
            <param name="groupName">The name of the group.</param>
            <returns>The group found or null.</returns>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.DefaultGroup">
            <summary>
            The default group.  This group is used when marking assets as addressable via the inspector.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.SetDirty(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Marks the object as modified.
            </summary>
            <param name="modificationEvent">The event type that is changed.</param>
            <param name="eventData">The object data that corresponds to the event.</param>
            <param name="postEvent">If true, the event is propagated to callbacks.</param>
            <param name="settingsModified">If true, the settings asset will be marked as dirty.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.FindAssetEntry(System.String)">
            <summary>
            Find and asset entry by guid.
            </summary>
            <param name="guid">The asset guid.</param>
            <returns>The found entry or null.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.FindAssetEntry(System.String,System.Boolean)">
            <summary>
            Find and asset entry by guid.
            </summary>
            <param name="guid">The asset guid.</param>
            <param name="includeImplicit">Whether or not to include implicit asset entries in the search.</param>
            <returns>The found entry or null.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.MoveEntries(System.Collections.Generic.List{UnityEditor.AddressableAssets.Settings.AddressableAssetEntry},UnityEditor.AddressableAssets.Settings.AddressableAssetGroup,System.Boolean,System.Boolean)">
            <summary>
            Move an existing entry to a group.
            </summary>
            <param name="entries">The entries to move.</param>
            <param name="targetParent">The group to add the entries to.</param>
            <param name="readOnly">Should the entries be read only.</param>
            <param name="postEvent">Send modification event.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.MoveEntry(UnityEditor.AddressableAssets.Settings.AddressableAssetEntry,UnityEditor.AddressableAssets.Settings.AddressableAssetGroup,System.Boolean,System.Boolean)">
            <summary>
            Move an existing entry to a group.
            </summary>
            <param name="entry">The entry to move.</param>
            <param name="targetParent">The group to add the entry to.</param>
            <param name="readOnly">Should the entry be read only.</param>
            <param name="postEvent">Send modification event.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.CreateOrMoveEntry(System.String,UnityEditor.AddressableAssets.Settings.AddressableAssetGroup,System.Boolean,System.Boolean)">
            <summary>
            Create a new entry, or if one exists in a different group, move it into the new group.
            </summary>
            <param name="guid">The asset guid.</param>
            <param name="targetParent">The group to add the entry to.</param>
            <param name="readOnly">Is the new entry read only.</param>
            <param name="postEvent">Send modification event.</param>
            <returns></returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.CreateOrMoveEntries(System.Collections.Generic.IEnumerable{System.String},UnityEditor.AddressableAssets.Settings.AddressableAssetGroup,System.Collections.Generic.List{UnityEditor.AddressableAssets.Settings.AddressableAssetEntry},System.Collections.Generic.List{UnityEditor.AddressableAssets.Settings.AddressableAssetEntry},System.Boolean,System.Boolean)">
            <summary>
            Create a new entries for each asset, or if one exists in a different group, move it into the targetParent group.
            </summary>
            <param name="guids">The asset guid's to move.</param>
            <param name="targetParent">The group to add the entries to.</param>
            <param name="createdEntries">List to add new entries to. If null, the list will be ignored.</param>
            <param name="movedEntries">List to add moved entries to. If null, the list will be ignored.</param>
            <param name="readOnly">Is the new entry read only.</param>
            <param name="postEvent">Send modification event.</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.CreateGroup(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.List{UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchema},System.Type[])">
            <summary>
            Create a new asset group.
            </summary>
            <param name="groupName">The group name.</param>
            <param name="setAsDefaultGroup">Set the new group as the default group.</param>
            <param name="readOnly">Is the new group read only.</param>
            <param name="postEvent">Post modification event.</param>
            <param name="schemasToCopy">Schema set to copy from.</param>
            <param name="types">Types of schemas to add.</param>
            <returns>The newly created group.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.RemoveGroup(UnityEditor.AddressableAssets.Settings.AddressableAssetGroup)">
            <summary>
            Remove an asset group.
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.BuildPlayerContent">
            <summary>
            Runs the active player data build script to create runtime data.
            See the [BuildPlayerContent](xref:addressables-api-build-player-content) documentation for more details.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.BuildPlayerContent(UnityEditor.AddressableAssets.Build.AddressablesPlayerBuildResult@)">
            <summary>
            Runs the active player data build script to create runtime data.
            See the [BuildPlayerContent](xref:addressables-api-build-player-content) documentation for more details.
            </summary>
            <param name="result">Results from running the active player data build script.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.CleanPlayerContent(UnityEditor.AddressableAssets.Build.IDataBuilder)">
            <summary>
            Deletes all created runtime data for the active player data builder.
            </summary>
            <param name="builder">The builder to call ClearCachedData on.  If null, all builders will be cleaned</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.RegisterCustomAssetEntryCommand(System.String,System.Action{System.Collections.Generic.IEnumerable{UnityEditor.AddressableAssets.Settings.AddressableAssetEntry}})">
            <summary>
            Register a custom command to process asset entries.  These commands will be shown in the context menu of the groups window.
            </summary>
            <param name="cmdId">The id of the command.  This will be used for the display name of the context menu item.</param>
            <param name="cmdFunc">The command handler function.</param>
            <returns>Returns true if the command was registered.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.UnregisterCustomAssetEntryCommand(System.String)">
            <summary>
            Removes a registered custom entry command.
            </summary>
            <param name="cmdId">The command id.</param>
            <returns>Returns true if the command was removed.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.InvokeAssetEntryCommand(System.String,System.Collections.Generic.IEnumerable{UnityEditor.AddressableAssets.Settings.AddressableAssetEntry})">
            <summary>
            Invoke a registered command for a set of entries.
            </summary>
            <param name="cmdId">The id of the command.</param>
            <param name="entries">The entries to run the command on.</param>
            <returns>Returns true if the command was executed without exceptions.</returns>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.CustomAssetEntryCommands">
            <summary>
            The ids of the registered commands.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.RegisterCustomAssetGroupCommand(System.String,System.Action{System.Collections.Generic.IEnumerable{UnityEditor.AddressableAssets.Settings.AddressableAssetGroup}})">
            <summary>
            Register a custom command to process asset groups.  These commands will be shown in the context menu of the groups window.
            </summary>
            <param name="cmdId">The id of the command.  This will be used for the display name of the context menu item.</param>
            <param name="cmdFunc">The command handler function.</param>
            <returns>Returns true if the command was registered.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.UnregisterCustomAssetGroupCommand(System.String)">
            <summary>
            Removes a registered custom group command.
            </summary>
            <param name="cmdId">The command id.</param>
            <returns>Returns true if the command was removed.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.InvokeAssetGroupCommand(System.String,System.Collections.Generic.IEnumerable{UnityEditor.AddressableAssets.Settings.AddressableAssetGroup})">
            <summary>
            Invoke a registered command for a set of groups.
            </summary>
            <param name="cmdId">The id of the command.</param>
            <param name="groups">The groups to run the command on.</param>
            <returns>Returns true if the command was invoked successfully.</returns>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.CustomAssetGroupCommands">
            <summary>
            The ids of the registered commands.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.FastModeInitializationOperation.InvokeWaitForCompletion">
            <inheritdoc />
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.ProfileValueReference">
            <summary>
            Used to store references to profile variables.  This class is intended to be used for fields in user scripts, specifically ones that subclass AddressableAssetGroupSchema.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.ProfileValueReference.OnValueChanged">
            <summary>
            This delegate will be invoked when the reference profile id changes.  This will NOT be invoked when the actual profile value itself changes.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.ProfileValueReference.Id">
            <summary>
            Get the profile variable id.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProfileValueReference.GetValue(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <summary>
            Evaluate the profile value using the provided settings object.
            </summary>
            <param name="settings">The settings object to evaluate with.  The activeProfileId will be used.</param>
            <returns>The evaluated string stored in the referenced profile variable.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProfileValueReference.GetValue(UnityEditor.AddressableAssets.Settings.AddressableAssetProfileSettings,System.String)">
            <summary>
            Evaluate the profile value using the provided profile settings object and a profile id.
            </summary>
            <param name="profileSettings">The profile settings object.</param>
            <param name="profileId">The profile id.</param>
            <returns>The evaluated string stored in the referenced profile variable.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProfileValueReference.GetName(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <summary>
            Get the profile variable name that is referenced.
            </summary>
            <param name="settings">The settings object.</param>
            <returns>The name of the profile variable name.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProfileValueReference.SetVariableById(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings,System.String)">
            <summary>
            Set the profile variable id using the id of the variable.
            </summary>
            <param name="settings">The settings object.</param>
            <param name="id">The id of the profile variable to set.</param>
            <returns>True if the profile data is found and set, false otherwise.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProfileValueReference.SetVariableByName(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings,System.String)">
            <summary>
            Set the profile variable id using the name of the variable.
            </summary>
            <param name="settings">The settings object.</param>
            <param name="name">The name of the profile variable to set.</param>
            <returns>True if the profile data is found and set, false otherwise.</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.ProjectConfigData">
            <summary>
            The project configuration settings for addressables.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.ProjectConfigData.ShowSubObjectsInGroupView">
            <summary>
            Whether to display sub objects in the Addressables Groups window.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.ProjectConfigData.GenerateBuildLayout">
            <summary>
            Whether to generate the bundle build layout report.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.ProjectConfigData.ReportFileFormat">
            <summary>
            File formats supported for the bundle build layout report.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.ProjectConfigData.ReportFileFormat.TXT">
            <summary>
            When selected, a human readable .txt build layout will be generated alongside the .json file format
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.ProjectConfigData.ReportFileFormat.JSON">
            <summary>
            The .json file format.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.ProjectConfigData.BuildLayoutReportFileFormat">
            <summary>
            File format of the bundle build layout report.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.ProjectConfigData.BuildReportFilePaths">
            <summary>
            Returns the file paths of build reports used by the Build Reports window.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProjectConfigData.AddBuildReportFilePath(System.String)">
            <summary>
            Adds the filepath of a build report to be used by the Build Reports window
            </summary>
            <param name="reportFilePath">The file path to add</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProjectConfigData.RemoveBuildReportFilePathAtIndex(System.Int32)">
            <summary>
            Removes the build report at index from the list of build reports shown in the Build Reports window
            </summary>
            <param name="index">The index of the build report to be removed</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProjectConfigData.RemoveBuildReportFilePath(System.String)">
            <summary>
            Removes the build report located at reportFilePath from the list of build reports shown in the Build Reports window
            </summary>
            <param name="reportFilePath"></param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.ProjectConfigData.ClearBuildReportFilePaths">
            <summary>
            Removes all build reports from the Build Reports window
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.ProjectConfigData.ActivePlayModeIndex">
            <summary>
            The active play mode data builder index.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.ProjectConfigData.PostProfilerEvents">
            <summary>
            Whether to post profiler events in the ResourceManager profiler window.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.ProjectConfigData.LocalLoadSpeed">
            <summary>
            The local bundle loading speed used in the Simulate Groups (advanced) playmode.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.ProjectConfigData.RemoteLoadSpeed">
            <summary>
            The remote bundle loading speed used in the Simulate Groups (advanced) playmode.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.ProjectConfigData.HierarchicalSearch">
            <summary>
            Whether to allow searching for assets parsed hierarchally in the Addressables Groups window.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.ProjectConfigData.ShowGroupsAsHierarchy">
            <summary>
            Whether to display groups names parsed hierarchally in the Addressables Groups window.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.AddressablesFileEnumeration">
            <summary>
            Methods for enumerating Addressable folders.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressablesFileEnumeration.EnumerateAddressableFolder(System.String,UnityEditor.AddressableAssets.Settings.AddressableAssetSettings,System.Boolean,UnityEditor.Build.Pipeline.Interfaces.IBuildLogger)">
            <summary>
            Collects and returns all the asset paths of a given Addressable folder entry
            </summary>
            <param name="path">The path of the folder</param>
            <param name="settings">The AddressableAssetSettings used to gather sub entries.</param>
            <param name="recurseAll">Flag indicating if the folder should be traversed recursively.</param>
            <param name="logger">Used to log messages during a build, if desired.</param>
            <returns>List of asset files in a given folder entry</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchemaTemplate">
            <summary>
            Contains a set of schemas used by the GUI to create predefined asset groups.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchemaTemplate.DisplayName">
            <summary>
            The display name of the template.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchemaTemplate.Description">
            <summary>
            the description of the template.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchemaTemplate.GetTypes">
            <summary>
            The types of schemas in this template.
            </summary>
            <returns>The array of schema types.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchemaTemplate.Create(System.String,System.String,System.Type[])">
            <summary>
            Creates a template with the specified name, description and schema types.
            </summary>
            <param name="name">The name of the template.</param>
            <param name="descr">The template description.</param>
            <param name="types">The schema types for the template.</param>
            <returns>The newly created schema template.</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.AddressableAssetBuildSettings">
            <summary>
            Build settings for addressables.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetBuildSettings.compileScriptsInVirtualMode">
            <summary>
            Controls whether to compile scripts when running in virtual mode.  When disabled, build times are faster but the simulated bundle contents may not be accurate due to including editor code.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetBuildSettings.cleanupStreamingAssetsAfterBuilds">
            <summary>
            Controls whether to remove temporary files after each build.  When disabled, build times in packed mode are faster, but may not reflect all changes in assets.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetBuildSettings.LogResourceManagerExceptions">
            <summary>
            When enabled, the Addressables.ResourceManager.ExceptionHandler is set to (op, ex) => Debug.LogException(ex);
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetBuildSettings.bundleBuildPath">
            <summary>
            //Specifies where to build asset bundles, this is usually a temporary folder (or a folder in the project).  Bundles are copied out of this location to their final destination.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.GroupSchemas.PlayerDataGroupSchema">
            <summary>
            Schema for the player data asset group
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.PlayerDataGroupSchema.IncludeResourcesFolders">
            <summary>
            If enabled, all assets in resources folders will have addresses generated during the build.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.PlayerDataGroupSchema.IncludeBuildSettingsScenes">
            <summary>
            If enabled, all scenes in the editor build settings will have addresses generated during the build.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.GroupSchemas.PlayerDataGroupSchema.OnGUIMultiple(System.Collections.Generic.List{UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchema})">
            <inheritdoc/>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema">
            <summary>
            Schema used for bundled asset groups.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundlePackingMode">
            <summary>
            Defines how bundles are created.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundlePackingMode.PackTogether">
            <summary>
            Creates a bundle for all non-scene entries and another for all scenes entries.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundlePackingMode.PackSeparately">
            <summary>
            Creates a bundle per entry.  This is useful if each entry is a folder as all sub entries will go to the same bundle.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundlePackingMode.PackTogetherByLabel">
            <summary>
            Creates a bundle per unique set of labels
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundleInternalIdMode">
            <summary>
            Defines how internal bundles are named. This is used for both caching and for inter-bundle dependecies.  If possible, GroupGuidProjectIdHash should be used as it is stable and unique between projects.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundleInternalIdMode.GroupGuid">
            <summary>
            Use the guid of the group asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundleInternalIdMode.GroupGuidProjectIdHash">
            <summary>
            Use the hash of the group asset guid and the project id
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundleInternalIdMode.GroupGuidProjectIdEntriesHash">
            <summary>
            Use the hash of the group asset, the project id and the guids of the entries in the group
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundleCompressionMode">
            <summary>
            Options for compressing bundles in this group.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundleCompressionMode.Uncompressed">
            <summary>
            Use to indicate that bundles will not be compressed.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundleCompressionMode.LZ4">
            <summary>
            Use to indicate that bundles will be compressed using the LZ4 compression algorithm.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundleCompressionMode.LZMA">
            <summary>
            Use to indicate that bundles will be compressed using the LZMA compression algorithm.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.InternalBundleIdMode">
            <summary>
            Internal bundle naming mode
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.Compression">
            <summary>
            Build compression.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.AssetNamingMode">
            <summary>
            Options for internal id of assets in bundles.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.AssetNamingMode.FullPath">
            <summary>
            Use to identify assets by their full path.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.AssetNamingMode.Filename">
            <summary>
            Use to identify assets by their filename only.  There is a risk of collisions when assets in different folders have the same filename.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.AssetNamingMode.GUID">
            <summary>
            Use to identify assets by their asset guid.  This will save space over using the full path and will be stable if assets move in the project.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.AssetNamingMode.Dynamic">
            <summary>
            This method attempts to use the smallest identifier for internal asset ids.  For asset bundles with very few items, this can save a significant amount of space in the content catalog.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.IncludeAddressInCatalog">
            <summary>
            If enabled, addresses are included in the content catalog.  This is required if assets are to be loaded via their main address.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.IncludeGUIDInCatalog">
            <summary>
            If enabled, guids are included in content catalogs.  This is required if assets are to be loaded via AssetReference.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.IncludeLabelsInCatalog">
            <summary>
            If enabled, labels are included in the content catalogs.  This is required if labels are used at runtime load load assets.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.InternalIdNamingMode">
            <summary>
            Internal Id mode for assets in bundles.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.CacheClearBehavior">
            <summary>
            Behavior for clearing old bundles from the cache.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.CacheClearBehavior.ClearWhenSpaceIsNeededInCache">
            <summary>
            Bundles are only removed from the cache when space is needed.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.CacheClearBehavior.ClearWhenWhenNewVersionLoaded">
            <summary>
            Bundles are removed from the cache when a newer version has been loaded successfully.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.AssetBundledCacheClearBehavior">
            <summary>
            Determines how other cached versions of asset bundles are cleared.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.GetBuildCompressionForBundle(System.String)">
            <summary>
            Gets the build compression settings for bundles in this group.
            </summary>
            <param name="bundleId">The bundle id.</param>
            <returns>The build compression.</returns>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.IncludeInBuild">
            <summary>
            If true, the assets in this group will be included in the build of bundles.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundledAssetProviderType">
            <summary>
            The provider type to use for loading assets from bundles.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.ForceUniqueProvider">
            <summary>
            If true, the bundle and asset provider for assets in this group will get unique provider ids and will only provide for assets in this group.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.UseAssetBundleCache">
            <summary>
            If true, the CRC and Hash values of the asset bundle are used to determine if a bundle can be loaded from the local cache instead of downloaded.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.UseAssetBundleCrc">
            <summary>
            If true, the CRC and Hash values of the asset bundle are used to determine if a bundle can be loaded from the local cache instead of downloaded.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.UseAssetBundleCrcForCachedBundles">
            <summary>
            If true, the CRC and Hash values of the asset bundle are used to determine if a bundle can be loaded from the local cache instead of downloaded.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.UseUnityWebRequestForLocalBundles">
            <summary>
            If true, local asset bundles will be loaded through UnityWebRequest.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.Timeout">
            <summary>
            Attempt to abort after the number of seconds in timeout have passed, where the UnityWebRequest has received no data.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.ChunkedTransfer">
            <summary>
            Indicates whether the UnityWebRequest system should employ the HTTP/1.1 chunked-transfer encoding method.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.RedirectLimit">
            <summary>
            Indicates the number of redirects which this UnityWebRequest will follow before halting with a “Redirect Limit Exceeded” system error.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.RetryCount">
            <summary>
            Indicates the number of times the request will be retried.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BuildPath">
            <summary>
            The path to copy asset bundles to.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.LoadPath">
            <summary>
            The path to load bundles from.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundleMode">
            <summary>
            Controls how bundles are packed.  If set to PackTogether, a single asset bundle will be created for the entire group, with the exception of scenes, which are packed in a second bundle.  If set to PackSeparately, an asset bundle will be created for each entry in the group; in the case that an entry is a folder, one bundle is created for the folder and all of its sub entries.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.HostingServicesContentRoot">
            <inheritdoc/>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.AssetBundleProviderType">
            <summary>
            The provider type to use for loading asset bundles.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.m_UseCustomPaths">
            <summary>
            Used to determine if dropdown should be custom
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.settings">
            <summary>
            Internal settings
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.OnSetGroup(UnityEditor.AddressableAssets.Settings.AddressableAssetGroup)">
            <summary>
            Set default values taken from the assigned group.
            </summary>
            <param name="group">The group this schema has been added to.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.OnBeforeSerialize">
            <summary>
            Impementation of ISerializationCallbackReceiver, does nothing.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.OnAfterDeserialize">
            <summary>
            Impementation of ISerializationCallbackReceiver, used to set callbacks for ProfileValueReference changes.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.GetAssetCachedProviderId">
            <summary>
            Returns the id of the asset provider needed to load from this group.
            </summary>
            <returns>The id of the cached provider needed for this group.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.GetBundleCachedProviderId">
            <summary>
            Returns the id of the bundle provider needed to load from this group.
            </summary>
            <returns>The id of the cached provider needed for this group.</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundleNamingStyle">
            <summary>
            Used to determine how the final bundle name should look.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundleNamingStyle.AppendHash">
            <summary>
            Use to indicate that the hash should be appended to the bundle name.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundleNamingStyle.NoHash">
            <summary>
            Use to indicate that the bundle name should not contain the hash.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundleNamingStyle.OnlyHash">
            <summary>
            Use to indicate that the bundle name should only contain the given hash.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundleNamingStyle.FileNameHash">
            <summary>
            Use to indicate that the bundle name should only contain the hash of the file name.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundleNamingStylePropertyDrawer">
            <summary>
            Used to draw the Bundle Naming popup
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundleNamingStylePropertyDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
            <summary>
            Custom Drawer for the BundleNamingStyle in order to display easier to understand display names.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundleNaming">
            <summary>
            Naming style to use for generated AssetBundle(s).
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.AssetLoadMode">
            <summary>
            Will load all Assets into memory from the AssetBundle after the AssetBundle is loaded.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.ShowAllProperties">
            <summary>
            Used for drawing properties in the inspector.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.OnGUI">
            <inheritdoc/>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.OnGUIMultiple(System.Collections.Generic.List{UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchema})">
            <inheritdoc/>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.GroupSchemas.ContentUpdateGroupSchema">
            <summary>
            Schema for content updates.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.GroupSchemas.ContentUpdateGroupSchema.StaticContent">
            <summary>
            Is the group static.  This property is used in determining which assets need to be moved to a new remote group during the content update process.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.GroupSchemas.ContentUpdateGroupSchema.OnGUI">
            <inheritdoc/>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.GroupSchemas.ContentUpdateGroupSchema.OnGUIMultiple(System.Collections.Generic.List{UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchema})">
            <inheritdoc/>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.AddressableAssetEntryCollection">
            <summary>
            Contains a list of AddressableAssetEntries that can be included in the settings.  The purpose of this class is to provide a way of combining entries from external sources such as packages into your project settings.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetEntryCollection.Entries">
            <summary>
            The collection of entries.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupTemplate">
            <summary>
            Used to create template groups to make it easier for the user to create new groups.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupTemplate.SchemaPresetObjects">
            <summary>
            Returns a list of Preset objects for AddressableAssetGroupSchema associated with this template
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupTemplate.SchemaObjects">
            <summary>
            Returns the list of Preset objects of AddressableAssetGroupSchema associated with this template
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupTemplate.Name">
            <summary>
            The name of the AddressableAssetGroupTemplate
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupTemplate.Description">
            <summary>
            The description of the AddressableAssetGroupTemplate
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupTemplate.GetTypes">
            <summary>
            Gets the types of the AddressableAssetGroupSchema associated with this template
            </summary>
            <returns>AddressableAssetGroupSchema types for schema on this template</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupTemplate.ApplyToAddressableAssetGroup(UnityEditor.AddressableAssets.Settings.AddressableAssetGroup)">
            <summary>
            Applies schema values for the group to the schema values found in the template
            </summary>
            <param name="group">The AddressableAssetGroup to apply the schema settings to</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupTemplate.AddSchema(System.Type,System.Boolean)">
            <summary>
            Adds the AddressableAssetGroupSchema of type to the template.
            </summary>
            <param name="type">The Type for the AddressableAssetGroupSchema to add to this template.</param>
            <param name="postEvent">If true, the event is propagated to callbacks.</param>
            <returns>If true, the type was added successfully.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupTemplate.RemoveSchema(System.Type,System.Boolean)">
            <summary>
            Removes the AddressableAssetGroupSchema of the type from the template.
            </summary>
            <param name="type">The type of AddressableAssetGroupSchema to be removed.</param>
            <param name="postEvent">If true, the event is propagated to callbacks.</param>
            <returns>If true, the type was removed successfully.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupTemplate.RemoveSchema(System.Int32,System.Boolean)">
            <summary>
            Removes the Schema at the given index.
            </summary>
            <param name="index">The index of the object to be removed.</param>
            <param name="postEvent">If true, the event is propagated to callbacks.</param>
            <returns>If true, the type was removed successfully.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupTemplate.SetDirty(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings.ModificationEvent,System.Object,System.Boolean)">
            <summary>
            Marks the object as modified.
            </summary>
            <param name="modificationEvent">The event type that is changed.</param>
            <param name="eventData">The object data that corresponds to the event.</param>
            <param name="postEvent">If true, the event is propagated to callbacks.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupTemplate.HasSchema(System.Type)">
            <summary>
            Checks if the group contains a schema of a given type.
            </summary>
            <param name="type">The schema type.</param>
            <returns>True if the schema type or subclass has been added to this group.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupTemplate.GetSchemaByType(System.Type)">
            <summary>
            Gets an added schema of the specified type.
            </summary>
            <param name="type">The schema type.</param>
            <returns>The schema if found, otherwise null.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupTemplate.FindSchema(System.Type)">
            <summary>
            Gets the index of a schema based on its specified type.
            </summary>
            <param name="type">The schema type.</param>
            <returns>Valid index if found, otherwise returns -1.</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.CacheInitializationSettings">
            <summary>
            Asset container for CacheInitializationData.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.CacheInitializationSettings.Name">
            <summary>
            Display name used in GUI for this object.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.CacheInitializationSettings.Data">
            <summary>
            The cache initialization data that will be serialized and applied during Addressables initialization.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.CacheInitializationSettings.CreateObjectInitializationData">
            <summary>
            Create initialization data to be serialized into the Addressables runtime data.
            </summary>
            <returns>The serialized data for the initialization class and the data.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetUtility.GetTypes``1">
            <summary>
            Get all types that can be assigned to type T
            </summary>
            <typeparam name="T">The class type to use as the base class or interface for all found types.</typeparam>
            <returns>A list of types that are assignable to type T.  The results are cached.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetUtility.GetTypes(System.Type)">
            <summary>
            Get all types that can be assigned to type rootType.
            </summary>
            <param name="rootType">The class type to use as the base class or interface for all found types.</param>
            <returns>A list of types that are assignable to type T.  The results are not cached.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetUtility.SortedDelegate`4.Unregister(UnityEditor.AddressableAssets.Settings.AddressableAssetUtility.SortedDelegate{`0,`1,`2,`3}.Delegate)">
            <summary>
            Removes a delegate from the invocation list.
            </summary>
            <param name="toUnregister">Delegate to remove</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetUtility.SortedDelegate`4.Register(UnityEditor.AddressableAssets.Settings.AddressableAssetUtility.SortedDelegate{`0,`1,`2,`3}.Delegate,System.Int32)">
            <summary>
            Add a delegate to the invocation list
            </summary>
            <param name="toRegister">Delegate to add</param>
            <param name="order">Order to call the delegate in the invocation list</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetUtility.SortedDelegate`4.Invoke(`0,`1,`2,`3)">
            <summary>
            Invoke all delegates in the invocation list for the given parameters
            </summary>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <param name="arg3"></param>
            <param name="arg4"></param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetUtility.SortedDelegate`4.TryInvokeOrDelayToReady(`0,`1,`2,`3)">
            <summary>
            Will invoke with the given parameters if there is any delegates in the invocation list, and not currently invoking
            else, will save the values and invoke when there is a delegate registered.
            </summary>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <param name="arg3"></param>
            <param name="arg4"></param>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.KeyDataStore">
            <summary>
            Contains serialized data in a generic serializable container.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.KeyDataStore.Entry.ToString">
            <inheritdoc/>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.KeyDataStore.OnSetData">
            <summary>
            Delegate that is invoked when data is modified.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.KeyDataStore.OnBeforeSerialize">
            <summary>
            Implementation of ISerializationCallbackReceiver interface, used to convert data to a serializable form.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.KeyDataStore.OnAfterDeserialize">
            <summary>
            Implementation of ISerializationCallbackReceiver interface, used to convert data from its serializable form.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.KeyDataStore.Keys">
            <summary>
            The collection of keys stored.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.KeyDataStore.SetData(System.String,System.Object)">
            <summary>
            Set the value of a specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="data">The data to store.  Supported types are strings, POD types, objects that have a static method named 'Parse' that convert a string to an object, and object that are serializable via JSONUtilty.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.KeyDataStore.SetDataFromString(System.String,System.String)">
            <summary>
            Set data for a specified key from a string.
            </summary>
            <param name="key">The data key.</param>
            <param name="data">The data string value.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.KeyDataStore.GetData``1(System.String,``0,System.Boolean)">
            <summary>
            Get data via a specified key.
            </summary>
            <typeparam name="T">The data type.</typeparam>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value to return if the data is not found.</param>
            <param name="addDefault">Optional parameter to control whether to add the default value if the data is not found.</param>
            <returns></returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchemaSet">
            <summary>
            Collection of AddressableAssetGroupSchema objects
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchemaSet.Schemas">
            <summary>
            List of schemas for this group.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchemaSet.Types">
            <summary>
            Get the list of schema types.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchemaSet.AddSchema(UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchema,System.Func{System.Type,System.String})">
            <summary>
            Adds a copy of the provided schema object.
            </summary>
            <param name="schema">The schema to copy.</param>
            <param name="pathFunc">A function that returns the path where this method can save the schema asset.  Set to null to not create an in-project asset.</param>
            <returns>The created schema object.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchemaSet.AddSchema(System.Type,System.Func{System.Type,System.String})">
            <summary>
            Creates and adds a schema of a given type to this group.  The schema asset will be created in the GroupSchemas directory relative to the settings asset.
            </summary>
            <param name="type">The schema type. This type must not already be added.</param>
            <param name="pathFunc">A function that returns the path where this method can save the schema asset.  Set to null to not create an in-project asset.</param>
            <returns>The created schema object.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchemaSet.RemoveSchema(System.Type)">
            <summary>
             Remove a given schema from this group.
            </summary>
            <param name="type">The schema type.</param>
            <returns>True if the schema was found and removed, false otherwise.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchemaSet.GetSchema(System.Type)">
            <summary>
            Gets an added schema of the specified type.
            </summary>
            <param name="type">The schema type.</param>
            <returns>The schema if found, otherwise null.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchemaSet.ClearSchemas(System.Boolean)">
            <summary>
            Removes all schemas and optionally deletes the assets associated with them.
            </summary>
            <param name="deleteAssets">If true, the schema assets will also be deleted.</param>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Settings.AddressableAssetSettingsLocator.AllLocations">
            <summary>
            Returns an empty array of locations.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptPackedPlayMode">
            <summary>
            Uses data built by BuildScriptPacked class.  This script just sets up the correct variables and runs.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptPackedPlayMode.Name">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptPackedPlayMode.ClearCachedData">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptPackedPlayMode.IsDataBuilt">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptPackedPlayMode.CanBuildData``1">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptPackedPlayMode.BuildDataImplementation``1(UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput)">
            <inheritdoc />
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptPackedMode">
            <summary>
            Build scripts used for player builds and running with bundles in the editor.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptPackedMode.Name">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptPackedMode.CanBuildData``1">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptPackedMode.BuildDataImplementation``1(UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput)">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptPackedMode.DoBuild``1(UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput,UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext)">
            <summary>
            The method that does the actual building after all the groups have been processed.
            </summary>
            <param name="builderInput">The generic builderInput of the</param>
            <param name="aaContext"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptPackedMode.ProcessGroup(UnityEditor.AddressableAssets.Settings.AddressableAssetGroup,UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext)">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptPackedMode.ProcessGroupSchema(UnityEditor.AddressableAssets.Settings.AddressableAssetGroupSchema,UnityEditor.AddressableAssets.Settings.AddressableAssetGroup,UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext)">
            <summary>
            Called per group per schema to evaluate that schema.  This can be an easy entry point for implementing the
             build aspects surrounding a custom schema.  Note, you should not rely on schemas getting called in a specific
             order.
            </summary>
            <param name="schema">The schema to process</param>
            <param name="assetGroup">The group this schema was pulled from</param>
            <param name="aaContext">The general Addressables build builderInput</param>
            <returns></returns>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptPackedMode.m_IncludedGroupsInBuild">
            <summary>
            A temporary list of the groups that get processed during a build.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptPackedMode.ProcessBundledAssetSchema(UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema,UnityEditor.AddressableAssets.Settings.AddressableAssetGroup,UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext)">
            <summary>
            The processing of the bundled asset schema.  This is where the bundle(s) for a given group are actually setup.
            </summary>
            <param name="schema">The BundledAssetGroupSchema to process</param>
            <param name="assetGroup">The group this schema was pulled from</param>
            <param name="aaContext">The general Addressables build builderInput</param>
            <returns>The error string, if any.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptPackedMode.PrepGroupBundlePacking(UnityEditor.AddressableAssets.Settings.AddressableAssetGroup,System.Collections.Generic.List{UnityEditor.AssetBundleBuild},UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema,System.Func{UnityEditor.AddressableAssets.Settings.AddressableAssetEntry,System.Boolean})">
            <summary>
            Processes an AddressableAssetGroup and generates AssetBundle input definitions based on the BundlePackingMode.
            </summary>
            <param name="assetGroup">The AddressableAssetGroup to be processed.</param>
            <param name="bundleInputDefs">The list of bundle definitions fed into the build pipeline AssetBundleBuild</param>
            <param name="schema">The BundledAssetGroupSchema of used to process the assetGroup.</param>
            <param name="entryFilter">A filter to remove AddressableAssetEntries from being processed in the build.</param>
            <returns>The total list of AddressableAssetEntries that were processed.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptPackedMode.ConstructAssetBundleName(UnityEditor.AddressableAssets.Settings.AddressableAssetGroup,UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema,UnityEngine.Build.Pipeline.BundleDetails,System.String)">
            <summary>
            Creates a name for an asset bundle using the provided information.
            </summary>
            <param name="assetGroup">The asset group.</param>
            <param name="schema">The schema of the group.</param>
            <param name="info">The bundle information.</param>
            <param name="assetBundleName">The base name of the asset bundle.</param>
            <returns>Returns the asset bundle name with the provided information.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptPackedMode.SetPrimaryKey(UnityEngine.AddressableAssets.ResourceLocators.ContentCatalogDataEntry,System.String,UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext)">
            <summary>
            Sets the primary key of the given location. Syncing with other locations that have a dependency on this location
            </summary>
            <param name="forLocation">CatalogEntry to set the primary key for</param>
            <param name="newPrimaryKey">New Primary key to set on location</param>
            <param name="aaContext">Addressables build context to collect and assign other location data</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptPackedMode.ClearCachedData">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptPackedMode.IsDataBuilt">
            <inheritdoc />
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptFastMode">
            <summary>
            Only saves the guid of the settings asset to PlayerPrefs.  All catalog data is generated directly from the settings as needed.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptFastMode.Name">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptFastMode.ClearCachedData">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptFastMode.IsDataBuilt">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptFastMode.ProcessGroup(UnityEditor.AddressableAssets.Settings.AddressableAssetGroup,UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext)">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptFastMode.CanBuildData``1">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptFastMode.BuildDataImplementation``1(UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput)">
            <inheritdoc />
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptBase">
            <summary>
            Base class for build script assets
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptBase.instanceProviderType">
            <summary>
            The type of instance provider to create for the Addressables system.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptBase.sceneProviderType">
            <summary>
            The type of scene provider to create for the addressables system.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptBase.Log">
            <summary>
            Stores the logged information of all the build tasks.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptBase.Name">
            <summary>
            The descriptive name used in the UI.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptBase.BuildData``1(UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput)">
            <summary>
            Build the specified data with the provided builderInput.  This is the public entry point.
             Child class overrides should use <see cref="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptBase.BuildDataImplementation``1(UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput)"/>
            </summary>
            <typeparam name="TResult">The type of data to build.</typeparam>
            <param name="builderInput">The builderInput object used in the build.</param>
            <returns>The build data result.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptBase.BuildDataImplementation``1(UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput)">
            <summary>
            The implementation of <see cref="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptBase.BuildData``1(UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput)"/>.  That is the public entry point,
             this is the home for child class overrides.
            </summary>
            <param name="builderInput">The builderInput object used in the build</param>
            <typeparam name="TResult">The type of data to build</typeparam>
            <returns>The build data result</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptBase.ProcessAllGroups(UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext)">
            <summary>
            Loops over each group, after doing some data checking.
            </summary>
            <param name="aaContext">The Addressables builderInput object to base the group processing on</param>
            <returns>An error string if there were any problems processing the groups</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptBase.ProcessGroup(UnityEditor.AddressableAssets.Settings.AddressableAssetGroup,UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext)">
            <summary>
            Build processing of an individual group.
            </summary>
            <param name="assetGroup">The group to process</param>
            <param name="aaContext">The Addressables builderInput object to base the group processing on</param>
            <returns>An error string if there were any problems processing the groups</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptBase.CanBuildData``1">
            <summary>
            Used to determine if this builder is capable of building a specific type of data.
            </summary>
            <typeparam name="T">The type of data needed to be built.</typeparam>
            <returns>True if this builder can build this data.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptBase.CreateLocationsForPlayerData(UnityEditor.AddressableAssets.Settings.GroupSchemas.PlayerDataGroupSchema,UnityEditor.AddressableAssets.Settings.AddressableAssetGroup,System.Collections.Generic.List{UnityEngine.AddressableAssets.ResourceLocators.ContentCatalogDataEntry},System.Collections.Generic.HashSet{System.Type})">
            <summary>
            Utility method for creating locations from player data.
            </summary>
            <param name="playerDataSchema">The schema for the group.</param>
            <param name="assetGroup">The group to extract the locations from.</param>
            <param name="locations">The list of created locations to fill in.</param>
            <param name="providerTypes">Any unknown provider types are added to this set in order to ensure they are not stripped.</param>
            <returns>True if any legacy locations were created.  This is used by the build scripts to determine if a legacy provider is needed.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptBase.DeleteFile(System.String)">
            <summary>
            Utility method for deleting files.
            </summary>
            <param name="path">The file path to delete.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptBase.WriteFile(System.String,System.Byte[],UnityEditor.AddressableAssets.Build.FileRegistry)">
            <summary>
            Utility method to write a file.  The directory will be created if it does not exist.
            </summary>
            <param name="path">The path of the file to write.</param>
            <param name="content">The content of the file.</param>
            <param name="registry">The file registry used to track all produced artifacts.</param>
            <returns>True if the file was written.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptBase.WriteFile(System.String,System.String,UnityEditor.AddressableAssets.Build.FileRegistry)">
            <summary>
            Utility method to write a file.  The directory will be created if it does not exist.
            </summary>
            <param name="path">The path of the file to write.</param>
            <param name="content">The content of the file.</param>
            <param name="registry">The file registry used to track all produced artifacts.</param>
            <returns>True if the file was written.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptBase.ClearCachedData">
            <summary>
            Used to clean up any cached data created by this builder.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptBase.IsDataBuilt">
            <summary>
            Checks to see if the data is built for the given builder.
            </summary>
            <returns>Returns true if the data is built. Returns false otherwise.</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.DataBuilders.IAddressableAssetsBuildContext">
            <summary>
            Interface for any Addressables specific context objects to be used in the Scriptable Build Pipeline context store
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext">
            <summary>
            Simple context object for passing data through SBP, between different sections of Addressables code.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext.settings">
            <summary>
            The settings object to use.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext.Settings">
            <summary>
            The settings object to use.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext.buildStartTime">
            <summary>
            The time the build started
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext.runtimeData">
            <summary>
            The current runtime data being built.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext.locations">
            <summary>
            The list of catalog locations.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext.bundleToAssetGroup">
            <summary>
            Mapping of bundles to asset groups.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext.assetGroupToBundles">
            <summary>
            Mapping of asset group to bundles.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext.providerTypes">
            <summary>
            Set of provider types needed in this build.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext.assetEntries">
            <summary>
            The list of all AddressableAssetEntry objects.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext.bundleToImmediateBundleDependencies">
            <summary>
            Mapping of AssetBundle to the direct dependencies.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext.bundleToExpandedBundleDependencies">
            <summary>
            A mapping of AssetBundle to the full dependency tree, flattened into a single list.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptVirtualMode">
            <summary>
            Build script for creating virtual asset bundle dat for running in the editor.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptVirtualMode.Name">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptVirtualMode.CanBuildData``1">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptVirtualMode.ClearCachedData">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptVirtualMode.IsDataBuilt">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptVirtualMode.BuildDataImplementation``1(UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput)">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.BuildScriptVirtualMode.ProcessGroup(UnityEditor.AddressableAssets.Settings.AddressableAssetGroup,UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext)">
            <inheritdoc />
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBundleBuildParameters">
            <summary>
            Custom bundle parameter container that provides custom compression settings per bundle.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBundleBuildParameters.#ctor(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings,System.Collections.Generic.Dictionary{System.String,System.String},UnityEditor.BuildTarget,UnityEditor.BuildTargetGroup,System.String)">
            <summary>
            Create a AddressableAssetsBundleBuildParameters with data needed to determine the correct compression per bundle.
            </summary>
            <param name="aaSettings">The AddressableAssetSettings object to use for retrieving groups.</param>
            <param name="bundleToAssetGroup">Mapping of bundle identifier to guid of asset groups.</param>
            <param name="target">The build target.  This is used by the BundleBuildParameters base class.</param>
            <param name="group">The build target group. This is used by the BundleBuildParameters base class.</param>
            <param name="outputFolder">The path for the output folder. This is used by the BundleBuildParameters base class.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBundleBuildParameters.GetCompressionForIdentifier(System.String)">
            <summary>
            Get the compressions settings for the specified asset bundle.
            </summary>
            <param name="identifier">The identifier of the asset bundle.</param>
            <returns>The compression setting for the asset group.  If the group is not found, the default compression is used.</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.GenerateLocationListsTask">
            <summary>
            The BuildTask used to create location lists for Addressable assets.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.GenerateLocationListsTask.Version">
            <summary>
            The GenerateLocationListsTask version.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.GenerateLocationListsTask.Run">
            <summary>
            Runs the build task with the injected context.
            </summary>
            <returns>The success or failure ReturnCode</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.GenerateLocationListsTask.Input">
            <summary>
            Storage for data gathered by the build pipeline.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.GenerateLocationListsTask.Input.FileToBundle">
            <summary>
            Mapping from serialized filename to the bundle name
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.GenerateLocationListsTask.Input.AssetToFiles">
            <summary>
            Mapping of an asset to all the serialized files needed to load it. The first entry is the file that contains the asset itself.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.GenerateLocationListsTask.Input.AssetToAssetInfo">
            <summary>
            Map of Guid to AssetLoadInfo
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.GenerateLocationListsTask.Input.Logger">
            <summary>
            The logger used during the build.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.GenerateLocationListsTask.Input.Settings">
            <summary>
            The current AddressableAssetSettings to be processed.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.GenerateLocationListsTask.Input.BundleToAssetGroup">
            <summary>
            Mapping of the AssetBundle to the AddressableAssetGroup it was derived from
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.GenerateLocationListsTask.Input.AddressableAssetEntries">
            <summary>
            All the AddressableAssetEntries to process
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.GenerateLocationListsTask.Input.Target">
            <summary>
            The BuildTarget to build for.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.GenerateLocationListsTask.Output">
            <summary>
            Storage for location data, including: dependencies, locations, and provider types.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.GenerateLocationListsTask.Output.Locations">
            <summary>
            Content Catalog entries that were built into the Catalog.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.GenerateLocationListsTask.Output.AssetGroupToBundles">
            <summary>
            A mapping of AddressableAssetGroups to the AssetBundles generated from its data.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.GenerateLocationListsTask.Output.ProviderTypes">
            <summary>
            A hash set of all the provider types included in the build.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.GenerateLocationListsTask.Output.BundleToImmediateBundleDependencies">
            <summary>
            A mapping of AssetBundles to the direct dependencies
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.GenerateLocationListsTask.Output.BundleToExpandedBundleDependencies">
            <summary>
            A mapping of AssetBundles to their expanded dependencies.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.GenerateLocationListsTask.ProcessInput(UnityEditor.AddressableAssets.Build.BuildPipelineTasks.GenerateLocationListsTask.Input)">
            <summary>
            Processes the Input data from the build and returns an organized struct of information, including dependencies and catalog loctions.
            </summary>
            <param name="input">Data captured as part of the build process.</param>
            <returns>An object that contains organized information about dependencies and catalog locations.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.GenerateLocationListsTask.Run(UnityEditor.AddressableAssets.Build.DataBuilders.IAddressableAssetsBuildContext,UnityEditor.Build.Pipeline.Interfaces.IBundleWriteData)">
            <summary>
            Runs the build task with a give context and write data.
            </summary>
            <param name="aaBuildContext">The addressables build context.</param>
            <param name="writeData">The write data used to generate the location lists.</param>
            <returns>The success or failure ReturnCode</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.AddHashToBundleNameTask">
            <summary>
            The BuildTask used to append the asset hash to the internal bundle name.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.AddHashToBundleNameTask.Version">
            <summary>
            The task version.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.AddHashToBundleNameTask.Run">
            <summary>
            Runs the AddHashToBundleNameTask.
            </summary>
            <returns>Success.</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.BuildLayoutGenerationTask">
            <summary>
            The BuildTask used to generate the bundle layout.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.BuildLayoutGenerationTask.Version">
            <summary>
            The GenerateLocationListsTask version.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.BuildLayoutGenerationTask.BundleNameRemap">
            <summary>
            The mapping of the old to new bundle names.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.BuildLayoutGenerationTask.CalculateEfficiency(UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle,System.Collections.Generic.Dictionary{UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.BundleDependency,UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.EfficiencyInfo})">
            <summary>
            Calculates the Efficiency of bundle and all bundles below it in the dependency tree and caches the results.
            Example: There are 3 bundles A, B, and C, that are each 10 MB on disk. A depends on 2 MB worth of assets in B, and B depends on 4 MB worth of assets in C.
            The Efficiency of the dependencyLink from A->B would be 2/10 -> 20% and the ExpandedEfficiency of A->B would be (2 + 4)/(10 + 10) -> 6/20 -> 30%
            </summary>
            <param name="bundle"> the root of the dependency tree that the CalculateEfficiency call will start from. </param>
            <param name="bundleDependencyCache"> Cache of all bundle dependencies that have already been calculated </param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.BuildLayoutGenerationTask.Run">
            <summary>
            Runs the build task with the injected context.
            </summary>
            <returns>The success or failure ReturnCode</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.BuildLayoutGenerationTask.GenerateErrorReport(System.String,UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext,UnityEditor.AddressableAssets.Build.AddressablesContentState)">
            <summary>
            Creates an Error report for the error provided
            </summary>
            <param name="error">Build error string</param>
            <param name="aaContext">The current build context</param>
            <param name="previousContentState">Previous content state, used to determine whether a new or build update was performed.</param>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.ExtractDataTask">
            <summary>
            The BuildTask used to extract write data from the build.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.ExtractDataTask.Version">
            <summary>
            The ExtractDataTask version.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.ExtractDataTask.DependencyData">
            <summary>
            Get the injected dependency data of the task.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.ExtractDataTask.WriteData">
            <summary>
            Get the injected write data of the task.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.ExtractDataTask.BuildCache">
            <summary>
            Get the injected build cache of the task.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.ExtractDataTask.BuildContext">
            <summary>
            The build context of the task.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.BuildPipelineTasks.ExtractDataTask.Run">
            <summary>
            Runs the ExtractDataTask.  The data for this task is all injected context so no operations are performed in the Run step.
            </summary>
            <returns>Success.</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckSceneDupeDependencies">
            <summary>
            Rule class to check scene dependencies for duplicates
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckSceneDupeDependencies.ruleName">
            <inheritdoc />
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckSceneDupeDependencies.CanFix">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckSceneDupeDependencies.FixIssues(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckSceneDupeDependencies.RefreshAnalysis(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <summary>
            Clear analysis and calculate built in resources and corresponding bundle dependencies for scenes
            </summary>
            <param name="settings">The current Addressables settings object</param>
            <returns>List of results from analysis</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckSceneDupeDependencies.GetResourcePaths">
            <inheritdoc />
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AnalyzeRules.BuildBundleLayout.BuildBundleLayoutResultData">
            <summary>
            Result data for assets included in the bundle layout
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AnalyzeRules.BuildBundleLayout.CanFix">
            <inheritdoc />
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AnalyzeRules.BuildBundleLayout.ruleName">
            <inheritdoc />
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AnalyzeRules.BuildBundleLayout.BuildBundleLayoutResults">
            <summary>
            Results of the build Layout.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.BuildBundleLayout.RefreshAnalysis(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.BuildBundleLayout.ClearAnalysis">
            <inheritdoc />
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AnalyzeRules.AnalyzeResultData">
            <summary>
            Represents the data acquired after analyzing Addressable assets.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.AnalyzeResultData.OnAfterDeserialize">
            <summary>
            Retrieves serialized data after a domain reload.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.AnalyzeResultData.OnBeforeSerialize">
            <summary>
            Converts our data to a serialized structure before a domain reload.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AnalyzeRules.AddressablesAnalyzeResultData">
            <summary>
            Represents the data acquired after analyzing Addressable assets.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.AddressablesAnalyzeResultData.OnAfterDeserialize">
            <summary>
            Retrieves serialized data after a domain reload.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.AddressablesAnalyzeResultData.OnBeforeSerialize">
            <summary>
            Converts our data to a serialized structure before a domain reload.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckBundleDupeDependencies">
            <summary>
            Rule class to check for duplicate bundle dependencies
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckBundleDupeDependencies.CheckDupeResult">
            <summary>
            Result for checking for duplicates
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckBundleDupeDependencies.ExtraCheckBundleDupeData">
            <summary>
            Results for duplicate results inverted check
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckBundleDupeDependencies.CanFix">
            <inheritdoc />
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckBundleDupeDependencies.ruleName">
            <inheritdoc />
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckBundleDupeDependencies.CheckDupeResults">
            <summary>
            Results calculated by the duplicate bundle dependencies check.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckBundleDupeDependencies.RefreshAnalysis(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <summary>
            Clear current analysis and rerun check for duplicates
            </summary>
            <param name="settings">The current Addressables settings object</param>
            <returns>List of the analysis results</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckBundleDupeDependencies.CheckForDuplicateDependencies(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <summary>
            Check for duplicates among the dependencies and build implicit duplicates
            </summary>
            <param name="settings">The current Addressables settings object</param>
            <returns>List of results from analysis</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckBundleDupeDependencies.CalculateDuplicates(System.Collections.Generic.Dictionary{UnityEditor.GUID,System.Collections.Generic.List{System.String}},UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext)">
            <summary>
            Calculate duplicate dependencies
            </summary>
            <param name="implicitGuids">Map of implicit guids to their bundle files</param>
            <param name="aaContext">The build context information</param>
            <returns>Enumerable of results from duplicates check</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckBundleDupeDependencies.FixIssues(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <summary>
            Fix duplicates by moving to a new group
            </summary>
            <param name="settings">The current Addressables settings object</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckBundleDupeDependencies.ClearAnalysis">
            <inheritdoc />
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase">
            <summary>
            Base class for handling analyzing bundle rules tasks and checking dependencies
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.ExtractData">
            <summary>
            The BuildTask used to extract write data from the build.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.ResourcesToDependencies">
            <summary>
            A mapping of resources to a list of guids that correspond to their dependencies
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.GetBuildContext(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <summary>
            Get context for current Addressables settings
            </summary>
            <param name="settings"> The current Addressables settings object </param>
            <returns> The build context information </returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.IsValidPath(System.String)">
            <summary>
            Check path is valid path for Addressables entry
            </summary>
            <param name="path"> The path to check</param>
            <returns>Whether path is valid</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.RefreshBuild(UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext)">
            <summary>
            Refresh build to check bundles against current rules
            </summary>
            <param name="buildContext"> Context information for building</param>
            <returns> The return code of whether analyze build was successful, </returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.GetAllBundleDependencies">
            <summary>
            Get dependencies from bundles
            </summary>
            <returns> The list of GUIDs of bundle dependencies</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.IntersectResourcesDepedenciesWithBundleDependencies(System.Collections.Generic.List{UnityEditor.GUID})">
            <summary>
            Add Resource and Bundle dependencies in common to map of resources to dependencies
            </summary>
            <param name="bundleDependencyGuids"> GUID list of bundle dependencies</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.BuiltInResourcesToDependenciesMap(System.String[])">
            <summary>
            Build map of resources to corresponding dependencies
            </summary>
            <param name="resourcePaths"> Array of resource paths</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.ConvertBundleNamesToGroupNames(UnityEditor.AddressableAssets.Build.DataBuilders.AddressableAssetsBuildContext)">
            <summary>
            Use bundle names to create group names for AssetBundleBuild
            </summary>
            <param name="buildContext">Context information for building</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.CalculateInputDefinitions(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <summary>
            Generate input definitions and entries for AssetBundleBuild
            </summary>
            <param name="settings">The current Addressables settings object</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.CreateUniqueBundle(UnityEditor.AssetBundleBuild,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Create new AssetBundleBuild
            </summary>
            <param name="bid">ID for new AssetBundleBuild</param>
            <param name="bundleToAssetGroup"> Map of bundle names to asset group Guids</param>
            <returns></returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.GetImplicitGuidsForBundle(System.String)">
            <summary>
            Get bundle's object ids that have no dependency file
            </summary>
            <param name="fileName"> Name of bundle file </param>
            <returns> List of GUIDS of objects in bundle with no dependency file</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.GetImplicitGuidToFilesMap">
            <summary>
            Build map of implicit guids to their bundle files
            </summary>
            <returns> Dictionary of implicit guids to their corresponding file</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.CalculateBuiltInResourceDependenciesToBundleDependecies(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings,System.String[])">
            <summary>
            Calculate built in resources and corresponding bundle dependencies
            </summary>
            <param name="settings">The current Addressables settings object</param>
            <param name="builtInResourcesPaths">Array of resource paths</param>
            <returns>List of rule results after calculating resource and bundle dependency combined</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.BuildAndGetResourceDependencies(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings,System.String[])">
            <summary>
            Calculates and gathers dependencies for built in data.
            </summary>
            <param name="settings">The AddressableAssetSettings to pull data from.</param>
            <param name="builtInResourcesPaths">The paths that lead to all the built in Resource locations</param>
            <returns>A ReturnCode indicating various levels of success or failure.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.ConvertBundleName(System.String,System.String)">
            <summary>
            Convert bundle name to include group name
            </summary>
            <param name="bundleName">Current bundle name</param>
            <param name="groupName">Group name of bundle's group</param>
            <returns>The new bundle name</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.ClearAnalysis">
            <summary>
            Clear all previously gathered bundle data and analysis
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.ResultData">
            <summary>
            Data object for results of resource based analysis rules
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.CanFix">
            <inheritdoc />
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.Results">
            <summary>
            Duplicate Results between Addressables and Player content.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.RefreshAnalysis(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <summary>
            Clear analysis and calculate built in content and corresponding bundle dependencies
            </summary>
            <param name="settings">The current Addressables settings object</param>
            <returns>List of results from analysis</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.GetResourcePaths">
            <summary>
            Gets an array of resource paths that are to be compared against the addressables build content
            </summary>
            <returns>Array of Resource paths to compare against</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.BundleRuleBase.FixIssues(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <inheritdoc />
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AnalyzeRules.AnalyzeRule">
            <summary>
            Base class for creating rules to analyze Addressables data.  Use AnalyzeWindow.RegisterNewRule&lt;T&gt;() to register.
             a rule with the GUI window.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AnalyzeRules.AnalyzeRule.CanFix">
            <summary>
            True if this rule can fix itself.  If child class sets this to true, class must override FixIssues
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.AnalyzeRules.AnalyzeRule.noErrors">
            <summary>
            Represents a state where no errors were found after analyzing Addressables data.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.AnalyzeRules.AnalyzeRule.kDelimiter">
            <summary>
            Delimiter character used in analyze rule string names.  This is used when a rule result needs to display
            as a tree view hierarchy.  A rule result of A:B:C will end up in the tree view with:
             - A
             --- B
             ----- C
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AnalyzeRules.AnalyzeRule.AnalyzeResult">
            <summary>
            Result data returned by rules.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AnalyzeRules.AnalyzeRule.AnalyzeResult.resultName">
            <summary>
            Name of result data.  This name uses AnalyzeRule.kDelimiter to signify breaks in the tree display.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AnalyzeRules.AnalyzeRule.AnalyzeResult.severity">
            <summary>
            Severity of rule result
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AnalyzeRules.AnalyzeRule.ruleName">
            <summary>
            Display name for rule
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.AnalyzeRule.RefreshAnalysis(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <summary>
            This method runs the actual analysis for the rule.
            </summary>
            <param name="settings">The settings object to analyze</param>
            <returns>A list of resulting information (warnings, errors, or info)</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.AnalyzeRule.FixIssues(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <summary>
            Fixing method to be run on results of the RefreshAnalysis.  If CanFix returns true, this method must be
            overriden.  It is recommended that RefreshAnalysis caches any data that will be needed to fix.  Fix should
            not rerun RefreshAnalysis before fixing.
            </summary>
            <param name="settings">The settings object to analyze</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.AnalyzeRule.ClearAnalysis">
            <summary>
            Clears out the analysis results. When overriding, use to clear rule-specific data as well.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckResourcesDupeDependencies">
            <summary>
            Rule class to check resource dependencies for duplicates
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckResourcesDupeDependencies.ruleName">
            <inheritdoc />
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckResourcesDupeDependencies.CanFix">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckResourcesDupeDependencies.RefreshAnalysis(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <summary>
            Clear analysis and calculate built in resources and corresponding bundle dependencies
            </summary>
            <param name="settings">The current Addressables settings object</param>
            <returns>List of results from analysis</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckResourcesDupeDependencies.FixIssues(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeRules.CheckResourcesDupeDependencies.GetResourcePaths">
            <inheritdoc />
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.BuildUtility">
            <summary>
            Utility class for the Addressables Build Content process.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.BuildUtility.IsEditorAssembly(System.Reflection.Assembly)">
            <summary>
            Determines if the given assembly is an editor assembly.
            </summary>
            <param name="assembly">The assembly.</param>
            <returns>Returns true if the assembly is an editor assembly. Returns false otherwise.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.BuildUtility.GetNameWithHashNaming(UnityEditor.AddressableAssets.Settings.GroupSchemas.BundledAssetGroupSchema.BundleNamingStyle,System.String,System.String)">
            <summary>
            Creates a new bundle name using its hash and a given naming style.
            </summary>
            <param name="schemaBundleNaming">The bundle naming style.</param>
            <param name="hash">The bundle hash.</param>
            <param name="sourceBundleName">The original bundle name.</param>
            <returns>Returns the new bundle name.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.BuildUtility.CheckModifiedScenesAndAskToSave">
            <summary>
            Used during the build to check for unsaved scenes and provide a user popup if there are any.
            </summary>
            <returns>True if there were no unsaved scenes, or if user hits "Save and Continue" on popup.
            False if any scenes were unsaved, and user hits "Cancel" on popup.</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AnalyzeSystem">
            <summary>
            Static system to manage Analyze functionality.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeSystem.RegisterNewRule``1">
            <summary>
            Method used to register any custom AnalyzeRules with the AnalyzeSystem.  This replaces calling into the AnalyzeWindow
             directly to remove logic from the GUI.  The recommended pattern is to create
            your rules like so:
            <code>
              class MyRule : AnalyzeRule {}
              [InitializeOnLoad]
              class RegisterMyRule
              {
                  static RegisterMyRule()
                  {
                      AnalyzeSystem.RegisterNewRule&lt;MyRule&gt;();
                  }
              }
            </code>
            </summary>
            <typeparam name="TRule">The rule type.</typeparam>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeSystem.SerializeData(System.String)">
            <summary>
            Serialize the analysis data to json and save to disk
            </summary>
            <param name="path">File path to save to</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AnalyzeSystem.DeserializeData(System.String)">
            <summary>
            Load and deserialize analysis data from json file and reload
            </summary>
            <param name="path">File path to load from</param>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.BuildScript">
            <summary>
            Entry point to set callbacks for builds.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.BuildScript.buildCompleted">
            <summary>
            Global delegate for handling the result of AddressableAssets builds.  This will get called for player builds and when entering play mode.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AddressableAssetBuildResult">
            <summary>
            Contains information about the status of the build.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressableAssetBuildResult.Duration">
            <summary>
            Duration of build, in seconds.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressableAssetBuildResult.LocationCount">
            <summary>
            The number of addressable assets contained in the build.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressableAssetBuildResult.Error">
            <summary>
            Error that caused the build to fail.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressableAssetBuildResult.OutputPath">
            <summary>
            Path of runtime settings file
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressableAssetBuildResult.FileRegistry">
            <summary>
            Registry of files created during the build
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AddressableAssetBuildResult.CreateResult``1(System.String,System.Int32,System.String)">
            <summary>
            Helper method to create the desired result of a data builder.  This should always be used to create the build result
             with additional details added as needed.  The Result.Duration should always be set at the end of the build
             script in the non-error scenario.
            </summary>
            <param name="settingsPath">Path to the settings.json file (name may not always match that exactly) generated by this build</param>
            <param name="locCount">Number of locations created by this build</param>
            <param name="err">Error string if there were problems with the build.  Defaults to empty</param>
            <typeparam name="TResult">The actual build result created</typeparam>
            <returns></returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AddressableAssetBuildResult.CreateResult``1">
            <summary>
            Helper method to create the desired result of a data builder.  This should always be used to create the build result
             with additional details added as needed.  The Result.Duration should always be set at the end of the build
             script in the non-error scenario.  Other results should be set as available.
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AddressablesPlayModeBuildResult">
            <summary>
            Build result for entering play mode in the editor.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AddressablesPlayerBuildResult">
            <summary>
            Build result for building the Addressables content.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AddressablesPlayerBuildResult.BundleBuildResult">
            <summary>
            Information about a bundle build results
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.AddressablesPlayerBuildResult.BundleBuildResult.FilePath">
            <summary>
            The file path of the bundle.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.AddressablesPlayerBuildResult.BundleBuildResult.InternalBundleName">
            <summary>
            The internal AssetBundle name, this is not always the same as the file name.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.AddressablesPlayerBuildResult.BundleBuildResult.SourceAssetGroup">
            <summary>
            The Addressable Group that was responsible for generating a given AssetBundle
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.AddressablesPlayerBuildResult.BundleBuildResult.Crc">
            <summary>
            The calculated value used for security during cyclic redundancy checks
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.AddressablesPlayerBuildResult.BundleBuildResult.Hash">
            <summary>
            The asset hash of the assets included inside the AssetBundle
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressablesPlayerBuildResult.IsUpdateContentBuild">
            <summary>
            True if the build was doing an update to a previous build, else false.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressablesPlayerBuildResult.AssetBundleBuildResults">
            <summary>
            Build results for AssetBundles created during the build.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressablesPlayerBuildResult.RemoteCatalogHashFilePath">
            <summary>
            File path to the generated remote catalog hash file.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressablesPlayerBuildResult.RemoteCatalogJsonFilePath">
            <summary>
            File path to the generated remote catalog json file.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressablesPlayerBuildResult.ContentStateFilePath">
            <summary>
            File path to the generate content state file
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayoutHelpers">
            <summary>
            Helper methods for gathering data about a build layout.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.Layout.BuildLayoutHelpers.EnumerateAssets(UnityEditor.AddressableAssets.Build.Layout.BuildLayout)">
            <summary>
            Gather a list of Explicit Assets defined in a BuildLayout
            </summary>
            <param name="layout">The BuildLayout generated during a build</param>
            <returns>A list of ExplicitAsset data.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.Layout.BuildLayoutHelpers.EnumerateAssets(UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle)">
            <summary>
            Gather a list of Explicit Assets defined in a Bundle
            </summary>
            <param name="bundle">The Bundle data generated during a build</param>
            <returns>A list of ExplicitAssets defined in the Bundle</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.Layout.BuildLayoutHelpers.EnumerateBundles(UnityEditor.AddressableAssets.Build.Layout.BuildLayout)">
            <summary>
            Gather a list of Bundle data defined in a BuildLayout
            </summary>
            <param name="layout">The BuildLayout generated during a build</param>
            <returns>A list of the Bundle data defined in a BuildLayout</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.Layout.BuildLayoutHelpers.EnumerateFiles(UnityEditor.AddressableAssets.Build.Layout.BuildLayout)">
            <summary>
            Gather a list of File data defined in a BuildLayout
            </summary>
            <param name="layout">The BuildLayout generated during a build</param>
            <returns>A list of File data</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.Layout.BuildLayoutHelpers.GetAssetType(System.Type)">
            <summary>
            Gets the enum AssetType associated with the param systemType ofType
            </summary>
            <param name="ofType">The Type of the asset</param>
            <returns>An AssetType or <see cref="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.Other" /> if null or unknown.</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.AssetSummary">
            <summary>
            Data store for summary data about build content
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetSummary.AssetType">
            <summary>
            Type of Asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetSummary.Count">
            <summary>
            Number of Objects build of the defined AssetType
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetSummary.SizeInBytes">
            <summary>
            Total size of combined Objects
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BundleSummary">
            <summary>
            Data store for summary data about Bundle content
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BundleSummary.Count">
            <summary>
            Number of bundles built
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BundleSummary.TotalUncompressedSize">
            <summary>
            Size in bytes of bundles uncompressed
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BundleSummary.TotalCompressedSize">
            <summary>
            Size in bytes of bundled compressed
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayoutSummary">
            <summary>
            Data store for Addressables build
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayoutSummary.BundleSummary">
            <summary>
            Summary of bundles
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayoutSummary.AssetSummaries">
            <summary>
            Summary for AssetTypes used
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayoutSummary.TotalAssetCount">
            <summary>
            The total number of assets in a build, including implicit assets
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayoutSummary.ExplicitAssetCount">
            <summary>
            The total number of explicitly added Addressable assets that were included in a build
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayoutSummary.ImplicitAssetCount">
            <summary>
            The total number of implicitly added assets that were included in a build
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.Layout.BuildLayoutSummary.GetSummary(UnityEditor.AddressableAssets.Build.Layout.BuildLayout)">
            <summary>
            Generates a summary of the content used in a BuildLayout
            </summary>
            <param name="layout">BuildLayout to get a summary for</param>
            <returns>Summary of the BuildLayout layout</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.Layout.BuildLayoutSummary.GetSummaryWithoutAssetTypes(UnityEditor.AddressableAssets.Build.Layout.BuildLayout)">
            <summary>
            Generates a summary of the content used in a BuildLayout, minus the asset type data.
            </summary>
            <param name="layout"></param>
            <returns></returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.AssetType">
            <summary>
            UnityEngine Object types found as Assets
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.Other">
            <summary>
            Unknown type that is not handled
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.Font">
            <summary>
            Font asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.GUISkin">
            <summary>
            GUISkin asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.AnimationClip">
            <summary>
            AnimationClip, often a subObject of a Model asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.Avatar">
            <summary>
            Avatar asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.AnimationController">
            <summary>
            AnimationController asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.AudioClip">
            <summary>
            AudioClip asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.AudioMixer">
            <summary>
            AudioMixer asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.VideoClip">
            <summary>
            Video asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.Shader">
            <summary>
            Shader asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.ComputeShader">
            <summary>
            ComputeShader asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.Mesh">
            <summary>
            Mesh, often a subObject of a model asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.Texture">
            <summary>
            Generic Texture asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.Texture2D">
            <summary>
            2D image texture asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.Texture3D">
            <summary>
            Texture3D asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.Sprite">
            <summary>
            Sprite Object, often a subObject to a Texture or SpriteAtlas
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.ScriptableObject">
            <summary>
            ScriptableObject asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.Prefab">
            <summary>
            Prefab asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.Model">
            <summary>
            Special prefab type for Imported model assets
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.Material">
            <summary>
            Rendering Material asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.PhysicsMaterial">
            <summary>
            PhysicsMaterial asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.PhysicsMaterial2D">
            <summary>
            PhysicalMaterial2D asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.TextAsset">
            <summary>
            TextAsset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.Scene">
            <summary>
            Scene asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.GameObject">
            <summary>
            GameObject, can be a Prefab or Scene subObject
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.SceneObject">
            <summary>
            Generic Scene Object that has an undefined AssetType
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.MonoBehaviour">
            <summary>
            MonoBehaviour scripts
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.Component">
            <summary>
            Components on a GameObject not of MonoBehaviour type
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.MonoScript">
            <summary>
            MonoScript object
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.Cubemap">
            <summary>
            Cubemap scene Object
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.Camera">
            <summary>
            Scene Camera component
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.AudioListener">
            <summary>
            Scene AudioListener component
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.Light">
            <summary>
            Scene Light component
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.NavMeshSettings">
            <summary>
            Scene NavMeshSettings Object
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.RenderSettings">
            <summary>
            Scene RenderSettings Object
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.LightmapSettings">
            <summary>
            Scene LightmapSettings Object
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.Transform">
            <summary>
            Scene Transform component
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.MeshRenderer">
            <summary>
            Scene MeshRenderer component
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.MeshFilter">
            <summary>
            Scene MeshFilter component
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.BoxCollider2D">
            <summary>
            Scene BoxCollider2D component
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.BoxCollider">
            <summary>
            Scene BoxCollider component
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.AssetType.SphereCollider">
            <summary>
            Scene SphereCollider component
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildType">
            <summary>
            Type of Addressables build
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildType.NewBuild">
            <summary>
            Was made with an Addressables build made for new Player builds
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildType.UpdateBuild">
            <summary>
            Was made with an Addressables update build, for a previous new build
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BundleBuildStatus">
            <summary>
            Bundle status after an update build
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BundleBuildStatus.New">
            <summary>
            Asset bundle is newly created for this build
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BundleBuildStatus.Modified">
            <summary>
            Asset bundle has been modified (Remote bundle expected)
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BundleBuildStatus.ModifiedUpdatePrevented">
            <summary>
            Prevent updates, updated Asset bundle has been modified and reverted to previous details
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BundleBuildStatus.Unmodified">
            <summary>
            Asset bundle was not modified and data remains the same
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayout">
            <summary>
            A storage class used to gather data about an Addressable build.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.LayoutHeader">
            <summary>
            Helper class to wrap header values for BuildLayout
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.LayoutHeader.m_BuildLayout">
            <summary>
            Build layout for this header
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.LayoutHeader.BuildTarget">
            <summary>
            Build Platform Addressables build is targeting
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.LayoutHeader.BuildResultHash">
            <summary>
            Hash of the build results
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.LayoutHeader.BuildType">
            <summary>
            If the build was a new build or an update for a previous build
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.LayoutHeader.BuildStart">
            <summary>
            DateTime at the start of building Addressables
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.LayoutHeader.Duration">
            <summary>
            Time in seconds taken to build Addressables Content
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.LayoutHeader.BuildError">
            <summary>
            Null or Empty if the build completed successfully, else contains error causing the failure
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Header">
            <summary>
            Helper object to get header values for this build layout
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.BuildTarget">
            <summary>
            Build Platform Addressables build is targeting
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.BuildResultHash">
            <summary>
            Hash of the build results
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.BuildType">
            <summary>
            If the build was a new build or an update for a previous build
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.BuildStart">
            <summary>
            DateTime at the start of building Addressables
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Duration">
            <summary>
            Time in seconds taken to build Addressables Content
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.BuildError">
            <summary>
            Null or Empty if the build completed successfully, else contains error causing the failure
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.UnityVersion">
            <summary>
            Version of the Unity edtior used to perform the build.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.PackageVersion">
            <summary>
            Version of the Addressables package used to perform the build.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.PlayerBuildVersion">
            <summary>
            Player build version for the build, this is a timestamp if PlayerVersionOverride is not set in the settings
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesEditorSettings">
            <summary>
            Settings used by the Addressables settings at the time of building
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesRuntimeSettings">
            <summary>
            Values used by the Addressables runtime
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.BuildScript">
            <summary>
            Name of the build script to build
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.DefaultGroup">
            <summary>
            Default group at the time of building
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Groups">
            <summary>
            The Addressable Groups that reference this data
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.BuiltInBundles">
            <summary>
            The List of AssetBundles that were built without a group associated to them, such as the BuiltIn Shaders Bundle and the MonoScript Bundle
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.DuplicatedAssets">
            <summary>
            List of assets with implicitly included Objects
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.LocalCatalogBuildPath">
            <summary>
            The build path on disk of the default local content catalog
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.RemoteCatalogBuildPath">
            <summary>
            The build path of the remote content catalog, if one was built
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.BuildLayoutHeader">
            <summary>
            Used for serialising the header info for the BuildLayout.
            Names must match values in BuildLayout class
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Open(System.String,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>
             <param name="path">Path to the BuildLayout json file on disk</param>
             <param name="readHeader">If the basic header information should be read</param>
             <param name="readFullFile">If the full build layout should be read</param>
             <returns></returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.WriteToFile(System.String,System.Boolean)">
            <summary>
            Writes json file for the build layout to the destination path
            </summary>
            <param name="destinationPath">File path to write build layout</param>
            <param name="prettyPrint">If json should be written using pretty print</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Close">
            <summary>
            Closes streams for loading the build layout
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ReadHeader(System.Boolean)">
            <summary>
            Reads basic information about the build layout
            </summary>
            <param name="keepFileStreamsActive">If false, the file will be closed after reading the header line.</param>
            <returns>true is successful, else false</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ReadFull">
            <summary>
            Reads the full build layout data from file
            </summary>
            <returns>true is successful, else false</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesEditorData">
            <summary>
            Values set for the AddressablesAssetSettings at the time of building
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesEditorData.SettingsHash">
            <summary>
            Hash value of the settings at the time of building
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesEditorData.ActiveProfile">
            <summary>
            Active Addressables profile set at time of Building
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesEditorData.BuildRemoteCatalog">
            <summary>
            Addressables setting value set for building the remote catalog
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesEditorData.RemoteCatalogLoadPath">
            <summary>
            Load path for the remote catalog if enabled
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesEditorData.BundleLocalCatalog">
            <summary>
            Addressables setting value set for bundling the local catalog
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesEditorData.OptimizeCatalogSize">
            <summary>
            Addressables setting value set for optimising the catalog size
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesEditorData.CatalogRequestsTimeout">
            <summary>
            Addressables setting value set for time out when downloading catalogs
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesEditorData.MaxConcurrentWebRequests">
            <summary>
            Runtime setting value set for the maximum number of concurrent web requests
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesEditorData.DisableCatalogUpdateOnStartup">
            <summary>
            Addressables setting value set for is to update the remote catalog on startup
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesEditorData.UniqueBundleIds">
            <summary>
            Addressables setting value set for if the build created unique bundle ids
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesEditorData.NonRecursiveBuilding">
            <summary>
            Addressables setting value set for if the build used non recursive dependency calculation
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesEditorData.ContiguousBundles">
            <summary>
            Addressables setting value set for if the build used contiguous bundle objects
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesEditorData.DisableSubAssetRepresentations">
            <summary>
            Addressables setting value set for disabling sub asset representation in the Bundle
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesEditorData.ShaderBundleNaming">
            <summary>
            Internal naming prefix of the built in shaders bundle
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesEditorData.MonoScriptBundleNaming">
            <summary>
            Internal naming prefix of the monoScript bundle,
            No MonoScript bundle is built if set to disabled
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesEditorData.StripUnityVersionFromBundleBuild">
            <summary>
            Addressables setting value set for is the unity version was stripped from the built bundles
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesRuntimeData">
            <summary>
            Values set for runtime initialisation of Addressables
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesRuntimeData.ProfilerEvents">
            <summary>
            Runtime setting value set for if the runtime will submit profiler events
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesRuntimeData.LogResourceManagerExceptions">
            <summary>
            Runtime setting value set for if resource manager exceptions are logged or not
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesRuntimeData.CatalogLoadPaths">
            <summary>
            Runtime setting value set for catalogs to load (First catalog found in the list is used)
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AddressablesRuntimeData.CatalogHash">
            <summary>
            Hash of the build catalog
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AssetBundleObjectInfo">
            <summary>
            Information about the AssetBundleObject
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AssetBundleObjectInfo.Size">
            <summary>
            The size, in bytes, of the AssetBundleObject
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.StringPair">
            <summary>
            Key value pair of string type
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.StringPair.Key">
            <summary>
            String key
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.StringPair.Value">
            <summary>
            String value
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Profile">
            <summary>
            Addressables Profile data
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Profile.Name">
            <summary>
            Name of the profile
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Profile.Id">
            <summary>
            ID assigned within the ProfileSettings of the profile
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Profile.Values">
            <summary>
            Profile variables assigned to the profile
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Group">
            <summary>
            Data about the AddressableAssetGroup that gets processed during a build.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Group.Name">
            <summary>
            The Name of the AdressableAssetGroup
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Group.Guid">
            <summary>
            The Guid of the AddressableAssetGroup
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Group.PackingMode">
            <summary>
            The packing mode as defined by the BundledAssetGroupSchema on the AddressableAssetGroup
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Group.Bundles">
            <summary>
            A list of the AssetBundles associated with the Group
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Group.Schemas">
            <summary>
            Data about the AddressableAssetGroupSchemas associated with the Group
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.SchemaData">
            <summary>
            Data container for AddressableAssetGroupSchemas
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.SchemaData.Guid">
            <summary>
            The Guid of the AddressableAssetGroupSchema
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.SchemaData.Type">
            <summary>
            The class type of the AddressableAssetGroupSchema
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.SchemaData.KvpDetails">
            <summary>
            These key-value-pairs include data about the AddressableAssetGroupSchema, such as PackingMode and Compression.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.SchemaData.OnBeforeSerialize">
            <summary>
            Converts the unserializable KvpDetails to a serializable type for writing
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.SchemaData.OnAfterDeserialize">
            <summary>
            Writes data to KvpDetails after Deserializing to temporary data fields
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle">
            <summary>
            Data store for AssetBundle information.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.Name">
            <summary>
            The name of the AssetBundle
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.InternalName">
            <summary>
            Name used to identify the asset bundle
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.FileSize">
            <summary>
            The file size of the AssetBundle on disk, in bytes
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.BuildStatus">
            <summary>
            Status of the bundle after an update build
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.ExpandedDependencyFileSize">
            <summary>
            The file size of all of the Expanded Dependencies of this AssetBundle, in bytes
            Expanded dependencies are the dependencies of this AssetBundle's dependencies
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.DependencyFileSize">
            <summary>
            The file size
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.UncompressedFileSize">
            <summary>
            The file size of the AssetBundle on disk when uncompressed, in bytes
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.AssetCount">
            <summary>
            The number of Assets contained within the bundle
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.BundleDependency">
            <summary>
            Represents a dependency from the containing Bundle to dependentBundle, with AssetDependencies representing each of the assets in parentBundle that create the link to dependentBundle
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.BundleDependency.DependencyBundle">
            <summary>
            The bundle that the parent bundle depends on
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.BundleDependency.AssetDependencies">
            <summary>
            The list of assets that link the parent bundle to the DependencyBundle
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.BundleDependency.ExpandedEfficiency">
            <summary>
            Percentage of Efficiency asset usage that uses the entire dependency tree of this bundle dependency.
            This includes DependencyBundle and all bundles beneath it.
            Value is equal to [Total Filesize of Dependency Assets] / [Total size of all dependency bundles on disk]
            Example: There are 3 bundles A, B, and C, that are each 10 MB on disk. A depends on 2 MB worth of assets in B, and B depends on 4 MB worth of assets in C.
            The Efficiency of the dependencyLink from A->B would be 2/10 -> 20% and the ExpandedEfficiency of A->B would be (2 + 4)/(10 + 10) -> 6/20 -> 30%
             </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.BundleDependency.Efficiency">
            <summary>
            The Efficiency of the connection between the parent bundle and DependencyBundle irrespective of the full dependency tree below DependencyBundle.
            Value is equal to [Serialized Filesize of assets In Dependency Bundle Referenced By Parent]/[Total size of Dependency Bundle on disk]
            Example: Given two Bundles A and B that are each 10 MB on disk, and A depends on 5 MB worth of assets in B, then the Efficiency of DependencyLink A->B is 5/10 = .5
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.BundleDependency.referencedAssetsFileSize">
            <summary>
            The number of uniquely assets that the parent bundle uniquely references in dependency bundle. This is used to calculate Efficiency without double counting.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.BundleDependency.AssetDependency">
            <summary>
            Represents a dependency from a root Asset to a dependent Asset.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.BundleDependencies">
            <summary>
            A list of bundles that this bundle depends upon.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.SerializeBundleToBundleDependency">
            <summary>
            Convert BundleDependencyMap to a format that is able to be serialized and plays nicer with
            CalculateEfficiency - this must be called on a bundle before CalculateEfficiency can be called.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.UpdateBundleDependency(UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset,UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset)">
            <summary>
            Updates the BundleDependency from the current bundle to the bundle that contains referencedAsset. If no such BundleDependency exists,
            one is created. Does nothing if rootAsset's bundle is not the current bundle or
            if the two assets are in the same bundle.
            </summary>
            <param name="rootAsset"></param>
            <param name="referencedAsset"></param>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.Compression">
            <summary>
            The Compression method used for the AssetBundle.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.CRC">
            <summary>
            Cyclic redundancy check of the content contained inside of the asset bundle.
            This value will not change between identical asset bundles with different compression options.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.Hash">
            <summary>
            The hash version of the contents contained inside of the asset bundle.
            This value will not change between identical asset bundles with different compression options.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.Group">
            <summary>
            A reference to the Group data that this AssetBundle was generated from
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.LoadPath">
            <summary>
            Path Provider uses to load the Asset Bundle
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.Provider">
            <summary>
            Provider used to load the Asset Bundle
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.ResultType">
            <summary>
            Result provided by the Provider loading the Asset Bundle
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.Files">
            <summary>
            List of the Files referenced by the AssetBundle
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.DependentBundles">
            <summary>
            A list of the bundles that directly depend on this AssetBundle
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.Dependencies">
            <summary>
            A list of the direct dependencies of the AssetBundle
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.Bundle.ExpandedDependencies">
            <summary>
            The second order dependencies and greater of a bundle
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.SubFile">
            <summary>
            Data store for resource files generated by the build pipeline and referenced by a main File
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.SubFile.Name">
            <summary>
            The name of the sub-file
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.SubFile.IsSerializedFile">
            <summary>
            If the main File is a serialized file, this will be true.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.SubFile.Size">
            <summary>
            The size of the sub-file, in bytes
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.File">
            <summary>
            Data store for the main File created for the AssetBundle
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.File.Name">
            <summary>
            The name of the File.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.File.Bundle">
            <summary>
            The AssetBundle data that relates to a built file.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.File.UncompressedSize">
            <summary>
            The file size of the AssetBundle on disk when uncompressed, in bytes
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.File.SubFiles">
            <summary>
            List of the resource files created by the build pipeline that a File references
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.File.Assets">
            <summary>
            A list of the explicit asset defined in the AssetBundle
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.File.OtherAssets">
            <summary>
            A list of implicit assets built into the AssetBundle, typically through references by Assets that are explicitly defined.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.File.WriteResultFilename">
            <summary>
            The final filename of the AssetBundle file
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.File.BundleObjectInfo">
            <summary>
            Data about the AssetBundleObject
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.File.PreloadInfoSize">
            <summary>
            The size of the data that needs to be preloaded for this File.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.File.MonoScriptCount">
            <summary>
            The number of Mono scripts referenced by the File
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.File.MonoScriptSize">
            <summary>
            The size of the Mono scripts referenced by the File
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ObjectData">
            <summary>
            A representation of an object in an asset file.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ObjectData.LocalIdentifierInFile">
            <summary>
            FileId of Object in Asset File
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ObjectData.ObjectName">
            <summary>
            Object name within the Asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ObjectData.ComponentName">
            <summary>
            Component name if AssetType is a MonoBehaviour or Component
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ObjectData.AssetType">
            <summary>
            Type of Object
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ObjectData.SerializedSize">
            <summary>
            The size of the file on disk.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ObjectData.StreamedSize">
            <summary>
            The size of the streamed Asset.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ObjectData.References">
            <summary>
            References to other Objects
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ObjectReference">
            <summary>
            Identification of an Object within the same file
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset">
            <summary>
            Data store for Assets explicitly defined in an AssetBundle
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset.Guid">
            <summary>
            The Asset Guid.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset.AssetPath">
            <summary>
            The Asset path on disk
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset.InternalId">
            <summary>
            Name used to identify the asset within the asset bundle containing it
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset.AssetHash">
            <summary>
            Hash of the asset content
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset.Objects">
            <summary>
            Objects that consist of the overall asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset.MainAssetType">
            <summary>
            AssetType of the main Object for the Asset
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset.IsScene">
            <summary>
            True if is a scene asset, else false
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset.GroupGuid">
            <summary>
            Guid of the Addressable group this Asset entry was built using.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset.AddressableName">
            <summary>
            The Addressable address defined in the Addressable Group window for an Asset.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset.Labels">
            <summary>
            Addressable labels for this asset entry.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset.SerializedSize">
            <summary>
            The size of the file on disk.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset.StreamedSize">
            <summary>
            The size of the streamed Asset.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset.File">
            <summary>
            The file that the Asset was added to
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset.Bundle">
            <summary>
            The AssetBundle that contains the asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset.InternalReferencedOtherAssets">
            <summary>
            List of data from other Assets referenced by an Asset in the File
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset.InternalReferencedExplicitAssets">
            <summary>
            List of explicit Assets referenced by this asset that are in the same AssetBundle
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset.ExternallyReferencedAssets">
            <summary>
            List of explicit Assets referenced by this asset that are in a different AssetBundle
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ExplicitAsset.ReferencingAssets">
            <summary>
            List of Assets that reference this Asset
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.DataFromOtherAsset">
            <summary>
            Data store for implicit Asset references
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.DataFromOtherAsset.AssetGuid">
            <summary>
            The Guid of the Asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.DataFromOtherAsset.AssetPath">
            <summary>
            The Asset path on disk
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.DataFromOtherAsset.File">
            <summary>
            The file that the Asset was added to
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.DataFromOtherAsset.Objects">
            <summary>
            Objects that consist of the overall asset
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.DataFromOtherAsset.MainAssetType">
            <summary>
            AssetType of the main Object for the Asset
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.DataFromOtherAsset.IsScene">
            <summary>
            True if is a scene asset, else false
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.DataFromOtherAsset.ReferencingAssets">
            <summary>
            A list of Assets that reference this data
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.DataFromOtherAsset.ObjectCount">
            <summary>
            The number of Objects in the data
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.DataFromOtherAsset.SerializedSize">
            <summary>
            The size of the data on disk
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.DataFromOtherAsset.StreamedSize">
            <summary>
            The size of the streamed data
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AssetDuplicationData">
            <summary>
            Data store for duplicated Implicit Asset information
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AssetDuplicationData.AssetGuid">
            <summary>
            The Guid of the Asset with duplicates
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.AssetDuplicationData.DuplicatedObjects">
            <summary>
            A list of duplicated objects and the bundles that contain them.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ObjectDuplicationData">
            <summary>
            Data store for duplicated Object information
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ObjectDuplicationData.LocalIdentifierInFile">
            <summary>
            The local identifier for an object.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.BuildLayout.ObjectDuplicationData.IncludedInBundleFiles">
            <summary>
            A list of bundles that include the referenced file.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.Layout.LayoutLookupTables">
            <summary>
            Utility used to quickly reference data built with the build pipeline
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.LayoutLookupTables.Bundles">
            <summary>
            The default AssetBundle name to the Bundle data map.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.LayoutLookupTables.Files">
            <summary>
            File name to File data map.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.LayoutLookupTables.GuidToExplicitAsset">
            <summary>
            Guid to ExplicitAsset data map.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.LayoutLookupTables.GroupLookup">
            <summary>
            Group name to Group data map.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.LayoutLookupTables.FilenameToBundle">
            <summary>
            The remapped AssetBundle name to the Bundle data map
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.Layout.LayoutLookupTables.UsedImplicits">
            Maps used for lookups while building the BuildLayout
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.IDataBuilderResult">
            <summary>
            The result of IDataBuilder.Build.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.IDataBuilderResult.Duration">
            <summary>
            Duration of the build in seconds.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.IDataBuilderResult.LocationCount">
            <summary>
            The number of addressable assets contained in the build.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.IDataBuilderResult.Error">
            <summary>
            Error string, if any.  If Succeeded is true, this may be null.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.IDataBuilderResult.OutputPath">
            <summary>
            Path of runtime settings file
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.IDataBuilderResult.FileRegistry">
            <summary>
            Registry of files created during the build
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.IDataBuilder">
            <summary>
            Builds objects of type IDataBuilderResult.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.IDataBuilder.Name">
            <summary>
            The name of the builder, used for GUI.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.IDataBuilder.CanBuildData``1">
            <summary>
            Can this builder build the type of data requested.
            </summary>
            <typeparam name="T">The data type.</typeparam>
            <returns>True if the build can build it.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.IDataBuilder.BuildData``1(UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput)">
            <summary>
            Build the data of a specific type.
            </summary>
            <typeparam name="TResult">The data type.</typeparam>
            <param name="builderInput">The builderInput used to build the data.</param>
            <returns>The built data.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.IDataBuilder.ClearCachedData">
            <summary>
            Clears all cached data.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput">
            <summary>
            Data builder context object for Addressables.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput.AddressableSettings">
            <summary>
            The main addressables settings object.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput.TargetGroup">
            <summary>
            Build target group.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput.Target">
            <summary>
            Build target.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput.PlayerVersion">
            <summary>
            Player build version.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput.ProfilerEventsEnabled">
            <summary>
            Bool to signify if profiler events should be broadcast.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput.Registry">
            <summary>
            Registry of files created during the build
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput.RuntimeSettingsFilename">
            <summary>
            The name of the default Runtime Settings file.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput.RuntimeCatalogFilename">
            <summary>
            The name of the default Runtime Catalog file.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput.PreviousContentState">
            <summary>
            The asset content state of a previous build.  This allows detection of deltas with the current build content state.  This will be
            null in standard builds.  This is only set during content update builds.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput.#ctor(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <summary>
            Creates a default context object with values taken from the AddressableAssetSettings parameter.
            </summary>
            <param name="settings">The settings object to pull values from.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput.#ctor(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings,System.String)">
            <summary>
            Creates a default context object with values taken from the AddressableAssetSettings parameter.
            </summary>
            <param name="settings">The settings object to pull values from.</param>
            <param name="playerBuildVersion">The player build version.</param>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AddressablesBuildMenuNewBuild">
            <summary>
            Makes a new build of Addressables using the BuildScript selectable in the menu
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressablesBuildMenuNewBuild.BuildMenuPath">
            <inheritdoc />
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressablesBuildMenuNewBuild.SelectableBuildScript">
            <inheritdoc />
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressablesBuildMenuNewBuild.Order">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AddressablesBuildMenuNewBuild.OnPrebuild(UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput)">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AddressablesBuildMenuNewBuild.OnPostbuild(UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput,UnityEditor.AddressableAssets.Build.AddressablesPlayerBuildResult)">
            <inheritdoc />
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AddressablesBuildMenuUpdateAPreviousBuild">
            <summary>
            Opens a file browser to search for the addressables_content_state.bin from from a previous build to build and update for.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressablesBuildMenuUpdateAPreviousBuild.BuildMenuPath">
            <inheritdoc />
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressablesBuildMenuUpdateAPreviousBuild.SelectableBuildScript">
            <inheritdoc />
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.AddressablesBuildMenuUpdateAPreviousBuild.Order">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AddressablesBuildMenuUpdateAPreviousBuild.OnPrebuild(UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput)">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AddressablesBuildMenuUpdateAPreviousBuild.OnPostbuild(UnityEditor.AddressableAssets.Build.AddressablesDataBuilderInput,UnityEditor.AddressableAssets.Build.AddressablesPlayerBuildResult)">
            <inheritdoc />
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.MonoScriptBundleNaming">
            <summary>
            Naming conventions for the monoscript bundle name prefix.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.MonoScriptBundleNaming.Disabled">
            <summary>
            No special prefix will be added to the monscript bundle name.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.MonoScriptBundleNaming.ProjectName">
            <summary>
            Set the monoscript bundle name prefix to the hash of the project name.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.MonoScriptBundleNaming.DefaultGroupGuid">
            <summary>
            Set the monoscript bundle name prefix to the guid of the default group.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.MonoScriptBundleNaming.Custom">
            <summary>
            Set the monoscript bundle name prefix to the user specified value.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.ShaderBundleNaming">
            <summary>
            Naming conventions for the built-in shader bundle name prefix.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.ShaderBundleNaming.ProjectName">
            <summary>
            Set the built-in shader bundle name prefix to the hash of the project name.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.ShaderBundleNaming.DefaultGroupGuid">
            <summary>
            Set the built-in shader bundle name prefix to the guid of the default group.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.ShaderBundleNaming.Custom">
            <summary>
            Set the built-in shader bundle name prefix to the user specified value.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.FileRegistry">
            <summary>
            Use to contain files created during a build.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.FileRegistry.#ctor">
            <summary>
            Initializes a new file registry instance.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.FileRegistry.GetFilePaths">
            <summary>
            Retrieves all the stored file paths.
            </summary>
            <returns>Returns all file paths as an IEnumerable.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.FileRegistry.AddFile(System.String)">
            <summary>
            Adds a file path to our set of file paths.
            </summary>
            <param name="path">The file path.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.FileRegistry.RemoveFile(System.String)">
            <summary>
            Removes a file path from our set of file paths.
            </summary>
            <param name="path">The file path.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.FileRegistry.GetFilePathForBundle(System.String)">
            <summary>
            Given a bundle name, determine the file path for the bundle.
            </summary>
            <param name="bundleName">The name of the bundle.</param>
            <returns>The full file path.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.FileRegistry.ReplaceBundleEntry(System.String,System.String)">
            <summary>
            Replace an entry in the File Registry with a new bundle name.
            </summary>
            <param name="bundleName">The bundle name to replace.</param>
            <param name="newFileRegistryEntry">The new file registry bundle name.</param>
            <returns>Returns true if a successful replacement occured.</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.CheckForContentUpdateRestrictionsOptions">
            <summary>
            Option for how to deal with automatically checking for content update restrictions as part of the Update a Previous Build workflow.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.CheckForContentUpdateRestrictionsOptions.ListUpdatedAssetsWithRestrictions">
            <summary>
            If assets are modified that have been previously built in a Cannot Change Post Release group,
            the build will be paused and the Update Restrictions Check window is opened
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.CheckForContentUpdateRestrictionsOptions.FailBuild">
            <summary>
            If assets are modified that have been previously built in a Cannot Change Post Release group, the Content Update build will fail.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.CheckForContentUpdateRestrictionsOptions.Disabled">
            <summary>
            Updating a previous build does not automatically run the Check for Update Restrictions rule.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AssetState">
            <summary>
            The given state of an Asset.  Represented by its guid and hash.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.AssetState.guid">
            <summary>
            Asset states GUID.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.AssetState.hash">
            <summary>
            Asset State hash.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.AssetState.Equals(UnityEditor.AddressableAssets.Build.AssetState)">
            <summary>
            Check if one asset state is equal to another.
            </summary>
            <param name="other">Right hand side of comparision.</param>
            <returns>Returns true if the Asset States are equal to one another.</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.CachedAssetState">
            <summary>
            The Cached Asset State of an Addressable Asset.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.CachedAssetState.asset">
            <summary>
            The Asset State.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.CachedAssetState.dependencies">
            <summary>
            The Asset State of all dependencies.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.CachedAssetState.groupGuid">
            <summary>
            The guid for the group the cached asset state belongs to.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.CachedAssetState.bundleFileId">
            <summary>
            The name of the cached asset states bundle file.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.CachedAssetState.data">
            <summary>
            The cached asset state data.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.CachedAssetState.Equals(UnityEditor.AddressableAssets.Build.CachedAssetState)">
            <summary>
            Checks if one cached asset state is equal to another given the asset state and dependency state.
            </summary>
            <param name="other">Right hand side of comparision.</param>
            <returns>Returns true if the cached asset states are equal to one another.</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.CachedBundleState">
            <summary>
            Cached state of asset bundles.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.CachedBundleState.bundleFileId">
            <summary>
            The name of the cached asset states bundle file.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.CachedBundleState.data">
            <summary>
            The cached bundle state data.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.AddressablesContentState">
            <summary>
            Data stored with each build that is used to generated content updates.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.AddressablesContentState.playerVersion">
            <summary>
            The version that the player was built with.  This is usually set to AddressableAssetSettings.PlayerBuildVersion.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.AddressablesContentState.editorVersion">
            <summary>
            The version of the unity editor used to build the player.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.AddressablesContentState.cachedInfos">
            <summary>
            Dependency information for all assets in the build that have been marked StaticContent.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.AddressablesContentState.remoteCatalogLoadPath">
            <summary>
            The path of a remote catalog.  This is the only place the player knows to look for an updated catalog.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.AddressablesContentState.cachedBundles">
            <summary>
            Information about asset bundles created for the build.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.ContentUpdateScript">
            <summary>
            Contains methods used for the content update workflow.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.ContentUpdateScript.ContentUpdateContext">
            <summary>
            Contains build information used for updating assets.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.ContentUpdateScript.ContentUpdateContext.GuidToPreviousAssetStateMap">
            <summary>
            The mapping of an asset's guid to its cached asset state.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.ContentUpdateScript.ContentUpdateContext.IdToCatalogDataEntryMap">
            <summary>
            The mapping of an asset's or bundle's internal id to its catalog entry.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.ContentUpdateScript.ContentUpdateContext.BundleToInternalBundleIdMap">
            <summary>
            The mapping of a bundle's name to its internal bundle id.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.ContentUpdateScript.ContentUpdateContext.WriteData">
            <summary>
            Stores the asset bundle write information.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.ContentUpdateScript.ContentUpdateContext.ContentState">
            <summary>
            Stores the cached build data.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.ContentUpdateScript.ContentUpdateContext.Registry">
            <summary>
            Stores the paths of the files created during a build.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.ContentUpdateScript.ContentUpdateContext.PreviousAssetStateCarryOver">
            <summary>
            The list of asset state information gathered from the previous build.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.Build.ContentUpdateScript.PreviousContentStateFileCachePath">
            <summary>
            If the previous content state file location is a remote location, this path is where the file is downloaded to as part of a
            content update build.  In the event of a fresh build where the previous state file build path is remote, this is the location the
            file is built to.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.ContentUpdateScript.SaveContentState(System.String,System.Collections.Generic.List{UnityEditor.AddressableAssets.Settings.AddressableAssetEntry},UnityEditor.Build.Pipeline.Interfaces.IDependencyData,System.String,System.String)">
            <summary>
            Save the content update information for a set of AddressableAssetEntry objects.
            </summary>
            <param name="path">File to write content stat info to.  If file already exists, it will be deleted before the new file is created.</param>
            <param name="entries">The entries to save.</param>
            <param name="dependencyData">The raw dependency information generated from the build.</param>
            <param name="playerVersion">The player version to save. This is usually set to AddressableAssetSettings.PlayerBuildVersion.</param>
            <param name="remoteCatalogPath">The server path (if any) that contains an updateable content catalog.  If this is empty, updates cannot occur.</param>
            <returns>True if the file is saved, false otherwise.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.ContentUpdateScript.SaveContentState(System.Collections.Generic.List{UnityEngine.AddressableAssets.ResourceLocators.ContentCatalogDataEntry},System.String,System.Collections.Generic.List{UnityEditor.AddressableAssets.Settings.AddressableAssetEntry},UnityEditor.Build.Pipeline.Interfaces.IDependencyData,System.String,System.String)">
            <summary>
            Save the content update information for a set of AddressableAssetEntry objects.
            </summary>
            <param name="locations">The ContentCatalogDataEntry locations that were built into the Content Catalog.</param>
            <param name="path">File to write content stat info to.  If file already exists, it will be deleted before the new file is created.</param>
            <param name="entries">The entries to save.</param>
            <param name="dependencyData">The raw dependency information generated from the build.</param>
            <param name="playerVersion">The player version to save. This is usually set to AddressableAssetSettings.PlayerBuildVersion.</param>
            <param name="remoteCatalogPath">The server path (if any) that contains an updateable content catalog.  If this is empty, updates cannot occur.</param>
            <returns>True if the file is saved, false otherwise.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.ContentUpdateScript.SaveContentState(System.Collections.Generic.List{UnityEngine.AddressableAssets.ResourceLocators.ContentCatalogDataEntry},System.String,System.Collections.Generic.List{UnityEditor.AddressableAssets.Settings.AddressableAssetEntry},UnityEditor.Build.Pipeline.Interfaces.IDependencyData,System.String,System.String,System.Collections.Generic.List{UnityEditor.AddressableAssets.Build.CachedAssetState})">
            <summary>
            Save the content update information for a set of AddressableAssetEntry objects.
            </summary>
            <param name="locations">The ContentCatalogDataEntry locations that were built into the Content Catalog.</param>
            <param name="path">File to write content stat info to.  If file already exists, it will be deleted before the new file is created.</param>
            <param name="entries">The entries to save.</param>
            <param name="dependencyData">The raw dependency information generated from the build.</param>
            <param name="playerVersion">The player version to save. This is usually set to AddressableAssetSettings.PlayerBuildVersion.</param>
            <param name="remoteCatalogPath">The server path (if any) that contains an updateable content catalog.  If this is empty, updates cannot occur.</param>
            <param name="carryOverCacheState">Cached state that needs to carry over from the previous build.  This mainly affects Content Update.</param>
            <returns>True if the file is saved, false otherwise.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.ContentUpdateScript.GetContentStateDataPath(System.Boolean)">
            <summary>
            Gets the path of the cache data from a selected build.
            </summary>
            <param name="browse">If true, the user is allowed to browse for a specific file.</param>
            <returns>The path of the previous state .bin file used to detect changes from the previous build to the content update build.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.ContentUpdateScript.DownloadBinFileToTempLocation(System.String)">
            <summary>
            Downloads the content state bin to a temporary directory
            </summary>
            <param name="url">The url of the bin file</param>
            <returns>The temp path the bin file was downloaded to.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.ContentUpdateScript.LoadContentState(System.String)">
            <summary>
            Loads cache data from a specific location
            </summary>
            <param name="contentStateDataPath"></param>
            <returns>The ContentState object.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.ContentUpdateScript.BuildContentUpdate(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings,System.String)">
            <summary>
            Builds player content using the player content version from a specified cache file.
            </summary>
            <param name="settings">The settings object to use for the build.</param>
            <param name="contentStateDataPath">The path of the cache data to use.</param>
            <returns>The build operation.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.ContentUpdateScript.GatherModifiedEntries(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings,System.String)">
            <summary>
            Get all modified addressable asset entries in groups that have BundledAssetGroupSchema and ContentUpdateGroupSchema with static content enabled.
            This includes any Addressable dependencies that are affected by the modified entries.
            </summary>
            <param name="settings">Addressable asset settings.</param>
            <param name="cacheDataPath">The cache data path.</param>
            <returns>A list of all modified entries and dependencies (list is empty if there are none); null if failed to load cache data.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.ContentUpdateScript.GatherModifiedEntriesWithDependencies(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings,System.String)">
            <summary>
            Get a Dictionary of all modified values and their dependencies.  Dependencies will be Addressable and part of a group
            with static content enabled.
            </summary>
            <param name="settings">Addressable asset settings.</param>
            <param name="cachePath">The cache data path.</param>
            <returns>A dictionary mapping explicit changed entries to their dependencies.</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.ContentUpdateScript.CreateContentUpdateGroup(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings,System.Collections.Generic.List{UnityEditor.AddressableAssets.Settings.AddressableAssetEntry},System.String)">
            <summary>
            Create a new AddressableAssetGroup with the items and mark it as remote.
            </summary>
            <param name="settings">The settings object.</param>
            <param name="items">The items to move.</param>
            <param name="groupName">The name of the new group.</param>
        </member>
        <member name="F:UnityEditor.AddressableAssets.Build.ContentUpdateScript.GroupFilterFunc">
            <summary>
            Functor to filter AddressableAssetGroups during content update. If the functor returns false, the group is excluded from the update.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.SceneManagerState">
            <summary>
            Serializable object that can be used to save and restore the state of the editor scene manager.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.SceneManagerState.Record(System.String)">
            <summary>
            Record the state of the EditorSceneManager and save to a JSON file.
            </summary>
            <param name="path">The path to save the recorded state.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.SceneManagerState.AddScenesForPlayMode(System.Collections.Generic.List{UnityEditor.EditorBuildSettingsScene})">
            <summary>
            Adds a set of scenes to the scene list for use in editor play mode.
            </summary>
            <param name="playModeScenes">The scenes to add to the editor scenes list.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.SceneManagerState.Restore(System.String,System.Boolean)">
            <summary>
            Restore the state of the EditorSceneManager.
            </summary>
            <param name="path">The path to load the state data from.  This file is generated by calling SceneManagerState.Record.</param>
            <param name="restoreSceneManagerSetup">If true, the recorded active scenes are restored. EditorBuildSettings.scenes are always restored.</param>
        </member>
        <member name="T:UnityEditor.AddressableAssets.Build.LinkXmlGenerator">
            <summary>
            This can be used to create a LinkXml for your build.  This will ensure that the desired runtime types are packed into the build.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.LinkXmlGenerator.AddTypes(System.Type[])">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.LinkXmlGenerator.AddTypes(System.Collections.Generic.IEnumerable{System.Type})">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.LinkXmlGenerator.SetTypeConversion(System.Type,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:UnityEditor.AddressableAssets.Build.LinkXmlGenerator.Save(System.String)">
            <inheritdoc />
        </member>
        <member name="T:UnityEditor.AddressableAssets.HostingServices.IHostingService">
            <summary>
            <see cref="T:UnityEditor.AddressableAssets.HostingServices.IHostingService"/> implementations serve Addressable content from the Unity Editor to players running
            locally or on devices with network access to the Editor.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.IHostingService.HostingServiceContentRoots">
            <summary>
            Get the list of root directories being served by this hosting service
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.IHostingService.ProfileVariables">
            <summary>
            Get a map of all profile variables and their current values
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.IHostingService.IsHostingServiceRunning">
            <summary>
            Get a boolean that indicates if this hosting service is running
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.IHostingService.StartHostingService">
            <summary>
            Start the hosting service
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.IHostingService.StopHostingService">
            <summary>
            Stop the hosting service
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.IHostingService.OnBeforeSerialize(UnityEditor.AddressableAssets.Settings.KeyDataStore)">
            <summary>
            Called by the HostingServicesManager before a domain reload, giving the hosting service
            an opportunity to persist state information.
            </summary>
            <param name="dataStore">A key/value pair data store for use in persisting state information</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.IHostingService.OnAfterDeserialize(UnityEditor.AddressableAssets.Settings.KeyDataStore)">
            <summary>
            Called immediatley following a domain reload by the HostingServicesManager, for restoring state information
            after the service is recreated.
            </summary>
            <param name="dataStore">A key/value pair data store for use in restoring state information</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.IHostingService.EvaluateProfileString(System.String)">
            <summary>
            Expand special variables from Addressable profiles
            </summary>
            <param name="key">Key name to match</param>
            <returns>replacement string value for key, or null if no match</returns>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.IHostingService.Logger">
            <summary>
            The ILogger instance to use for debug log output
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.IHostingService.OnGUI">
            <summary>
            Draw configuration GUI elements
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.IHostingService.DescriptiveName">
            <summary>
            Set by the HostingServicesManager, primarily used to disambiguate multiple instances of the same service
            in the GUI.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.IHostingService.InstanceId">
            <summary>
            uniquely identifies this service within the scope of the HostingServicesManager
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.HostingServices.BaseHostingService">
            <summary>
            Base class for hosting services.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.BaseHostingService.HostingServiceContentRoots">
            <summary>
            List of content roots for hosting service.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.BaseHostingService.ProfileVariables">
            <summary>
            Dictionary of profile variables defined by the hosting service.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.BaseHostingService.IsHostingServiceRunning">
            <summary>
            Gets the current running status of the hosting service.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.BaseHostingService.StartHostingService">
            <summary>
            Starts the hosting service.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.BaseHostingService.StopHostingService">
            <summary>
            Stops the hosting service.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.BaseHostingService.OnGUI">
            <summary>
            Render the hosting service GUI.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.BaseHostingService.Logger">
            <summary>
            Get and set the logger for the hosting service.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.BaseHostingService.DisambiguateProfileVar(System.String)">
            <summary>
            Decodes a profile variable lookup ID based on string key
            </summary>
            <param name="key">the key to look up </param>
            <returns>The variable lookup ID.</returns>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.BaseHostingService.DescriptiveName">
            <inheritdoc/>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.BaseHostingService.InstanceId">
            <inheritdoc/>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.BaseHostingService.EvaluateProfileString(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.BaseHostingService.OnBeforeSerialize(UnityEditor.AddressableAssets.Settings.KeyDataStore)">
            <inheritdoc/>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.BaseHostingService.OnAfterDeserialize(UnityEditor.AddressableAssets.Settings.KeyDataStore)">
            <inheritdoc/>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.BaseHostingService.LogFormat(UnityEngine.LogType,System.String,System.Object[])">
            <summary>
            Logs a formatted message to the Logger specifically on this service.  <see cref="P:UnityEditor.AddressableAssets.HostingServices.BaseHostingService.Logger"/>
            </summary>
            <param name="logType">Severity of the log</param>
            <param name="format">The base string</param>
            <param name="args">The parameters to be formatted into the base string</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.BaseHostingService.Log(System.String,System.Object[])">
            <summary>
            Logs an info severity formatted message to the Logger specifically on this service.  <see cref="P:UnityEditor.AddressableAssets.HostingServices.BaseHostingService.Logger"/>
            </summary>
            <param name="format">The base string</param>
            <param name="args">The parameters to be formatted into the base string</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.BaseHostingService.LogWarning(System.String,System.Object[])">
            <summary>
            Logs an warning severity formatted message to the Logger specifically on this service.  <see cref="P:UnityEditor.AddressableAssets.HostingServices.BaseHostingService.Logger"/>
            </summary>
            <param name="format">The base string</param>
            <param name="args">The parameters to be formatted into the base string</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.BaseHostingService.LogError(System.String,System.Object[])">
            <summary>
            Logs an error severity formatted message to the Logger specifically on this service.  <see cref="P:UnityEditor.AddressableAssets.HostingServices.BaseHostingService.Logger"/>
            </summary>
            <param name="format">The base string</param>
            <param name="args">The parameters to be formatted into the base string</param>
        </member>
        <member name="T:UnityEditor.AddressableAssets.HostingServices.IHostingServiceConfigurationProvider">
            <summary>
            Interface for providing configuration data for <see cref="T:UnityEditor.AddressableAssets.HostingServices.IHostingService"/> implementations
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.IHostingServiceConfigurationProvider.HostingServicesContentRoot">
            <summary>
            Returns the Hosting Service content root path for the given <see cref="T:UnityEditor.AddressableAssets.Settings.AddressableAssetGroup"/>
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.HostingServices.HttpHostingService">
            <summary>
            HTTP implementation of hosting service.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.ResultCode">
            <summary>
            Options for standard Http result codes
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.ResultCode.Ok">
            <summary>
            Use to indicate that the request succeeded.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.ResultCode.NotFound">
            <summary>
            Use to indicate that the requested resource could not be found.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.MyHttpListener">
            <summary>
            The actual Http listener used by this service
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.HostingServicePort">
            <summary>
            The port number on which the service is listening
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.UploadSpeed">
            <summary>
            The upload speed that files were be served at, in kbps
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.ActiveOperations">
            <summary>
            Files that are currently being uploaded
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.IsHostingServiceRunning">
            <inheritdoc/>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.HostingServiceContentRoots">
            <inheritdoc/>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.ProfileVariables">
            <inheritdoc/>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.#ctor">
            <summary>
            Create a new <see cref="T:UnityEditor.AddressableAssets.HostingServices.HttpHostingService"/>
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.Finalize">
            <summary>
            Destroys a <see cref="T:UnityEditor.AddressableAssets.HostingServices.HttpHostingService"/>
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.StartHostingService">
            <inheritdoc/>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.StopHostingService">
            <summary>
            Temporarily stops the service from receiving requests.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.OnGUI">
            <inheritdoc/>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.OnBeforeSerialize(UnityEditor.AddressableAssets.Settings.KeyDataStore)">
            <inheritdoc/>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.OnAfterDeserialize(UnityEditor.AddressableAssets.Settings.KeyDataStore)">
            <inheritdoc/>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.ResetListenPort(System.Int32)">
            <summary>
            Listen on a new port the next time the server starts. If the server is already running, it will be stopped
            and restarted automatically.
            </summary>
            <param name="port">Specify a port to listen on. Default is 0 to choose any open port</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.ConfigureHttpListener">
            <summary>
            Handles any configuration necessary for <see cref="P:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.MyHttpListener"/> before listening for connections.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.HandleRequest(System.IAsyncResult)">
            <summary>
            Asynchronous callback to handle a client connection request on <see cref="P:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.MyHttpListener"/>. This method is
            recursive in that it will call itself immediately after receiving a new incoming request to listen for the
            next connection.
            </summary>
            <param name="ar">Asynchronous result from previous request. Pass null to listen for an initial request</param>
            <exception cref="T:System.ArgumentOutOfRangeException">thrown when the request result code is unknown</exception>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.FindFileInContentRoots(System.String)">
            <summary>
            Searches for the given relative path within the configured content root directores.
            </summary>
            <param name="relativePath"></param>
            <returns>The full system path to the file if found, or null if file could not be found</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.ReturnFile(System.Net.HttpListenerContext,System.String,System.Int32)">
            <summary>
            Sends a file to the connected HTTP client
            </summary>
            <param name="context"></param>
            <param name="filePath"></param>
            <param name="readBufferSize"></param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.Return404(System.Net.HttpListenerContext)">
            <summary>
            Sets the status code to 404 on the given <c>HttpListenerContext</c> object.
            </summary>
            <param name="context">The object to modify.</param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.IsPortAvailable(System.Int32)">
            <summary>
            Tests to see if the given port # is already in use
            </summary>
            <param name="port">port number to test</param>
            <returns>true if there is not a listener on the port</returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HttpHostingService.GetAvailablePort">
            <summary>
            Find an open network listen port on the local system
            </summary>
            <returns>a system assigned port, or 0 if none are available</returns>
        </member>
        <member name="T:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager">
            <summary>
            Manages the hosting services.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager.PingTimeoutInMilliseconds">
            <summary>
            Timeout in milliseconds for filtering ip addresses for the hosting service
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager.GlobalProfileVariables">
            <summary>
            Key/Value pairs valid for profile variable substitution
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager.Logger">
            <summary>
            Direct logging output of all managed services
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager.BatchMode(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <summary>
            Static method for use in starting up the HostingServicesManager in batch mode.
            </summary>
            <param name="settings"> </param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager.BatchMode">
            <summary>
            Static method for use in starting up the HostingServicesManager in batch mode. This method
            without parameters will find and use the default <see cref="T:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings"/> object.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager.IsInitialized">
            <summary>
            Indicates whether or not this HostingServiceManager is initialized
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager.HostingServices">
            <summary>
            Return an enumerable list of all configured <see cref="T:UnityEditor.AddressableAssets.HostingServices.IHostingService"/> objects
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager.RegisteredServiceTypes">
            <summary>
            Get an array of all <see cref="T:UnityEditor.AddressableAssets.HostingServices.IHostingService"/> types that have been used by the manager, or are known
            built-in types available for use.
            </summary>
            <returns></returns>
        </member>
        <member name="P:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager.NextInstanceId">
            <summary>
            The id value that will be assigned to the next <see cref="T:UnityEditor.AddressableAssets.HostingServices.IHostingService"/> add to the manager.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager.#ctor">
            <summary>
            Create a new <see cref="T:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager"/>
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager.Initialize(UnityEditor.AddressableAssets.Settings.AddressableAssetSettings)">
            <summary>
            Initialize manager with the given <see cref="T:UnityEditor.AddressableAssets.Settings.AddressableAssetSettings"/> object.
            </summary>
            <param name="settings"></param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager.StopAllServices">
            <summary>
            Calls <see cref="M:UnityEditor.AddressableAssets.HostingServices.IHostingService.StopHostingService"/> on all managed <see cref="T:UnityEditor.AddressableAssets.HostingServices.IHostingService"/> instances
            where <see cref="P:UnityEditor.AddressableAssets.HostingServices.IHostingService.IsHostingServiceRunning"/> is true
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager.StartAllServices">
            <summary>
            Calls <see cref="M:UnityEditor.AddressableAssets.HostingServices.IHostingService.StartHostingService"/> on all managed <see cref="T:UnityEditor.AddressableAssets.HostingServices.IHostingService"/> instances
            where <see cref="P:UnityEditor.AddressableAssets.HostingServices.IHostingService.IsHostingServiceRunning"/> is false
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager.AddHostingService(System.Type,System.String)">
            <summary>
            Add a new hosting service instance of the given type. The <paramref name="serviceType"/> must implement the
            <see cref="T:UnityEditor.AddressableAssets.HostingServices.IHostingService"/> interface, or an <see cref="T:System.ArgumentException"/> is thrown.
            </summary>
            <param name="serviceType">A <see cref="T:System.Type"/> object for the service. Must implement <see cref="T:UnityEditor.AddressableAssets.HostingServices.IHostingService"/></param>
            <param name="name">A descriptive name for the new service instance.</param>
            <returns></returns>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager.RemoveHostingService(UnityEditor.AddressableAssets.HostingServices.IHostingService)">
            <summary>
            Stops the given <see cref="T:UnityEditor.AddressableAssets.HostingServices.IHostingService"/>, unregisters callbacks, and removes it from management. This
            function does nothing if the service is not being managed by this <see cref="T:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager"/>
            </summary>
            <param name="svc"></param>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager.OnAwake">
            <summary>
            Should be called by parent <see cref="T:UnityEngine.ScriptableObject"/> instance Awake method
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager.OnEnable">
            <summary>
            Should be called by parent <see cref="T:UnityEngine.ScriptableObject"/> instance OnEnable method
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager.OnDisable">
            <summary>
            Should be called by parent <see cref="T:UnityEngine.ScriptableObject"/> instance OnDisable method
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager.OnBeforeSerialize">
            <summary> Ensure object is ready for serialization, and calls <see cref="M:UnityEditor.AddressableAssets.HostingServices.IHostingService.OnBeforeSerialize(UnityEditor.AddressableAssets.Settings.KeyDataStore)"/> methods
            on all managed <see cref="T:UnityEditor.AddressableAssets.HostingServices.IHostingService"/> instances
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager.OnAfterDeserialize">
            <summary> Ensure object is ready for serialization, and calls <see cref="M:UnityEditor.AddressableAssets.HostingServices.IHostingService.OnBeforeSerialize(UnityEditor.AddressableAssets.Settings.KeyDataStore)"/> methods
            on all managed <see cref="T:UnityEditor.AddressableAssets.HostingServices.IHostingService"/> instances
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.HostingServices.HostingServicesManager.RefreshGlobalProfileVariables">
            <summary>
            Refresh values in the global profile variables table.
            </summary>
        </member>
        <member name="T:UnityEditor.AddressableAssets.AddressableAssetSettingsDefaultObject">
            <summary>
            Class used to get and set the default Addressable Asset settings object.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.AddressableAssetSettingsDefaultObject.kDefaultConfigAssetName">
            <summary>
            Default name for the addressable assets settings
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.AddressableAssetSettingsDefaultObject.kDefaultConfigFolder">
            <summary>
            The default folder for the serialized version of this class.
            </summary>
        </member>
        <member name="F:UnityEditor.AddressableAssets.AddressableAssetSettingsDefaultObject.kDefaultConfigObjectName">
            <summary>
            The name of the default config object
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.AddressableAssetSettingsDefaultObject.DefaultAssetPath">
            <summary>
            Default path for addressable asset settings assets.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.AddressableAssetSettingsDefaultObject.SettingsExists">
            <summary>
            Used to determine if a default settings asset exists.
            </summary>
        </member>
        <member name="P:UnityEditor.AddressableAssets.AddressableAssetSettingsDefaultObject.Settings">
            <summary>
            Gets the default addressable asset settings object.  This will return null during editor startup if EditorApplication.isUpdating or EditorApplication.isCompiling are true.
            </summary>
        </member>
        <member name="M:UnityEditor.AddressableAssets.AddressableAssetSettingsDefaultObject.GetSettings(System.Boolean)">
            <summary>
            Gets the settings object with the option to create a new one if it does not exist.
            </summary>
            <param name="create">If true and no settings object exists, a new one will be created using the default config folder and asset name.</param>
            <returns>The default settings object.</returns>
        </member>
        <member name="T:AddressablesPlayerBuildProcessor">
            <summary>
            Maintains Addresssables build data when processing a player build.
            </summary>
        </member>
        <member name="P:AddressablesPlayerBuildProcessor.BuildAddressablesOverride">
             <summary>
             Functor to override Addressables build when building Player.
             </summary>
             <remarks>
             Functor is invoked where Addressables settings state to build Addressables content when performing a Player build.
            
             Available in Unity 2021.2 or later.
             </remarks>
        </member>
        <member name="P:AddressablesPlayerBuildProcessor.callbackOrder">
            <summary>
            Returns the player build processor callback order.
            </summary>
        </member>
        <member name="M:AddressablesPlayerBuildProcessor.PrepareForBuild(UnityEditor.Build.BuildPlayerContext)">
            <summary>
            Invoked before performing a Player build. Maintains building Addressables step and processing Addressables build data.
            </summary>
            <param name="buildPlayerContext"></param>
        </member>
        <member name="M:AddressablesPlayerBuildProcessor.GetStreamingAssetPaths">
            <summary>
            Gets a list of StreamingAsset files managed through Addressables, and relative path in StreamingAssets.
            </summary>
        </member>
        <member name="T:RevertUnchangedAssetsToPreviousAssetState">
            <summary>
            RevertUnchangedAssetsToPreviousAssetState uses the asset state from the previous build to determine if any assets
            need to use their previous settings or use the newly build data.
            </summary>
        </member>
        <member name="M:RevertUnchangedAssetsToPreviousAssetState.Run(UnityEditor.AddressableAssets.Build.DataBuilders.IAddressableAssetsBuildContext,UnityEditor.AddressableAssets.Build.ContentUpdateScript.ContentUpdateContext)">
            <summary>
            Reverts asset entries to their previous state if not modified by the new build.
            </summary>
            <param name="aaBuildContext">The new build data.</param>
            <param name="updateContext">The cached build data.</param>
            <returns>Returns the success ReturnCode if the content update succeeds.</returns>
        </member>
    </members>
</doc>
