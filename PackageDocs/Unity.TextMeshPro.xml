<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Unity.TextMeshPro</name>
    </assembly>
    <members>
        <member name="T:TMPro.TMP_SelectionCaret">
            <summary>
            A simple component that can be added to a newly created object where inheriting from MaskableGraphic is needed.
            </summary>
        </member>
        <member name="M:TMPro.TMP_SelectionCaret.Cull(UnityEngine.Rect,System.Boolean)">
            <summary>
            Override to Cull function of MaskableGraphic to prevent Culling.
            </summary>
            <param name="clipRect"></param>
            <param name="validRect"></param>
        </member>
        <member name="M:TMPro.TMP_TextParsingUtilities.#cctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:TMPro.TMP_TextParsingUtilities.instance">
            <summary>
            Get a singleton instance of the TextModuleUtilities.
            </summary>
        </member>
        <member name="M:TMPro.TMP_TextParsingUtilities.GetHashCode(System.String)">
            <summary>
            Function returning the hashcode value of a given string.
            </summary>
        </member>
        <member name="F:TMPro.TMP_TextParsingUtilities.k_LookupStringL">
            <summary>
            Table used to convert character to lowercase.
            </summary>
        </member>
        <member name="F:TMPro.TMP_TextParsingUtilities.k_LookupStringU">
            <summary>
            Table used to convert character to uppercase.
            </summary>
        </member>
        <member name="M:TMPro.TMP_TextParsingUtilities.ToLowerASCIIFast(System.Char)">
            <summary>
            Get lowercase version of this ASCII character.
            </summary>
        </member>
        <member name="M:TMPro.TMP_TextParsingUtilities.ToUpperASCIIFast(System.Char)">
            <summary>
            Get uppercase version of this ASCII character.
            </summary>
        </member>
        <member name="M:TMPro.TMP_TextParsingUtilities.ToUpperASCIIFast(System.UInt32)">
            <summary>
            Get uppercase version of this ASCII character.
            </summary>
        </member>
        <member name="M:TMPro.TMP_TextParsingUtilities.ToLowerASCIIFast(System.UInt32)">
            <summary>
            Get lowercase version of this ASCII character.
            </summary>
        </member>
        <member name="M:TMPro.TMP_TextParsingUtilities.IsHighSurrogate(System.UInt32)">
            <summary>
            Check if Unicode is High Surrogate
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextParsingUtilities.IsLowSurrogate(System.UInt32)">
            <summary>
            Check if Unicode is Low Surrogate
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextParsingUtilities.ConvertToUTF32(System.UInt32,System.UInt32)">
             <summary>
            
             </summary>
             <param name="highSurrogate"></param>
             <param name="lowSurrogate"></param>
             <returns></returns>
        </member>
        <member name="T:TMPro.TMP_SpriteCharacter">
            <summary>
            A basic element of text representing a pictograph, image, sprite or emoji.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SpriteCharacter.name">
            <summary>
            The name of the sprite element.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SpriteCharacter.hashCode">
            <summary>
            The hashcode value which is computed from the name of the sprite element.
            This value is read-only and updated when the name of the text sprite is changed.
            </summary>
        </member>
        <member name="M:TMPro.TMP_SpriteCharacter.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:TMPro.TMP_SpriteCharacter.#ctor(System.UInt32,TMPro.TMP_SpriteGlyph)">
            <summary>
            Constructor for new sprite character.
            </summary>
            <param name="unicode">Unicode value of the sprite character.</param>
            <param name="glyph">Glyph used by the sprite character.</param>
        </member>
        <member name="M:TMPro.TMP_SpriteCharacter.#ctor(System.UInt32,TMPro.TMP_SpriteAsset,TMPro.TMP_SpriteGlyph)">
            <summary>
            Constructor for new sprite character.
            </summary>
            <param name="unicode">Unicode value of the sprite character.</param>
            <param name="spriteAsset">Sprite Asset used by this sprite character.</param>
            <param name="glyph">Glyph used by the sprite character.</param>
        </member>
        <member name="M:TMPro.TMP_SpriteCharacter.#ctor(System.UInt32,System.UInt32)">
             <summary>
            
             </summary>
             <param name="unicode"></param>
             <param name="glyphIndex"></param>
        </member>
        <member name="P:TMPro.TMP_SubMesh.fontAsset">
            <summary>
            The TMP Font Asset assigned to this sub text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SubMesh.spriteAsset">
            <summary>
            The TMP Sprite Asset assigned to this sub text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SubMesh.material">
            <summary>
            The material to be assigned to this object. Returns an instance of the material.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SubMesh.sharedMaterial">
            <summary>
            The material to be assigned to this text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SubMesh.fallbackMaterial">
            <summary>
            The fallback material created from the properties of the fallback source material.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SubMesh.fallbackSourceMaterial">
            <summary>
            The source material used by the fallback font
            </summary>
        </member>
        <member name="P:TMPro.TMP_SubMesh.isDefaultMaterial">
            <summary>
            Is the text object using the default font asset material.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SubMesh.padding">
            <summary>
            Padding value resulting for the property settings on the material.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SubMesh.renderer">
            <summary>
            The Mesh Renderer of this text sub object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SubMesh.meshFilter">
            <summary>
            The MeshFilter of this text sub object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SubMesh.mesh">
            <summary>
            The Mesh of this text sub object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SubMesh.textComponent">
            <summary>
            Reference to the parent Text Component.
            </summary>
        </member>
        <member name="M:TMPro.TMP_SubMesh.ON_TMP_SETTINGS_CHANGED">
            <summary>
            Event received when the TMP Settings are changed.
            </summary>
        </member>
        <member name="M:TMPro.TMP_SubMesh.CreateMaterialInstance(UnityEngine.Material)">
            <summary>
            Method used to create an instance of the material
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_SubMesh.GetSharedMaterial">
            <summary>
            Method returning the shared material assigned to the text object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_SubMesh.SetSharedMaterial(UnityEngine.Material)">
            <summary>
            Method to set the shared material.
            </summary>
            <param name="mat"></param>
        </member>
        <member name="M:TMPro.TMP_SubMesh.GetPaddingForMaterial">
            <summary>
            Function called when the padding value for the material needs to be re-calculated.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_SubMesh.UpdateMeshPadding(System.Boolean,System.Boolean)">
            <summary>
            Function to update the padding values of the object.
            </summary>
            <param name="isExtraPadding"></param>
            <param name="isBold"></param>
        </member>
        <member name="M:TMPro.TMP_SubMesh.SetVerticesDirty">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_SubMesh.SetMaterialDirty">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_SubMesh.UpdateMaterial">
             <summary>
            
             </summary>
        </member>
        <member name="P:TMPro.TMP_EditorResourceManager.instance">
            <summary>
            Get a singleton instance of the manager.
            </summary>
        </member>
        <member name="M:TMPro.TMP_EditorResourceManager.#ctor">
            <summary>
            Register to receive rendering callbacks.
            </summary>
        </member>
        <member name="M:TMPro.TMP_EditorResourceManager.RegisterResourceForReimport(UnityEngine.Object)">
            <summary>
            Register resource for re-import.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:TMPro.TMP_EditorResourceManager.RegisterResourceForUpdate(UnityEngine.Object)">
            <summary>
            Register resource to be updated.
            </summary>
            <param name="textObject"></param>
        </member>
        <member name="M:TMPro.TMP_EditorResourceManager.RegisterFontAssetForDefinitionRefresh(TMPro.TMP_FontAsset)">
             <summary>
            
             </summary>
             <param name="fontAsset"></param>
        </member>
        <member name="T:TMPro.TMP_InputValidator">
            <summary>
            Custom text input validator where user can implement their own custom character validation.
            </summary>
        </member>
        <member name="T:TMPro.CaretInfo">
            <summary>
            Structure which contains the character index and position of caret relative to the character.
            </summary>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.GetCursorIndexFromPosition(TMPro.TMP_Text,UnityEngine.Vector3,UnityEngine.Camera)">
            <summary>
            Function returning the index of the character whose origin is closest to the cursor.
            </summary>
            <param name="textComponent">A reference to the text object.</param>
            <param name="position">Position to check for intersection.</param>
            <param name="camera">The scene camera which may be assigned to a Canvas using ScreenSpace Camera or WorldSpace render mode. Set to null is using ScreenSpace Overlay.</param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.GetCursorIndexFromPosition(TMPro.TMP_Text,UnityEngine.Vector3,UnityEngine.Camera,TMPro.CaretPosition@)">
            <summary>
            Function returning the index of the character whose origin is closest to the cursor.
            </summary>
            <param name="textComponent">A reference to the text object.</param>
            <param name="position">Position to check for intersection.</param>
            <param name="camera">The scene camera which may be assigned to a Canvas using ScreenSpace Camera or WorldSpace render mode. Set to null is using ScreenSpace Overlay.</param>
            <param name="cursor">The position of the cursor insertion position relative to the position.</param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.FindNearestLine(TMPro.TMP_Text,UnityEngine.Vector3,UnityEngine.Camera)">
            <summary>
            Function returning the line nearest to the position.
            </summary>
            <param name="textComponent"></param>
            <param name="position"></param>
            <param name="camera"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.FindNearestCharacterOnLine(TMPro.TMP_Text,UnityEngine.Vector3,System.Int32,UnityEngine.Camera,System.Boolean)">
            <summary>
            Function returning the nearest character to position on a given line.
            </summary>
            <param name="text"></param>
            <param name="position"></param>
            <param name="line"></param>
            <param name="camera"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.IsIntersectingRectTransform(UnityEngine.RectTransform,UnityEngine.Vector3,UnityEngine.Camera)">
            <summary>
            Function used to determine if the position intersects with the RectTransform.
            </summary>
            <param name="rectTransform">A reference to the RectTranform of the text object.</param>
            <param name="position">Position to check for intersection.</param>
            <param name="camera">The scene camera which may be assigned to a Canvas using ScreenSpace Camera or WorldSpace render mode. Set to null is using ScreenSpace Overlay.</param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.FindIntersectingCharacter(TMPro.TMP_Text,UnityEngine.Vector3,UnityEngine.Camera,System.Boolean)">
            <summary>
            Function returning the index of the character at the given position (if any).
            </summary>
            <param name="text">A reference to the TextMeshPro component.</param>
            <param name="position">Position to check for intersection.</param>
            <param name="camera">The scene camera which is rendering the text or whichever one might be assigned to a Canvas using ScreenSpace Camera or WorldSpace render mode. Set to null is using ScreenSpace Overlay.</param>
            <param name="visibleOnly">Only check for visible characters.</param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.FindNearestCharacter(TMPro.TMP_Text,UnityEngine.Vector3,UnityEngine.Camera,System.Boolean)">
            <summary>
            Function to find the nearest character to position.
            </summary>
            <param name="text">A reference to the TMP Text component.</param>
            <param name="position">Position to check for intersection.</param>
            <param name="camera">The scene camera which may be assigned to a Canvas using ScreenSpace Camera or WorldSpace render mode. Set to null is using ScreenSpace Overlay.</param>
            <param name="visibleOnly">Only check for visible characters.</param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.FindIntersectingWord(TMPro.TMP_Text,UnityEngine.Vector3,UnityEngine.Camera)">
            <summary>
            Function returning the index of the word at the given position (if any).
            </summary>
            <param name="text">A reference to the TMP_Text component.</param>
            <param name="position">Position to check for intersection.</param>
            <param name="camera">The scene camera which may be assigned to a Canvas using ScreenSpace Camera or WorldSpace render mode. Set to null is using ScreenSpace Overlay.</param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.FindNearestWord(TMPro.TMP_Text,UnityEngine.Vector3,UnityEngine.Camera)">
            <summary>
            Function returning the index of the word at the given position (if any).
            </summary>
            <param name="text">A reference to the TMP_Text component.</param>
            <param name="position"></param>
            <param name="camera">The scene camera which may be assigned to a Canvas using ScreenSpace Camera or WorldSpace render mode. Set to null is using ScreenSpace Overlay.</param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.FindIntersectingLine(TMPro.TMP_Text,UnityEngine.Vector3,UnityEngine.Camera)">
            <summary>
            Function returning the line intersecting the position.
            </summary>
            <param name="textComponent"></param>
            <param name="position"></param>
            <param name="camera"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.FindIntersectingLink(TMPro.TMP_Text,UnityEngine.Vector3,UnityEngine.Camera)">
            <summary>
            Function returning the index of the Link at the given position (if any).
            </summary>
            <param name="text">A reference to the TMP_Text component.</param>
            <param name="position">Position to check for intersection.</param>
            <param name="camera">The scene camera which may be assigned to a Canvas using ScreenSpace Camera or WorldSpace render mode. Set to null is using ScreenSpace Overlay.</param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.FindNearestLink(TMPro.TMP_Text,UnityEngine.Vector3,UnityEngine.Camera)">
            <summary>
            Function returning the index of the word at the given position (if any).
            </summary>
            <param name="text">A reference to the TMP_Text component.</param>
            <param name="position">Position to check for intersection.</param>
            <param name="camera">The scene camera which may be assigned to a Canvas using ScreenSpace Camera or WorldSpace render mode. Set to null is using ScreenSpace Overlay.</param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.PointIntersectRectangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Function to check if a Point is contained within a Rectangle.
            </summary>
            <param name="m"></param>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.ScreenPointToWorldPointInRectangle(UnityEngine.Transform,UnityEngine.Vector2,UnityEngine.Camera,UnityEngine.Vector3@)">
            <summary>
            Method to convert ScreenPoint to WorldPoint aligned with Rectangle
            </summary>
            <param name="transform"></param>
            <param name="screenPoint"></param>
            <param name="cam"></param>
            <param name="worldPoint"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.IntersectLinePlane(TMPro.TMP_TextUtilities.LineSegment,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3@)">
            <summary>
            Function returning the point of intersection between a line and a plane.
            </summary>
            <param name="line"></param>
            <param name="point"></param>
            <param name="normal"></param>
            <param name="intersectingPoint"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.DistanceToLine(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Function returning the Square Distance from a Point to a Line.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="F:TMPro.TMP_TextUtilities.k_lookupStringL">
            <summary>
            Table used to convert character to lowercase.
            </summary>
        </member>
        <member name="F:TMPro.TMP_TextUtilities.k_lookupStringU">
            <summary>
            Table used to convert character to uppercase.
            </summary>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.ToLowerFast(System.Char)">
            <summary>
            Get lowercase version of this ASCII character.
            </summary>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.ToUpperFast(System.Char)">
            <summary>
            Get uppercase version of this ASCII character.
            </summary>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.ToUpperASCIIFast(System.UInt32)">
            <summary>
            Get uppercase version of this ASCII character.
            </summary>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.GetHashCode(System.String)">
            <summary>
            Returns the case insensitive hashcode for the given string.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.GetSimpleHashCode(System.String)">
            <summary>
            Function which returns a simple hashcode from a string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.GetSimpleHashCodeLowercase(System.String)">
            <summary>
            Function which returns a simple hashcode from a string converted to lowercase.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.HexToInt(System.Char)">
            <summary>
            Function to convert Hex to Int
            </summary>
            <param name="hex"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextUtilities.StringHexToInt(System.String)">
            <summary>
            Function to convert a properly formatted string which contains an hex value to its decimal value.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="P:TMPro.TMP_UpdateManager.instance">
            <summary>
            Get a singleton instance of the registry
            </summary>
        </member>
        <member name="M:TMPro.TMP_UpdateManager.#ctor">
            <summary>
            Register to receive rendering callbacks.
            </summary>
        </member>
        <member name="M:TMPro.TMP_UpdateManager.RegisterTextObjectForUpdate(TMPro.TMP_Text)">
            <summary>
            Function used as a replacement for LateUpdate() to handle SDF Scale updates and Legacy Animation updates.
            </summary>
            <param name="textObject"></param>
        </member>
        <member name="M:TMPro.TMP_UpdateManager.RegisterTextElementForLayoutRebuild(TMPro.TMP_Text)">
            <summary>
            Function to register elements which require a layout rebuild.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:TMPro.TMP_UpdateManager.RegisterTextElementForGraphicRebuild(TMPro.TMP_Text)">
            <summary>
            Function to register elements which require a layout rebuild.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:TMPro.TMP_UpdateManager.OnCameraPreCull">
            <summary>
            Callback which occurs just before the cam is rendered.
            </summary>
        </member>
        <member name="M:TMPro.TMP_UpdateManager.DoRebuilds">
            <summary>
            Process the rebuild requests in the rebuild queues.
            </summary>
        </member>
        <member name="M:TMPro.TMP_UpdateManager.UnRegisterTextElementForRebuild(TMPro.TMP_Text)">
            <summary>
            Function to unregister elements which no longer require a rebuild.
            </summary>
            <param name="element"></param>
        </member>
        <member name="T:TMPro.TMP_GlyphValueRecord">
            <summary>
            The values used to adjust the position of a glyph or set of glyphs.
            </summary>
        </member>
        <member name="P:TMPro.TMP_GlyphValueRecord.xPlacement">
            <summary>
            The positional adjustment affecting the horizontal bearing X of the glyph.
            </summary>
        </member>
        <member name="P:TMPro.TMP_GlyphValueRecord.yPlacement">
            <summary>
            The positional adjustment affecting the horizontal bearing Y of the glyph.
            </summary>
        </member>
        <member name="P:TMPro.TMP_GlyphValueRecord.xAdvance">
            <summary>
            The positional adjustment affecting the horizontal advance of the glyph.
            </summary>
        </member>
        <member name="P:TMPro.TMP_GlyphValueRecord.yAdvance">
            <summary>
            The positional adjustment affecting the vertical advance of the glyph.
            </summary>
        </member>
        <member name="M:TMPro.TMP_GlyphValueRecord.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructor
            </summary>
            <param name="xPlacement">The positional adjustment affecting the horizontal bearing X of the glyph.</param>
            <param name="yPlacement">The positional adjustment affecting the horizontal bearing Y of the glyph.</param>
            <param name="xAdvance">The positional adjustment affecting the horizontal advance of the glyph.</param>
            <param name="yAdvance">The positional adjustment affecting the vertical advance of the glyph.</param>
        </member>
        <member name="T:TMPro.TMP_GlyphAdjustmentRecord">
            <summary>
            The positional adjustment values of a glyph.
            </summary>
        </member>
        <member name="P:TMPro.TMP_GlyphAdjustmentRecord.glyphIndex">
            <summary>
            The index of the glyph in the source font file.
            </summary>
        </member>
        <member name="P:TMPro.TMP_GlyphAdjustmentRecord.glyphValueRecord">
            <summary>
            The GlyphValueRecord contains the positional adjustments of the glyph.
            </summary>
        </member>
        <member name="M:TMPro.TMP_GlyphAdjustmentRecord.#ctor(System.UInt32,TMPro.TMP_GlyphValueRecord)">
            <summary>
            Constructor
            </summary>
            <param name="glyphIndex">The index of the glyph in the source font file.</param>
            <param name="glyphValueRecord">The GlyphValueRecord contains the positional adjustments of the glyph.</param>
        </member>
        <member name="T:TMPro.TMP_GlyphPairAdjustmentRecord">
            <summary>
            The positional adjustment values for a pair of glyphs.
            </summary>
        </member>
        <member name="P:TMPro.TMP_GlyphPairAdjustmentRecord.firstAdjustmentRecord">
            <summary>
            Contains the positional adjustment values for the first glyph.
            </summary>
        </member>
        <member name="P:TMPro.TMP_GlyphPairAdjustmentRecord.secondAdjustmentRecord">
            <summary>
            Contains the positional adjustment values for the second glyph.
            </summary>
        </member>
        <member name="P:TMPro.TMP_GlyphPairAdjustmentRecord.featureLookupFlags">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_GlyphPairAdjustmentRecord.#ctor(TMPro.TMP_GlyphAdjustmentRecord,TMPro.TMP_GlyphAdjustmentRecord)">
            <summary>
            Constructor
            </summary>
            <param name="firstAdjustmentRecord">First glyph adjustment record.</param>
            <param name="secondAdjustmentRecord">Second glyph adjustment record.</param>
        </member>
        <member name="M:TMPro.TMP_GlyphPairAdjustmentRecord.#ctor(UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord)">
            <summary>
            Internal constructor
            </summary>
            <param name="firstAdjustmentRecord"></param>
            <param name="secondAdjustmentRecord"></param>
        </member>
        <member name="T:TMPro.TMP_ResourceManager">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_ResourceManager.AddFontAsset(TMPro.TMP_FontAsset)">
             <summary>
            
             </summary>
             <param name="fontAsset"></param>
        </member>
        <member name="M:TMPro.TMP_ResourceManager.TryGetFontAsset(System.Int32,TMPro.TMP_FontAsset@)">
             <summary>
            
             </summary>
             <param name="hashcode"></param>
             <param name="fontAsset"></param>
             <returns></returns>
        </member>
        <member name="M:TMPro.TMP_MaterialManager.GetStencilMaterial(UnityEngine.Material,System.Int32)">
            <summary>
            Create a Masking Material Instance for the given ID
            </summary>
            <param name="baseMaterial"></param>
            <param name="stencilID"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_MaterialManager.ReleaseStencilMaterial(UnityEngine.Material)">
            <summary>
            Function to release the stencil material.
            </summary>
            <param name="stencilMaterial"></param>
        </member>
        <member name="M:TMPro.TMP_MaterialManager.SetStencil(UnityEngine.Material,System.Int32)">
            <summary>
            Function to set the Material Stencil ID
            </summary>
            <param name="material"></param>
            <param name="stencilID"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_MaterialManager.GetStencilID(UnityEngine.GameObject)">
            <summary>
            Function to get the Stencil ID
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_MaterialManager.GetFallbackMaterial(UnityEngine.Material,UnityEngine.Material)">
            <summary>
            This function returns a material instance using the material properties of a previous material but using the font atlas texture of the new font asset.
            </summary>
            <param name="sourceMaterial">The material containing the source material properties to be copied to the new material.</param>
            <param name="targetMaterial">The font atlas texture that should be assigned to the new material.</param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_MaterialManager.AddFallbackMaterialReference(UnityEngine.Material)">
             <summary>
            
             </summary>
             <param name="targetMaterial"></param>
        </member>
        <member name="M:TMPro.TMP_MaterialManager.RemoveFallbackMaterialReference(UnityEngine.Material)">
             <summary>
            
             </summary>
             <param name="targetMaterial"></param>
        </member>
        <member name="M:TMPro.TMP_MaterialManager.CleanupFallbackMaterials">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_MaterialManager.ReleaseFallbackMaterial(UnityEngine.Material)">
            <summary>
            Function to release the fallback material.
            </summary>
            <param name="fallbackMaterial">Material to be released.</param>
        </member>
        <member name="M:TMPro.TMP_MaterialManager.CopyMaterialPresetProperties(UnityEngine.Material,UnityEngine.Material)">
            <summary>
            Function to copy the properties of a source material preset to another while preserving the unique font asset properties of the destination material.
            </summary>
            <param name="source"></param>
            <param name="destination"></param>
        </member>
        <member name="P:TMPro.TMP_Dropdown.OptionData.text">
            <summary>
            The text associated with the option.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Dropdown.OptionData.image">
            <summary>
            The image associated with the option.
            </summary>
        </member>
        <member name="M:TMPro.TMP_Dropdown.OptionData.#ctor(System.String,UnityEngine.Sprite)">
            <summary>
            Create an object representing a single option for the dropdown list.
            </summary>
            <param name="text">Optional text for the option.</param>
            <param name="image">Optional image for the option.</param>
        </member>
        <member name="P:TMPro.TMP_Dropdown.OptionDataList.options">
            <summary>
            The list of options for the dropdown list.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Dropdown.template">
            <summary>
            The Rect Transform of the template for the dropdown list.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Dropdown.captionText">
            <summary>
            The Text component to hold the text of the currently selected option.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Dropdown.captionImage">
            <summary>
            The Image component to hold the image of the currently selected option.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Dropdown.placeholder">
            <summary>
            The placeholder Graphic component. Shown when no option is selected.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Dropdown.itemText">
            <summary>
            The Text component to hold the text of the item.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Dropdown.itemImage">
            <summary>
            The Image component to hold the image of the item
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:TMPro.TMP_Dropdown.options" -->
        <!-- Badly formed XML comment ignored for member "P:TMPro.TMP_Dropdown.onValueChanged" -->
        <member name="P:TMPro.TMP_Dropdown.alphaFadeSpeed">
            <summary>
            The time interval at which a drop down will appear and disappear
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:TMPro.TMP_Dropdown.value" -->
        <member name="M:TMPro.TMP_Dropdown.SetValueWithoutNotify(System.Int32)">
            <summary>
            Set index number of the current selection in the Dropdown without invoking onValueChanged callback.
            </summary>
            <param name="input">The new index for the current selection.</param>
        </member>
        <member name="M:TMPro.TMP_Dropdown.RefreshShownValue">
            <summary>
            Refreshes the text and image (if available) of the currently selected option.
            </summary>
            <remarks>
            If you have modified the list of options, you should call this method afterwards to ensure that the visual state of the dropdown corresponds to the updated options.
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TMPro.TMP_Dropdown.AddOptions(System.Collections.Generic.List{TMPro.TMP_Dropdown.OptionData})" -->
        <!-- Badly formed XML comment ignored for member "M:TMPro.TMP_Dropdown.AddOptions(System.Collections.Generic.List{System.String})" -->
        <!-- Badly formed XML comment ignored for member "M:TMPro.TMP_Dropdown.AddOptions(System.Collections.Generic.List{UnityEngine.Sprite})" -->
        <member name="M:TMPro.TMP_Dropdown.ClearOptions">
            <summary>
            Clear the list of options in the Dropdown.
            </summary>
        </member>
        <member name="M:TMPro.TMP_Dropdown.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
            <summary>
            Handling for when the dropdown is initially 'clicked'. Typically shows the dropdown
            </summary>
            <param name="eventData">The associated event data.</param>
        </member>
        <member name="M:TMPro.TMP_Dropdown.OnSubmit(UnityEngine.EventSystems.BaseEventData)">
            <summary>
            Handling for when the dropdown is selected and a submit event is processed. Typically shows the dropdown
            </summary>
            <param name="eventData">The associated event data.</param>
        </member>
        <member name="M:TMPro.TMP_Dropdown.OnCancel(UnityEngine.EventSystems.BaseEventData)">
            <summary>
            This will hide the dropdown list.
            </summary>
            <remarks>
            Called by a BaseInputModule when a Cancel event occurs.
            </remarks>
            <param name="eventData">The associated event data.</param>
        </member>
        <member name="M:TMPro.TMP_Dropdown.Show">
             <summary>
             Show the dropdown.
            
             Plan for dropdown scrolling to ensure dropdown is contained within screen.
            
             We assume the Canvas is the screen that the dropdown must be kept inside.
             This is always valid for screen space canvas modes.
             For world space canvases we don't know how it's used, but it could be e.g. for an in-game monitor.
             We consider it a fair constraint that the canvas must be big enough to contain dropdowns.
             </summary>
        </member>
        <member name="M:TMPro.TMP_Dropdown.CreateBlocker(UnityEngine.Canvas)">
            <summary>
            Create a blocker that blocks clicks to other controls while the dropdown list is open.
            </summary>
            <remarks>
            Override this method to implement a different way to obtain a blocker GameObject.
            </remarks>
            <param name="rootCanvas">The root canvas the dropdown is under.</param>
            <returns>The created blocker object</returns>
        </member>
        <member name="M:TMPro.TMP_Dropdown.DestroyBlocker(UnityEngine.GameObject)">
            <summary>
            Convenience method to explicitly destroy the previously generated blocker object
            </summary>
            <remarks>
            Override this method to implement a different way to dispose of a blocker GameObject that blocks clicks to other controls while the dropdown list is open.
            </remarks>
            <param name="blocker">The blocker object to destroy.</param>
        </member>
        <member name="M:TMPro.TMP_Dropdown.CreateDropdownList(UnityEngine.GameObject)">
            <summary>
            Create the dropdown list to be shown when the dropdown is clicked. The dropdown list should correspond to the provided template GameObject, equivalent to instantiating a copy of it.
            </summary>
            <remarks>
            Override this method to implement a different way to obtain a dropdown list GameObject.
            </remarks>
            <param name="template">The template to create the dropdown list from.</param>
            <returns>The created drop down list gameobject.</returns>
        </member>
        <member name="M:TMPro.TMP_Dropdown.DestroyDropdownList(UnityEngine.GameObject)">
            <summary>
            Convenience method to explicitly destroy the previously generated dropdown list
            </summary>
            <remarks>
            Override this method to implement a different way to dispose of a dropdown list GameObject.
            </remarks>
            <param name="dropdownList">The dropdown list GameObject to destroy</param>
        </member>
        <member name="M:TMPro.TMP_Dropdown.CreateItem(TMPro.TMP_Dropdown.DropdownItem)">
            <summary>
            Create a dropdown item based upon the item template.
            </summary>
            <remarks>
            Override this method to implement a different way to obtain an option item.
            The option item should correspond to the provided template DropdownItem and its GameObject, equivalent to instantiating a copy of it.
            </remarks>
            <param name="itemTemplate">e template to create the option item from.</param>
            <returns>The created dropdown item component</returns>
        </member>
        <member name="M:TMPro.TMP_Dropdown.DestroyItem(TMPro.TMP_Dropdown.DropdownItem)">
            <summary>
             Convenience method to explicitly destroy the previously generated Items.
            </summary>
            <remarks>
            Override this method to implement a different way to dispose of an option item.
            Likely no action needed since destroying the dropdown list destroys all contained items as well.
            </remarks>
            <param name="item">The Item to destroy.</param>
        </member>
        <member name="M:TMPro.TMP_Dropdown.Hide">
            <summary>
            Hide the dropdown list. I.e. close it.
            </summary>
        </member>
        <member name="T:TMPro.TMP_TextElement_Legacy">
            <summary>
            Base class for all text elements like characters (glyphs) and sprites.
            </summary>
        </member>
        <member name="T:TMPro.TMP_Offset">
             <summary>
            
             </summary>
        </member>
        <member name="P:TMPro.TMP_Offset.zero">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_Offset.#ctor(System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>
             <param name="left"></param>
             <param name="right"></param>
             <param name="top"></param>
             <param name="bottom"></param>
        </member>
        <member name="M:TMPro.TMP_Offset.#ctor(System.Single,System.Single)">
             <summary>
            
             </summary>
             <param name="horizontal"></param>
             <param name="vertical"></param>
        </member>
        <member name="T:TMPro.HighlightState">
             <summary>
            
             </summary>
        </member>
        <member name="T:TMPro.TMP_CharacterInfo">
            <summary>
            Structure containing information about individual text elements (character or sprites).
            </summary>
        </member>
        <member name="F:TMPro.TMP_CharacterInfo.index">
            <summary>
            Index of the character in the raw string.
            </summary>
        </member>
        <member name="P:TMPro.TextMeshPro.sortingLayerID">
            <summary>
            Sets the Renderer's sorting Layer ID
            </summary>
        </member>
        <member name="P:TMPro.TextMeshPro.sortingOrder">
            <summary>
            Sets the Renderer's sorting order within the assigned layer.
            </summary>
        </member>
        <member name="P:TMPro.TextMeshPro.autoSizeTextContainer">
            <summary>
            Determines if the size of the text container will be adjusted to fit the text object when it is first created.
            </summary>
        </member>
        <member name="P:TMPro.TextMeshPro.textContainer">
            <summary>
            Returns a reference to the Text Container
            </summary>
        </member>
        <member name="P:TMPro.TextMeshPro.transform">
            <summary>
            Returns a reference to the Transform
            </summary>
        </member>
        <member name="P:TMPro.TextMeshPro.renderer">
            <summary>
            Returns the rendered assigned to the text object.
            </summary>
        </member>
        <member name="P:TMPro.TextMeshPro.mesh">
            <summary>
            Returns the mesh assigned to the text object.
            </summary>
        </member>
        <member name="P:TMPro.TextMeshPro.meshFilter">
            <summary>
            Returns the Mesh Filter of the text object.
            </summary>
        </member>
        <member name="P:TMPro.TextMeshPro.maskType">
            <summary>
            Sets the mask type
            </summary>
        </member>
        <member name="M:TMPro.TextMeshPro.SetMask(TMPro.MaskingTypes,UnityEngine.Vector4)">
            <summary>
            Function used to set the mask type and coordinates in World Space
            </summary>
            <param name="type"></param>
            <param name="maskCoords"></param>
        </member>
        <member name="M:TMPro.TextMeshPro.SetMask(TMPro.MaskingTypes,UnityEngine.Vector4,System.Single,System.Single)">
            <summary>
            Function used to set the mask type, coordinates and softness
            </summary>
            <param name="type"></param>
            <param name="maskCoords"></param>
            <param name="softnessX"></param>
            <param name="softnessY"></param>
        </member>
        <member name="M:TMPro.TextMeshPro.SetVerticesDirty">
            <summary>
            Schedule rebuilding of the text geometry.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshPro.SetLayoutDirty">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TextMeshPro.SetMaterialDirty">
            <summary>
            Schedule updating of the material used by the text object.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshPro.SetAllDirty">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TextMeshPro.Rebuild(UnityEngine.UI.CanvasUpdate)">
             <summary>
            
             </summary>
             <param name="update"></param>
        </member>
        <member name="M:TMPro.TextMeshPro.UpdateMaterial">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TextMeshPro.UpdateMeshPadding">
            <summary>
            Function to be used to force recomputing of character padding when Shader / Material properties have been changed via script.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshPro.ForceMeshUpdate(System.Boolean,System.Boolean)">
            <summary>
            Function to force regeneration of the text object before its normal process time. This is useful when changes to the text object properties need to be applied immediately.
            </summary>
            <param name="ignoreActiveState">Ignore Active State of text objects. Inactive objects are ignored by default.</param>
            <param name="forceTextReparsing">Force re-parsing of the text.</param>
        </member>
        <member name="M:TMPro.TextMeshPro.GetTextInfo(System.String)">
            <summary>
            Function used to evaluate the length of a text string.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TextMeshPro.ClearMesh(System.Boolean)">
            <summary>
            Function to clear the geometry of the Primary and Sub Text objects.
            </summary>
        </member>
        <member name="E:TMPro.TextMeshPro.OnPreRenderText">
            <summary>
            Event to allow users to modify the content of the text info before the text is rendered.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshPro.UpdateGeometry(UnityEngine.Mesh,System.Int32)">
            <summary>
            Function to update the geometry of the main and sub text objects.
            </summary>
            <param name="mesh"></param>
            <param name="index"></param>
        </member>
        <member name="M:TMPro.TextMeshPro.UpdateVertexData(TMPro.TMP_VertexDataUpdateFlags)">
            <summary>
            Function to upload the updated vertex data and renderer.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshPro.UpdateVertexData">
            <summary>
            Function to upload the updated vertex data and renderer.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshPro.OnPrefabInstanceUpdate(UnityEngine.GameObject)">
            <summary>
            Callback received when Prefabs are updated.
            </summary>
            <param name="go">The affected GameObject</param>
        </member>
        <member name="M:TMPro.TextMeshPro.ON_COLOR_GRADIENT_CHANGED(UnityEngine.Object)">
            <summary>
            Event received when a Color Gradient Preset is modified.
            </summary>
            <param name="textObject"></param>
        </member>
        <member name="M:TMPro.TextMeshPro.ON_TMP_SETTINGS_CHANGED">
            <summary>
            Event received when the TMP Settings are changed.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshPro.GetMaterials(UnityEngine.Material[])">
            <summary>
            Method returning instances of the materials used by the text object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TextMeshPro.GetSharedMaterials">
            <summary>
            Method returning an array containing the materials used by the text object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TextMeshPro.SetSharedMaterials(UnityEngine.Material[])">
            <summary>
            Method used to assign new materials to the text and sub text objects.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshPro.ComputeMarginSize">
            <summary>
            Update the margin width and height
            </summary>
        </member>
        <member name="M:TMPro.TextMeshPro.OnDidApplyAnimationProperties">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TextMeshPro.InternalUpdate">
            <summary>
            Function used as a replacement for LateUpdate to check if the transform or scale of the text object has changed.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshPro.OnPreRenderObject">
            <summary>
            Function called when the text needs to be updated.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshPro.GenerateTextMesh">
            <summary>
            This is the main function that is responsible for creating / displaying the text.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshPro.GetTextContainerLocalCorners">
            <summary>
            Method to return the local corners of the Text Container or RectTransform.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TextMeshPro.SetMeshFilters(System.Boolean)">
            <summary>
            Method to disable the renderers.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshPro.SetActiveSubMeshes(System.Boolean)">
            <summary>
            Method to Enable or Disable child SubMesh objects.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:TMPro.TextMeshPro.DestroySubMeshObjects">
            <summary>
            Destroy Sub Mesh Objects
            </summary>
        </member>
        <member name="M:TMPro.TextMeshPro.UpdateSubMeshSortingLayerID(System.Int32)">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TextMeshPro.UpdateSubMeshSortingOrder(System.Int32)">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TextMeshPro.GetCompoundBounds">
            <summary>
             Method returning the compound bounds of the text object and child sub objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TextMeshPro.UpdateSDFScale(System.Single)">
            <summary>
            Method to update the SDF Scale in UV2.
            </summary>
            <param name="scaleDelta"></param>
        </member>
        <member name="T:TMPro.FaceInfo_Legacy">
            <summary>
            Class that contains the basic information about the font.
            </summary>
        </member>
        <member name="M:TMPro.TMP_Glyph.Clone(TMPro.TMP_Glyph)">
            <summary>
            Function to create a deep copy of a GlyphInfo.
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:TMPro.TMP_FontWeightPair">
            <summary>
            Contains the font assets for the regular and italic styles associated with a given font weight.
            </summary>
        </member>
        <member name="T:TMPro.GlyphValueRecord_Legacy">
            <summary>
            Positional adjustments of a glyph
            </summary>
        </member>
        <member name="P:TMPro.KerningPair.firstGlyph">
            <summary>
            The first glyph part of a kerning pair.
            </summary>
        </member>
        <member name="P:TMPro.KerningPair.firstGlyphAdjustments">
            <summary>
            The positional adjustment of the first glyph.
            </summary>
        </member>
        <member name="P:TMPro.KerningPair.secondGlyph">
            <summary>
            The second glyph part of a kerning pair.
            </summary>
        </member>
        <member name="P:TMPro.KerningPair.secondGlyphAdjustments">
            <summary>
            The positional adjustment of the second glyph.
            </summary>
        </member>
        <member name="P:TMPro.KerningPair.ignoreSpacingAdjustments">
            <summary>
            Determines if the Character Spacing property of the text object will affect the kerning pair.
            This is mostly relevant when using Diacritical marks to prevent Character Spacing from altering the 
            </summary>
        </member>
        <member name="M:TMPro.KerningTable.AddKerningPair(System.UInt32,System.UInt32,System.Single)">
            <summary>
            Add Kerning Pair
            </summary>
            <param name="first">First glyph</param>
            <param name="second">Second glyph</param>
            <param name="offset">xAdvance value</param>
            <returns></returns>
        </member>
        <member name="M:TMPro.KerningTable.AddGlyphPairAdjustmentRecord(System.UInt32,TMPro.GlyphValueRecord_Legacy,System.UInt32,TMPro.GlyphValueRecord_Legacy)">
            <summary>
            Add Glyph pair adjustment record
            </summary>
            <param name="firstGlyph">The first glyph</param>
            <param name="firstGlyphAdjustments">Adjustment record for the first glyph</param>
            <param name="secondGlyph">The second glyph</param>
            <param name="secondGlyphAdjustments">Adjustment record for the second glyph</param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_FontUtilities.SearchForCharacter(TMPro.TMP_FontAsset,System.UInt32,TMPro.TMP_Character@)">
            <summary>
            Search through the given font and its fallbacks for the specified character.
            </summary>
            <param name="font">The font asset to search for the given character.</param>
            <param name="unicode">The character to find.</param>
            <param name="character">out parameter containing the glyph for the specified character (if found).</param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_FontUtilities.SearchForCharacter(System.Collections.Generic.List{TMPro.TMP_FontAsset},System.UInt32,TMPro.TMP_Character@)">
            <summary>
            Search through the given list of fonts and their possible fallbacks for the specified character.
            </summary>
            <param name="fonts"></param>
            <param name="unicode"></param>
            <param name="character"></param>
            <returns></returns>
        </member>
        <member name="T:TMPro.TMP_TextElement">
            <summary>
            Base class for all text elements like Character and SpriteCharacter.
            </summary>
        </member>
        <member name="P:TMPro.TMP_TextElement.elementType">
            <summary>
            The type of text element which can be a character or sprite.
            </summary>
        </member>
        <member name="P:TMPro.TMP_TextElement.unicode">
            <summary>
            The unicode value (code point) of the character.
            </summary>
        </member>
        <member name="P:TMPro.TMP_TextElement.textAsset">
            <summary>
            The Text Asset to which this Text Element belongs.
            </summary>
        </member>
        <member name="P:TMPro.TMP_TextElement.glyph">
            <summary>
            The glyph used by this text element.
            </summary>
        </member>
        <member name="P:TMPro.TMP_TextElement.glyphIndex">
            <summary>
            The index of the glyph used by this text element.
            </summary>
        </member>
        <member name="P:TMPro.TMP_TextElement.scale">
            <summary>
            The relative scale of the character.
            </summary>
        </member>
        <member name="T:TMPro.TMP_InputField">
            <summary>
            Editable text input field.
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_RectTransform">
            <summary>
            Text Text used to display the input's value.
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_ScrollPosition">
            <summary>
            Used to keep track of scroll position
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_ScrollSensitivity">
             <summary>
            
             </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_InputType">
            <summary>
            Type of data expected by the input field.
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_AsteriskChar">
            <summary>
            The character used to hide text in password field.
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_KeyboardType">
            <summary>
            Keyboard type applies to mobile keyboards that get shown.
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_HideMobileInput">
            <summary>
            Should hide mobile input field part of the virtual keyboard.
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_HideSoftKeyboard">
            <summary>
            Should hide soft / virtual keyboard.
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_CharacterValidation">
            <summary>
            What kind of validation to use with the input field's data.
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_RegexValue">
            <summary>
            The Regex expression used for validating the text input.
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_GlobalPointSize">
            <summary>
            The point sized used by the placeholder and input text object.
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_CharacterLimit">
            <summary>
            Maximum number of characters allowed before input no longer works.
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_OnEndEdit">
            <summary>
            Event delegates triggered when the input field submits its data.
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_OnSubmit">
            <summary>
            Event delegates triggered when the input field submits its data.
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_OnSelect">
            <summary>
            Event delegates triggered when the input field is focused.
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_OnDeselect">
            <summary>
            Event delegates triggered when the input field focus is lost.
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_OnTextSelection">
            <summary>
            Event delegates triggered when the text is selected / highlighted.
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_OnEndTextSelection">
            <summary>
            Event delegates triggered when text is no longer select / highlighted.
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_OnValueChanged">
            <summary>
            Event delegates triggered when the input field changes its data.
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_OnTouchScreenKeyboardStatusChanged">
            <summary>
            Event delegates triggered when the status of the TouchScreenKeyboard changes.
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_OnValidateInput">
            <summary>
            Custom validation callback.
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_Text">
            <summary>
            Input field's value.
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.shouldHideMobileInput">
            <summary>
            Should the mobile keyboard input be hidden.
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.text">
             <summary>
             Input field's current text value. This is not necessarily the same as what is visible on screen.
             </summary>
             <remarks>
             Note that null is invalid value  for InputField.text.
             </remarks>
             <example>
             <code>
             using UnityEngine;
             using System.Collections;
             using UnityEngine.UI; // Required when Using UI elements.
            
             public class Example : MonoBehaviour
             {
                 public InputField mainInputField;
            
                 public void Start()
                 {
                     mainInputField.text = "Enter Text Here...";
                 }
             }
             </code>
             </example>
        </member>
        <member name="M:TMPro.TMP_InputField.SetTextWithoutNotify(System.String)">
            <summary>
            Set Input field's current text value without invoke onValueChanged. This is not necessarily the same as what is visible on screen.
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.pointSize">
            <summary>
            Set the point size on both Placeholder and Input text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.fontAsset">
            <summary>
            Sets the Font Asset on both Placeholder and Input child objects.
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.onFocusSelectAll">
            <summary>
            Determines if the whole text will be selected when focused.
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.resetOnDeActivation">
            <summary>
            Determines if the text and caret position as well as selection will be reset when the input field is deactivated.
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.restoreOriginalTextOnEscape">
            <summary>
            Controls whether the original text is restored when pressing "ESC".
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.isRichTextEditingAllowed">
            <summary>
            Is Rich Text editing allowed?
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.lineLimit">
            <summary>
            Limits the number of lines of text in the Input Field.
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.inputValidator">
            <summary>
            Sets the Input Validation to use a Custom Input Validation script.
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.caretPositionInternal">
            <summary>
            Current position of the cursor.
            Getters are public Setters are protected
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.caretPosition">
            <summary>
            Get: Returns the focus position as thats the position that moves around even during selection.
            Set: Set both the anchor and focus position such that a selection doesn't happen
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.selectionAnchorPosition">
            <summary>
            Get: Returns the fixed position of selection
            Set: If compositionString is 0 set the fixed position
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.selectionFocusPosition">
            <summary>
            Get: Returns the variable position of selection
            Set: If compositionString is 0 set the variable position
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.stringPosition">
             <summary>
            
             </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.selectionStringAnchorPosition">
            <summary>
            The fixed position of the selection in the raw string which may contains rich text.
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.selectionStringFocusPosition">
            <summary>
            The variable position of the selection in the raw string which may contains rich text.
            </summary>
        </member>
        <member name="M:TMPro.TMP_InputField.ON_TEXT_CHANGED(UnityEngine.Object)">
            <summary>
            Method used to update the tracking of the caret position when the text object has been regenerated.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:TMPro.TMP_InputField.MoveTextEnd(System.Boolean)">
            <summary>
            Move to the end of the text.
            </summary>
            <param name="shift"></param>
        </member>
        <member name="M:TMPro.TMP_InputField.MoveTextStart(System.Boolean)">
            <summary>
            Move to the start of the text.
            </summary>
            <param name="shift"></param>
        </member>
        <member name="M:TMPro.TMP_InputField.MoveToEndOfLine(System.Boolean,System.Boolean)">
            <summary>
            Move to the end of the current line of text.
            </summary>
            <param name="shift"></param>
        </member>
        <member name="M:TMPro.TMP_InputField.MoveToStartOfLine(System.Boolean,System.Boolean)">
            <summary>
            Move to the start of the current line of text.
            </summary>
            <param name="shift"></param>
        </member>
        <member name="M:TMPro.TMP_InputField.LateUpdate">
            <summary>
            Update the text based on input.
            </summary>
        </member>
        <member name="F:TMPro.TMP_InputField.m_ProcessingEvent">
            <summary>
            Handle the specified event.
            </summary>
        </member>
        <member name="M:TMPro.TMP_InputField.OnUpdateSelected(UnityEngine.EventSystems.BaseEventData)">
             <summary>
            
             </summary>
             <param name="eventData"></param>
        </member>
        <member name="M:TMPro.TMP_InputField.OnScroll(UnityEngine.EventSystems.PointerEventData)">
             <summary>
            
             </summary>
             <param name="eventData"></param>
        </member>
        <member name="M:TMPro.TMP_InputField.DeleteKey">
            <summary>
            Handling of DEL key
            </summary>
        </member>
        <member name="M:TMPro.TMP_InputField.Backspace">
            <summary>
            Handling of Backspace key
            </summary>
        </member>
        <member name="M:TMPro.TMP_InputField.Append(System.String)">
            <summary>
            Append the specified text to the end of the current.
            </summary>
        </member>
        <member name="M:TMPro.TMP_InputField.SendOnEndEdit">
            <summary>
            Submit the input field's text.
            </summary>
        </member>
        <member name="M:TMPro.TMP_InputField.UpdateLabel">
            <summary>
            Update the visual text Text.
            </summary>
        </member>
        <member name="M:TMPro.TMP_InputField.OnScrollbarValueChange(System.Single)">
            <summary>
            Function to update the vertical position of the text container when OnValueChanged event is received from the Scrollbar.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:TMPro.TMP_InputField.AdjustTextPositionRelativeToViewport(System.Single)">
            <summary>
            Adjusts the relative position of the body of the text relative to the viewport.
            </summary>
            <param name="relativePosition"></param>
        </member>
        <member name="M:TMPro.TMP_InputField.GetMinCaretPositionFromStringIndex(System.Int32)">
            <summary>
            Returns / places the caret before the given character at the string index.
            </summary>
            <param name="stringIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_InputField.GetMaxCaretPositionFromStringIndex(System.Int32)">
            <summary>
            Returns / places the caret after the given character at the string index.
            </summary>
            <param name="stringIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_InputField.AssignPositioningIfNeeded">
            <summary>
            Method to keep the Caret RectTransform properties in sync with the text object's RectTransform
            </summary>
        </member>
        <member name="M:TMPro.TMP_InputField.AdjustRectTransformRelativeToViewport(UnityEngine.Vector2,System.Single,System.Boolean)">
             <summary>
            
             </summary>
             <param name="startPosition"></param>
             <param name="height"></param>
             <param name="isCharVisible"></param>
        </member>
        <member name="M:TMPro.TMP_InputField.Validate(System.String,System.Int32,System.Char)">
            <summary>
            Validate the specified input.
            </summary>
        </member>
        <member name="M:TMPro.TMP_InputField.CalculateLayoutInputHorizontal">
            <summary>
            See ILayoutElement.CalculateLayoutInputHorizontal.
            </summary>
        </member>
        <member name="M:TMPro.TMP_InputField.CalculateLayoutInputVertical">
            <summary>
            See ILayoutElement.CalculateLayoutInputVertical.
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.minWidth">
            <summary>
            See ILayoutElement.minWidth.
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.preferredWidth">
            <summary>
            Get the displayed with of all input characters.
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.flexibleWidth">
            <summary>
            See ILayoutElement.flexibleWidth.
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.minHeight">
            <summary>
            See ILayoutElement.minHeight.
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.preferredHeight">
            <summary>
            Get the height of all the text if constrained to the height of the RectTransform.
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.flexibleHeight">
            <summary>
            See ILayoutElement.flexibleHeight.
            </summary>
        </member>
        <member name="P:TMPro.TMP_InputField.layoutPriority">
            <summary>
            See ILayoutElement.layoutPriority.
            </summary>
        </member>
        <member name="M:TMPro.TMP_InputField.SetGlobalPointSize(System.Single)">
            <summary>
            Function to conveniently set the point size of both Placeholder and Input Field text object.
            </summary>
            <param name="pointSize"></param>
        </member>
        <member name="M:TMPro.TMP_InputField.SetGlobalFontAsset(TMPro.TMP_FontAsset)">
            <summary>
            Function to conveniently set the Font Asset of both Placeholder and Input Field text object.
            </summary>
            <param name="fontAsset"></param>
        </member>
        <member name="P:TMPro.TextMeshProUGUI.materialForRendering">
            <summary>
            Get the material that will be used for rendering.
            </summary>
        </member>
        <member name="P:TMPro.TextMeshProUGUI.autoSizeTextContainer">
            <summary>
            Determines if the size of the text container will be adjusted to fit the text object when it is first created.
            </summary>
        </member>
        <member name="P:TMPro.TextMeshProUGUI.mesh">
            <summary>
            Reference to the Mesh used by the text object.
            </summary>
        </member>
        <member name="P:TMPro.TextMeshProUGUI.canvasRenderer">
            <summary>
            Reference to the CanvasRenderer used by the text object.
            </summary>
        </member>
        <member name="F:TMPro.TextMeshProUGUI.m_isRebuildingLayout">
            <summary>
            Anchor dampening prevents the anchor position from being adjusted unless the positional change exceeds about 40% of the width of the underline character. This essentially stabilizes the anchor position.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.CalculateLayoutInputHorizontal">
            <summary>
            Function called by Unity when the horizontal layout needs to be recalculated.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.CalculateLayoutInputVertical">
            <summary>
            Function called by Unity when the vertical layout needs to be recalculated.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.SetLayoutDirty">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.SetMaterialDirty">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.SetAllDirty">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.DelayedGraphicRebuild">
            <summary>
            Delay registration of text object for graphic rebuild by one frame.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.DelayedMaterialRebuild">
            <summary>
            Delay registration of text object for graphic rebuild by one frame.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.Rebuild(UnityEngine.UI.CanvasUpdate)">
             <summary>
            
             </summary>
             <param name="update"></param>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.UpdateSubObjectPivot">
            <summary>
            Method to keep the pivot of the sub text objects in sync with the parent pivot.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.GetModifiedMaterial(UnityEngine.Material)">
             <summary>
            
             </summary>
             <param name="baseMaterial"></param>
             <returns></returns>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.UpdateMaterial">
             <summary>
            
             </summary>
        </member>
        <member name="P:TMPro.TextMeshProUGUI.maskOffset">
            <summary>
            Sets the masking offset from the bounds of the object
            </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.RecalculateClipping">
            <summary>
            Method called when the state of a parent changes.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.Cull(UnityEngine.Rect,System.Boolean)">
            <summary>
            Override of the Cull function to provide for the ability to override the culling of the text object.
            </summary>
            <param name="clipRect"></param>
            <param name="validRect"></param>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.UpdateCulling">
            <summary>
            Internal function to allow delay of culling until the text geometry has been updated.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.UpdateMeshPadding">
            <summary>
            Function to be used to force recomputing of character padding when Shader / Material properties have been changed via script.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.InternalCrossFadeColor(UnityEngine.Color,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Tweens the CanvasRenderer color associated with this Graphic.
            </summary>
            <param name="targetColor">Target color.</param>
            <param name="duration">Tween duration.</param>
            <param name="ignoreTimeScale">Should ignore Time.scale?</param>
            <param name="useAlpha">Should also Tween the alpha channel?</param>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.InternalCrossFadeAlpha(System.Single,System.Single,System.Boolean)">
            <summary>
            Tweens the alpha of the CanvasRenderer color associated with this Graphic.
            </summary>
            <param name="alpha">Target alpha.</param>
            <param name="duration">Duration of the tween in seconds.</param>
            <param name="ignoreTimeScale">Should ignore Time.scale?</param>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.ForceMeshUpdate(System.Boolean,System.Boolean)">
            <summary>
            Function to force regeneration of the text object before its normal process time. This is useful when changes to the text object properties need to be applied immediately.
            </summary>
            <param name="ignoreActiveState">Ignore Active State of text objects. Inactive objects are ignored by default.</param>
            <param name="forceTextReparsing">Force re-parsing of the text.</param>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.GetTextInfo(System.String)">
            <summary>
            Function used to evaluate the length of a text string.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.ClearMesh">
            <summary>
            Function to clear the geometry of the Primary and Sub Text objects.
            </summary>
        </member>
        <member name="E:TMPro.TextMeshProUGUI.OnPreRenderText">
            <summary>
            Event to allow users to modify the content of the text info before the text is rendered.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.UpdateGeometry(UnityEngine.Mesh,System.Int32)">
            <summary>
            Function to update the geometry of the main and sub text objects.
            </summary>
            <param name="mesh"></param>
            <param name="index"></param>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.UpdateVertexData(TMPro.TMP_VertexDataUpdateFlags)">
            <summary>
            Function to upload the updated vertex data and renderer.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.UpdateVertexData">
            <summary>
            Function to upload the updated vertex data and renderer.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.OnPrefabInstanceUpdate(UnityEngine.GameObject)">
            <summary>
            Callback received when Prefabs are updated.
            </summary>
            <param name="go">The affected GameObject</param>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.ON_COLOR_GRADIENT_CHANGED(UnityEngine.Object)">
            <summary>
            Event received when a Color Gradient Preset is modified.
            </summary>
            <param name="textObject"></param>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.ON_TMP_SETTINGS_CHANGED">
            <summary>
            Event received when the TMP Settings are changed.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.GetCanvas">
            <summary>
            Method to retrieve the parent Canvas.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.UpdateEnvMapMatrix">
            <summary>
            Method used when animating the Env Map on the material.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.GetMaterials(UnityEngine.Material[])">
            <summary>
            Method returning instances of the materials used by the text object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.GetSharedMaterials">
            <summary>
            Method returning an array containing the materials used by the text object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.SetSharedMaterials(UnityEngine.Material[])">
            <summary>
            Method used to assign new materials to the text and sub text objects.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.ComputeMarginSize">
            <summary>
            Update the margin width and height
            </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.OnDidApplyAnimationProperties">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.InternalUpdate">
            <summary>
            Function used as a replacement for LateUpdate to check if the transform or scale of the text object has changed.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.OnPreRenderCanvas">
            <summary>
            Function called when the text needs to be updated.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.GenerateTextMesh">
            <summary>
            This is the main function that is responsible for creating / displaying the text.
            </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.GetTextContainerLocalCorners">
            <summary>
            Method to return the local corners of the Text Container or RectTransform.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.SetActiveSubMeshes(System.Boolean)">
            <summary>
            Method to Enable or Disable child SubMesh objects.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.DestroySubMeshObjects">
            <summary>
            Destroy Sub Mesh Objects
            </summary>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.GetCompoundBounds">
            <summary>
             Method returning the compound bounds of the text object and child sub objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TextMeshProUGUI.UpdateSDFScale(System.Single)">
            <summary>
            Method to update the SDF Scale in UV2.
            </summary>
            <param name="scaleDelta"></param>
        </member>
        <member name="F:TMPro.ShaderUtilities.ID_UnderlayOffset">
            <summary>
            Property ID for the _UnderlayOffset shader property used by URP and HDRP shaders
            </summary>
        </member>
        <member name="F:TMPro.ShaderUtilities.ID_UnderlayIsoPerimeter">
            <summary>
            Property ID for the _UnderlayIsoPerimeter shader property used by URP and HDRP shaders
            </summary>
        </member>
        <member name="P:TMPro.ShaderUtilities.ShaderRef_MobileSDF">
            <summary>
            Returns a reference to the mobile distance field shader.
            </summary>
        </member>
        <member name="P:TMPro.ShaderUtilities.ShaderRef_MobileBitmap">
            <summary>
            Returns a reference to the mobile bitmap shader.
            </summary>
        </member>
        <member name="M:TMPro.ShaderUtilities.#cctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.ShaderUtilities.GetShaderPropertyIDs">
             <summary>
            
             </summary>
        </member>
        <member name="T:TMPro.TMP_Character">
            <summary>
            A basic element of text.
            </summary>
        </member>
        <member name="M:TMPro.TMP_Character.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:TMPro.TMP_Character.#ctor(System.UInt32,UnityEngine.TextCore.Glyph)">
            <summary>
            Constructor for new character
            </summary>
            <param name="unicode">Unicode value.</param>
            <param name="glyph">Glyph</param>
        </member>
        <member name="M:TMPro.TMP_Character.#ctor(System.UInt32,TMPro.TMP_FontAsset,UnityEngine.TextCore.Glyph)">
            <summary>
            Constructor for new character
            </summary>
            <param name="unicode">Unicode value.</param>
            <param name="fontAsset">The font asset to which this character belongs.</param>
            <param name="glyph">Glyph</param>
        </member>
        <member name="M:TMPro.TMP_Character.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Constructor for new character
            </summary>
            <param name="unicode">Unicode value.</param>
            <param name="glyphIndex">Glyph index.</param>
        </member>
        <member name="T:TMPro.TMP_UpdateRegistry">
            <summary>
            Class for handling and scheduling text object updates.
            </summary>
        </member>
        <member name="P:TMPro.TMP_UpdateRegistry.instance">
            <summary>
            Get a singleton instance of the registry
            </summary>
        </member>
        <member name="M:TMPro.TMP_UpdateRegistry.#ctor">
            <summary>
            Register to receive callback from the Canvas System.
            </summary>
        </member>
        <member name="M:TMPro.TMP_UpdateRegistry.RegisterCanvasElementForLayoutRebuild(UnityEngine.UI.ICanvasElement)">
            <summary>
            Function to register elements which require a layout rebuild.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:TMPro.TMP_UpdateRegistry.RegisterCanvasElementForGraphicRebuild(UnityEngine.UI.ICanvasElement)">
            <summary>
            Function to register elements which require a graphic rebuild.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:TMPro.TMP_UpdateRegistry.PerformUpdateForCanvasRendererObjects">
            <summary>
            Method to handle objects that need updating.
            </summary>
        </member>
        <member name="M:TMPro.TMP_UpdateRegistry.PerformUpdateForMeshRendererObjects">
            <summary>
            Method to handle objects that need updating.
            </summary>
        </member>
        <member name="M:TMPro.TMP_UpdateRegistry.UnRegisterCanvasElementForRebuild(UnityEngine.UI.ICanvasElement)">
            <summary>
            Function to unregister elements which no longer require a rebuild.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:TMPro.TMP_PackageResourceImporter.ImportCallback(System.String)">
             <summary>
            
             </summary>
             <param name="packageName"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TMPro.TMP_PackageResourceImporter.ImportResources(System.Boolean,System.Boolean,System.Boolean)" -->
        <member name="M:TMPro.TMP_PackageResourceImporterWindow.SetEditorWindowSize">
            <summary>
            Limits the minimum size of the editor window.
            </summary>
        </member>
        <member name="T:TMPro.HorizontalAlignmentOptions">
            <summary>
            Horizontal text alignment options.
            </summary>
        </member>
        <member name="T:TMPro.VerticalAlignmentOptions">
            <summary>
            Vertical text alignment options.
            </summary>
        </member>
        <member name="T:TMPro.TextRenderFlags">
            <summary>
            Flags controlling what vertex data gets pushed to the mesh.
            </summary>
        </member>
        <member name="T:TMPro.TMP_Text">
            <summary>
            Base class which contains common properties and functions shared between the TextMeshPro and TextMeshProUGUI component.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.text">
            <summary>
            A string containing the text to be displayed.
            </summary>
        </member>
        <member name="F:TMPro.TMP_Text.m_IsTextBackingStringDirty">
             <summary>
            
             </summary>
        </member>
        <member name="P:TMPro.TMP_Text.textPreprocessor">
            <summary>
            The ITextPreprocessor component referenced by the text object (if any)
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.isRightToLeftText">
             <summary>
            
             </summary>
        </member>
        <member name="P:TMPro.TMP_Text.font">
            <summary>
            The Font Asset to be assigned to this text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.fontSharedMaterial">
            <summary>
            The material to be assigned to this text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.fontSharedMaterials">
            <summary>
            An array containing the materials used by the text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.fontMaterial">
            <summary>
            The material to be assigned to this text object. An instance of the material will be assigned to the object's renderer.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.fontMaterials">
            <summary>
            The materials to be assigned to this text object. An instance of the materials will be assigned.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.color">
            <summary>
            This is the default vertex color assigned to each vertices. Color tags will override vertex colors unless the overrideColorTags is set.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.alpha">
            <summary>
            Sets the vertex color alpha value.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.enableVertexGradient">
            <summary>
            Determines if Vertex Color Gradient should be used
            </summary>
            <value><c>true</c> if enable vertex gradient; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:TMPro.TMP_Text.colorGradient">
            <summary>
            Sets the vertex colors for each of the 4 vertices of the character quads.
            </summary>
            <value>The color gradient.</value>
        </member>
        <member name="P:TMPro.TMP_Text.colorGradientPreset">
            <summary>
            Set the vertex colors of the 4 vertices of each character quads.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.spriteAsset">
            <summary>
            Sprite Asset used by the text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.tintAllSprites">
            <summary>
            Determines whether or not the sprite color is multiplies by the vertex color of the text.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.styleSheet">
            <summary>
            Style sheet used by the text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.textStyle">
             <summary>
            
             </summary>
        </member>
        <member name="P:TMPro.TMP_Text.overrideColorTags">
            <summary>
            This overrides the color tags forcing the vertex colors to be the default font color.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.faceColor">
            <summary>
            Sets the color of the _FaceColor property of the assigned material. Changing face color will result in an instance of the material.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.outlineColor">
            <summary>
            Sets the color of the _OutlineColor property of the assigned material. Changing outline color will result in an instance of the material.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.outlineWidth">
            <summary>
            Sets the thickness of the outline of the font. Setting this value will result in an instance of the material.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.fontSize">
            <summary>
            The point size of the font.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.fontWeight">
            <summary>
            Control the weight of the font if an alternative font asset is assigned for the given weight in the font asset editor.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.pixelsPerUnit">
             <summary>
            
             </summary>
        </member>
        <member name="P:TMPro.TMP_Text.enableAutoSizing">
            <summary>
            Enable text auto-sizing
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.fontSizeMin">
            <summary>
            Minimum point size of the font when text auto-sizing is enabled.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.fontSizeMax">
            <summary>
            Maximum point size of the font when text auto-sizing is enabled.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.fontStyle">
            <summary>
            The style of the text
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.isUsingBold">
            <summary>
            Property used in conjunction with padding calculation for the geometry.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.horizontalAlignment">
            <summary>
            Horizontal alignment options
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.verticalAlignment">
            <summary>
            Vertical alignment options
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.alignment">
            <summary>
            Text alignment options
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.characterSpacing">
            <summary>
            The amount of additional spacing between characters.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.wordSpacing">
            <summary>
            The amount of additional spacing between words.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.lineSpacing">
            <summary>
            The amount of additional spacing to add between each lines of text.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.lineSpacingAdjustment">
            <summary>
            The amount of potential line spacing adjustment before text auto sizing kicks in.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.paragraphSpacing">
            <summary>
            The amount of additional spacing to add between each lines of text.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.characterWidthAdjustment">
            <summary>
            Percentage the width of characters can be adjusted before text auto-sizing begins to reduce the point size.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.enableWordWrapping">
            <summary>
            Controls whether or not word wrapping is applied. When disabled, the text will be displayed on a single line.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.wordWrappingRatios">
            <summary>
            Controls the blending between using character and word spacing to fill-in the space for justified text.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.overflowMode">
            <summary>
            Controls the Text Overflow Mode
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.isTextOverflowing">
            <summary>
            Indicates if the text exceeds the vertical bounds of its text container.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.firstOverflowCharacterIndex">
            <summary>
            The first character which exceeds the vertical bounds of its text container.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.linkedTextComponent">
            <summary>
            The linked text component used for flowing the text from one text component to another.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.isTextTruncated">
            <summary>
            Property indicating whether the text is Truncated or using Ellipsis.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.enableKerning">
            <summary>
            Determines if kerning is enabled or disabled.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.extraPadding">
            <summary>
            Adds extra padding around each character. This may be necessary when the displayed text is very small to prevent clipping.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.richText">
            <summary>
            Enables or Disables Rich Text Tags
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.parseCtrlCharacters">
            <summary>
            Enables or Disables parsing of CTRL characters in input text.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.isOverlay">
            <summary>
            Sets the RenderQueue along with Ztest to force the text to be drawn last and on top of scene elements.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:TMPro.TMP_Text.isOrthographic" -->
        <member name="P:TMPro.TMP_Text.enableCulling">
            <summary>
            Sets the culling on the shaders. Note changing this value will result in an instance of the material.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.ignoreVisibility">
            <summary>
            Forces objects that are not visible to get refreshed.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.horizontalMapping">
            <summary>
            Controls how the face and outline textures will be applied to the text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.verticalMapping">
            <summary>
            Controls how the face and outline textures will be applied to the text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.mappingUvLineOffset">
            <summary>
            Controls the horizontal offset of the UV of the texture mapping mode for each line of the text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.renderMode">
            <summary>
            Determines if the Mesh will be rendered.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.geometrySortingOrder">
            <summary>
            Determines the sorting order of the geometry of the text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.isTextObjectScaleStatic">
            <summary>
            Determines if a text object will be excluded from the InternalUpdate callback used to handle updates of SDF Scale when the scale of the text object or parent(s) changes.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.vertexBufferAutoSizeReduction">
            <summary>
            Determines if the data structures allocated to contain the geometry of the text object will be reduced in size if the number of characters required to display the text is reduced by more than 256 characters.
            This reduction has the benefit of reducing the amount of vertex data being submitted to the graphic device but results in GC when it occurs.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.firstVisibleCharacter">
            <summary>
            The first character which should be made visible in conjunction with the Text Overflow Linked mode.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.maxVisibleCharacters">
            <summary>
            Allows to control how many characters are visible from the input.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.maxVisibleWords">
            <summary>
            Allows to control how many words are visible from the input.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.maxVisibleLines">
            <summary>
            Allows control over how many lines of text are displayed.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.useMaxVisibleDescender">
            <summary>
            Determines if the text's vertical alignment will be adjusted based on visible descender of the text.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.pageToDisplay">
            <summary>
            Controls which page of text is shown
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.margin">
            <summary>
            The margins of the text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.textInfo">
            <summary>
            Returns data about the text object which includes information about each character, word, line, link, etc.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.havePropertiesChanged">
            <summary>
            Property tracking if any of the text properties have changed. Flag is set before the text is regenerated.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.isUsingLegacyAnimationComponent">
            <summary>
            Property to handle legacy animation component.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.transform">
            <summary>
            Returns are reference to the Transform
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.rectTransform">
            <summary>
            Returns are reference to the RectTransform
            </summary>
        </member>
        <member name="F:TMPro.TMP_Text.m_PreviousRectTransformSize">
            <summary>
            Used to track potential changes in RectTransform size to allow us to ignore OnRectTransformDimensionsChange getting called due to rounding errors when using Stretch Anchors.
            </summary>
        </member>
        <member name="F:TMPro.TMP_Text.m_PreviousPivotPosition">
            <summary>
            Used to track potential changes in pivot position to allow us to ignore OnRectTransformDimensionsChange getting called due to rounding errors when using Stretch Anchors.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.autoSizeTextContainer">
            <summary>
            Enables control over setting the size of the text container to match the text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.mesh">
            <summary>
            The mesh used by the font asset and material assigned to the text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.isVolumetricText">
            <summary>
            Determines if the geometry of the characters will be quads or volumetric (cubes).
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.bounds">
            <summary>
            Returns the bounds of the mesh of the text object in world space.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.textBounds">
            <summary>
            Returns the bounds of the text of the text object.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "E:TMPro.TMP_Text.OnFontAssetRequest" -->
        <!-- Badly formed XML comment ignored for member "E:TMPro.TMP_Text.OnSpriteAssetRequest" -->
        <member name="E:TMPro.TMP_Text.OnPreRenderText">
            <summary>
            Event delegate to allow modifying the text geometry before it is uploaded to the mesh and rendered.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.spriteAnimator">
            <summary>
            Component used to control and animate sprites in the text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.flexibleHeight">
             <summary>
            
             </summary>
        </member>
        <member name="P:TMPro.TMP_Text.flexibleWidth">
             <summary>
            
             </summary>
        </member>
        <member name="P:TMPro.TMP_Text.minWidth">
             <summary>
            
             </summary>
        </member>
        <member name="P:TMPro.TMP_Text.minHeight">
             <summary>
            
             </summary>
        </member>
        <member name="P:TMPro.TMP_Text.maxWidth">
             <summary>
            
             </summary>
        </member>
        <member name="P:TMPro.TMP_Text.maxHeight">
             <summary>
            
             </summary>
        </member>
        <member name="P:TMPro.TMP_Text.layoutElement">
             <summary>
            
             </summary>
        </member>
        <member name="P:TMPro.TMP_Text.preferredWidth">
            <summary>
            Computed preferred width of the text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.preferredHeight">
            <summary>
            Computed preferred height of the text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.renderedWidth">
            <summary>
            Compute the rendered width of the text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.renderedHeight">
            <summary>
            Compute the rendered height of the text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Text.layoutPriority">
             <summary>
            
             </summary>
        </member>
        <member name="F:TMPro.TMP_Text.m_TextProcessingArray">
            <summary>
            Array containing the Unicode characters to be parsed.
            </summary>
        </member>
        <member name="F:TMPro.TMP_Text.m_InternalTextProcessingArraySize">
            <summary>
            The number of Unicode characters that have been parsed and contained in the m_InternalParsingBuffer
            </summary>
        </member>
        <member name="M:TMPro.TMP_Text.LoadFontAsset">
            <summary>
            Method which derived classes need to override to load Font Assets.
            </summary>
        </member>
        <member name="M:TMPro.TMP_Text.SetSharedMaterial(UnityEngine.Material)">
            <summary>
            Function called internally when a new shared material is assigned via the fontSharedMaterial property.
            </summary>
            <param name="mat"></param>
        </member>
        <member name="M:TMPro.TMP_Text.GetMaterial(UnityEngine.Material)">
            <summary>
            Function called internally when a new material is assigned via the fontMaterial property.
            </summary>
        </member>
        <member name="M:TMPro.TMP_Text.SetFontBaseMaterial(UnityEngine.Material)">
            <summary>
            Function called internally when assigning a new base material.
            </summary>
            <param name="mat"></param>
        </member>
        <member name="M:TMPro.TMP_Text.GetSharedMaterials">
            <summary>
            Method which returns an array containing the materials used by the text object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.SetSharedMaterials(UnityEngine.Material[])">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_Text.GetMaterials(UnityEngine.Material[])">
            <summary>
            Method returning instances of the materials used by the text object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.CreateMaterialInstance(UnityEngine.Material)">
            <summary>
            Function used to create an instance of the material
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.SetTextSortingOrder(TMPro.VertexSortingOrder)">
            <summary>
            Function to control the sorting of the geometry of the text object.
            </summary>
        </member>
        <member name="M:TMPro.TMP_Text.SetTextSortingOrder(System.Int32[])">
            <summary>
            Function to sort the geometry of the text object in accordance to the provided order.
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:TMPro.TMP_Text.SetFaceColor(UnityEngine.Color32)">
            <summary>
            Function called internally to set the face color of the material. This will results in an instance of the material.
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:TMPro.TMP_Text.SetOutlineColor(UnityEngine.Color32)">
            <summary>
            Function called internally to set the outline color of the material. This will results in an instance of the material.
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:TMPro.TMP_Text.SetOutlineThickness(System.Single)">
            <summary>
            Function called internally to set the outline thickness property of the material. This will results in an instance of the material.
            </summary>
            <param name="thickness"></param>
        </member>
        <member name="M:TMPro.TMP_Text.SetShaderDepth">
            <summary>
            Set the Render Queue and ZTest mode on the current material
            </summary>
        </member>
        <member name="M:TMPro.TMP_Text.SetCulling">
            <summary>
            Set the culling mode on the material.
            </summary>
        </member>
        <member name="M:TMPro.TMP_Text.UpdateCulling">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_Text.GetPaddingForMaterial">
            <summary>
            Get the padding value for the currently assigned material
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetPaddingForMaterial(UnityEngine.Material)">
            <summary>
            Get the padding value for the given material
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetTextContainerLocalCorners">
            <summary>
            Method to return the local corners of the Text Container or RectTransform.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.ForceMeshUpdate(System.Boolean,System.Boolean)">
            <summary>
            Function to force regeneration of the text object before its normal process time. This is useful when changes to the text object properties need to be applied immediately.
            </summary>
            <param name="ignoreActiveState">Ignore Active State of text objects. Inactive objects are ignored by default.</param>
            <param name="forceTextReparsing">Force re-parsing of the text.</param>
        </member>
        <member name="M:TMPro.TMP_Text.UpdateGeometry(UnityEngine.Mesh,System.Int32)">
            <summary>
            Function to update the geometry of the main and sub text objects.
            </summary>
            <param name="mesh"></param>
            <param name="index"></param>
        </member>
        <member name="M:TMPro.TMP_Text.UpdateVertexData(TMPro.TMP_VertexDataUpdateFlags)">
            <summary>
            Function to push the updated vertex data into the mesh and renderer.
            </summary>
        </member>
        <member name="M:TMPro.TMP_Text.UpdateVertexData">
            <summary>
            Function to push the updated vertex data into the mesh and renderer.
            </summary>
        </member>
        <member name="M:TMPro.TMP_Text.SetVertices(UnityEngine.Vector3[])">
            <summary>
            Function to push a new set of vertices to the mesh.
            </summary>
            <param name="vertices"></param>
        </member>
        <member name="M:TMPro.TMP_Text.UpdateMeshPadding">
            <summary>
            Function to be used to force recomputing of character padding when Shader / Material properties have been changed via script.
            </summary>
        </member>
        <member name="M:TMPro.TMP_Text.CrossFadeColor(UnityEngine.Color,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Tweens the CanvasRenderer color associated with this Graphic.
            </summary>
            <param name="targetColor">Target color.</param>
            <param name="duration">Tween duration.</param>
            <param name="ignoreTimeScale">Should ignore Time.scale?</param>
            <param name="useAlpha">Should also Tween the alpha channel?</param>
        </member>
        <member name="M:TMPro.TMP_Text.CrossFadeAlpha(System.Single,System.Single,System.Boolean)">
            <summary>
            Tweens the alpha of the CanvasRenderer color associated with this Graphic.
            </summary>
            <param name="alpha">Target alpha.</param>
            <param name="duration">Duration of the tween in seconds.</param>
            <param name="ignoreTimeScale">Should ignore Time.scale?</param>
        </member>
        <member name="M:TMPro.TMP_Text.InternalCrossFadeColor(UnityEngine.Color,System.Single,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>
             <param name="targetColor"></param>
             <param name="duration"></param>
             <param name="ignoreTimeScale"></param>
             <param name="useAlpha"></param>
             <param name="useRGB"></param>
        </member>
        <member name="M:TMPro.TMP_Text.InternalCrossFadeAlpha(System.Single,System.Single,System.Boolean)">
             <summary>
            
             </summary>
             <param name="alpha"></param>
             <param name="duration"></param>
             <param name="ignoreTimeScale"></param>
        </member>
        <member name="T:TMPro.TMP_Text.TextBackingContainer">
             <summary>
            
             </summary>
        </member>
        <member name="F:TMPro.TMP_Text.m_TextBackingArray">
            <summary>
            Internal array containing the converted source text used in the text parsing process.
            </summary>
        </member>
        <member name="M:TMPro.TMP_Text.ParseInputText">
            <summary>
            Method to parse the input text based on its source
            </summary>
        </member>
        <member name="M:TMPro.TMP_Text.PopulateTextBackingArray(System.String)">
            <summary>
            Convert source text to Unicode (uint) and populate internal text backing array.
            </summary>
            <param name="sourceText">Source text to be converted</param>
        </member>
        <member name="M:TMPro.TMP_Text.PopulateTextBackingArray(System.String,System.Int32,System.Int32)">
            <summary>
            Convert source text to uint and populate internal text backing array.
            </summary>
            <param name="sourceText">string containing the source text to be converted</param>
            <param name="start">Index of the first element of the source array to be converted and copied to the internal text backing array.</param>
            <param name="length">Number of elements in the array to be converted and copied to the internal text backing array.</param>
        </member>
        <member name="M:TMPro.TMP_Text.PopulateTextBackingArray(System.Text.StringBuilder,System.Int32,System.Int32)">
            <summary>
            Convert source text to uint and populate internal text backing array.
            </summary>
            <param name="sourceText">char array containing the source text to be converted</param>
            <param name="start">Index of the first element of the source array to be converted and copied to the internal text backing array.</param>
            <param name="length">Number of elements in the array to be converted and copied to the internal text backing array.</param>
        </member>
        <member name="M:TMPro.TMP_Text.PopulateTextBackingArray(System.Char[],System.Int32,System.Int32)">
            <summary>
            Convert source text to Unicode (uint) and populate internal text backing array.
            </summary>
            <param name="sourceText">char array containing the source text to be converted</param>
            <param name="start">Index of the first element of the source array to be converted and copied to the internal text backing array.</param>
            <param name="length">Number of elements in the array to be converted and copied to the internal text backing array.</param>
        </member>
        <member name="M:TMPro.TMP_Text.PopulateTextProcessingArray">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_Text.SetTextInternal(System.String)">
            <summary>
            Function used in conjunction with GetPreferredValues
            </summary>
            <param name="sourceText"></param>
        </member>
        <member name="M:TMPro.TMP_Text.SetText(System.String,System.Boolean)">
            <summary>
            This function is the same as using the text property to set the text.
            </summary>
            <param name="sourceText">String containing the text.</param>
            <param name="syncTextInputBox">This optional parameter no longer provides any functionality as this function now simple sets the .text property which is reflected in the Text Input Box.</param>
        </member>
        <member name="M:TMPro.TMP_Text.SetText(System.String,System.Single)">
            <summary>
            <para>Formatted string containing a pattern and a value representing the text to be rendered.</para>
            <para>Ex. TMP_Text.SetText("A = {0}, B = {1:00}, C = {2:000.0}", 10.75f, 10.75f, 10.75f);</para>
            <para>Results "A = 10.75, B = 11, C = 010.8."</para>
            </summary>
            <param name="sourceText">String containing the pattern.</param>
            <param name="arg0">First float value.</param>
        </member>
        <member name="M:TMPro.TMP_Text.SetText(System.String,System.Single,System.Single)">
            <summary>
            <para>Formatted string containing a pattern and a value representing the text to be rendered.</para>
            <para>Ex. TMP_Text.SetText("A = {0}, B = {1:00}, C = {2:000.0}", 10.75f, 10.75f, 10.75f);</para>
            <para>Results "A = 10.75, B = 11, C = 010.8."</para>
            </summary>
            <param name="sourceText">String containing the pattern.</param>
            <param name="arg0">First float value.</param>
            <param name="arg1">Second float value.</param>
        </member>
        <member name="M:TMPro.TMP_Text.SetText(System.String,System.Single,System.Single,System.Single)">
            <summary>
            <para>Formatted string containing a pattern and a value representing the text to be rendered.</para>
            <para>Ex. TMP_Text.SetText("A = {0}, B = {1:00}, C = {2:000.0}", 10.75f, 10.75f, 10.75f);</para>
            <para>Results "A = 10.75, B = 11, C = 010.8."</para>
            </summary>
            <param name="sourceText">String containing the pattern.</param>
            <param name="arg0">First float value.</param>
            <param name="arg1">Second float value.</param>
            <param name="arg2">Third float value.</param>
        </member>
        <member name="M:TMPro.TMP_Text.SetText(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            <para>Formatted string containing a pattern and a value representing the text to be rendered.</para>
            <para>Ex. TMP_Text.SetText("A = {0}, B = {1:00}, C = {2:000.0}", 10.75f, 10.75f, 10.75f);</para>
            <para>Results "A = 10.75, B = 11, C = 010.8."</para>
            </summary>
            <param name="sourceText">String containing the pattern.</param>
            <param name="arg0">First float value.</param>
            <param name="arg1">Second float value.</param>
            <param name="arg2">Third float value.</param>
            <param name="arg3">Forth float value.</param>
        </member>
        <member name="M:TMPro.TMP_Text.SetText(System.String,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            <para>Formatted string containing a pattern and a value representing the text to be rendered.</para>
            <para>Ex. TMP_Text.SetText("A = {0}, B = {1:00}, C = {2:000.0}", 10.75f, 10.75f, 10.75f);</para>
            <para>Results "A = 10.75, B = 11, C = 010.8."</para>
            </summary>
            <param name="sourceText">String containing the pattern.</param>
            <param name="arg0">First float value.</param>
            <param name="arg1">Second float value.</param>
            <param name="arg2">Third float value.</param>
            <param name="arg3">Forth float value.</param>
            <param name="arg4">Fifth float value.</param>
        </member>
        <member name="M:TMPro.TMP_Text.SetText(System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            <para>Formatted string containing a pattern and a value representing the text to be rendered.</para>
            <para>Ex. TMP_Text.SetText("A = {0}, B = {1:00}, C = {2:000.0}", 10.75f, 10.75f, 10.75f);</para>
            <para>Results "A = 10.75, B = 11, C = 010.8."</para>
            </summary>
            <param name="sourceText">String containing the pattern.</param>
            <param name="arg0">First float value.</param>
            <param name="arg1">Second float value.</param>
            <param name="arg2">Third float value.</param>
            <param name="arg3">Forth float value.</param>
            <param name="arg4">Fifth float value.</param>
            <param name="arg5">Sixth float value.</param>
        </member>
        <member name="M:TMPro.TMP_Text.SetText(System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            <para>Formatted string containing a pattern and a value representing the text to be rendered.</para>
            <para>Ex. TMP_Text.SetText("A = {0}, B = {1:00}, C = {2:000.0}", 10.75f, 10.75f, 10.75f);</para>
            <para>Results "A = 10.75, B = 11, C = 010.8."</para>
            </summary>
            <param name="sourceText">String containing the pattern.</param>
            <param name="arg0">First float value.</param>
            <param name="arg1">Second float value.</param>
            <param name="arg2">Third float value.</param>
            <param name="arg3">Forth float value.</param>
            <param name="arg4">Fifth float value.</param>
            <param name="arg5">Sixth float value.</param>
            <param name="arg6">Seventh float value.</param>
        </member>
        <member name="M:TMPro.TMP_Text.SetText(System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            <para>Formatted string containing a pattern and a value representing the text to be rendered.</para>
            <para>Ex. TMP_Text.SetText("A = {0}, B = {1:00}, C = {2:000.0}", 10.75f, 10.75f, 10.75f);</para>
            <para>Results "A = 10.75, B = 11, C = 010.8."</para>
            </summary>
            <param name="sourceText">String containing the pattern.</param>
            <param name="arg0">First float value.</param>
            <param name="arg1">Second float value.</param>
            <param name="arg2">Third float value.</param>
            <param name="arg3">Forth float value.</param>
            <param name="arg4">Fifth float value.</param>
            <param name="arg5">Sixth float value.</param>
            <param name="arg6">Seventh float value.</param>
            <param name="arg7">Eighth float value.</param>
        </member>
        <member name="M:TMPro.TMP_Text.SetText(System.Text.StringBuilder)">
            <summary>
            Set the text using a StringBuilder object as the source.
            </summary>
            <description>
            Using a StringBuilder instead of concatenating strings prevents memory allocations with temporary objects.
            </description>
            <param name="sourceText">The StringBuilder object containing the source text.</param>
        </member>
        <member name="M:TMPro.TMP_Text.SetText(System.Text.StringBuilder,System.Int32,System.Int32)">
            <summary>
            Set the text using a StringBuilder object and specifying the starting character index and length.
            </summary>
            <param name="sourceText">The StringBuilder object containing the source text.</param>
            <param name="start">The index of the first character to read from in the array.</param>
            <param name="length">The number of characters in the array to be read.</param>
        </member>
        <member name="M:TMPro.TMP_Text.SetText(System.Char[])">
            <summary>
            Set the text using a char array.
            </summary>
            <param name="sourceText">Source char array containing the Unicode characters of the text.</param>
        </member>
        <member name="M:TMPro.TMP_Text.SetText(System.Char[],System.Int32,System.Int32)">
            <summary>
            Set the text using a char array and specifying the starting character index and length.
            </summary>
            <param name="sourceText">Source char array containing the Unicode characters of the text.</param>
            <param name="start">Index of the first character to read from in the array.</param>
            <param name="length">The number of characters in the array to be read.</param>
        </member>
        <member name="M:TMPro.TMP_Text.SetCharArray(System.Char[])">
            <summary>
            Set the text using a char array.
            </summary>
            <param name="sourceText">Source char array containing the Unicode characters of the text.</param>
        </member>
        <member name="M:TMPro.TMP_Text.SetCharArray(System.Char[],System.Int32,System.Int32)">
            <summary>
            Set the text using a char array and specifying the starting character index and length.
            </summary>
            <param name="sourceText">Source char array containing the Unicode characters of the text.</param>
            <param name="start">The index of the first character to read from in the array.</param>
            <param name="length">The number of characters in the array to be read.</param>
        </member>
        <member name="M:TMPro.TMP_Text.GetStyle(System.Int32)">
             <summary>
            
             </summary>
             <param name="hashCode"></param>
             <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.ReplaceOpeningStyleTag(TMPro.TMP_Text.TextBackingContainer@,System.Int32,System.Int32@,TMPro.TMP_Text.UnicodeChar[]@,System.Int32@)">
            <summary>
            Method to handle inline replacement of style tag by opening style definition.
            </summary>
            <param name="sourceText"></param>
            <param name="srcIndex"></param>
            <param name="srcOffset"></param>
            <param name="charBuffer"></param>
            <param name="writeIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.ReplaceOpeningStyleTag(System.Int32[]@,System.Int32,System.Int32@,TMPro.TMP_Text.UnicodeChar[]@,System.Int32@)">
            <summary>
            Method to handle inline replacement of style tag by opening style definition.
            </summary>
            <param name="sourceText"></param>
            <param name="srcIndex"></param>
            <param name="srcOffset"></param>
            <param name="charBuffer"></param>
            <param name="writeIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.ReplaceClosingStyleTag(TMPro.TMP_Text.TextBackingContainer@,System.Int32,TMPro.TMP_Text.UnicodeChar[]@,System.Int32@)">
            <summary>
            Method to handle inline replacement of style tag by closing style definition.
            </summary>
            <param name="sourceText"></param>
            <param name="srcIndex"></param>
            <param name="charBuffer"></param>
            <param name="writeIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.ReplaceClosingStyleTag(System.Int32[]@,System.Int32,TMPro.TMP_Text.UnicodeChar[]@,System.Int32@)">
            <summary>
            Method to handle inline replacement of style tag by closing style definition.
            </summary>
            <param name="sourceText"></param>
            <param name="srcIndex"></param>
            <param name="charBuffer"></param>
            <param name="writeIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.InsertOpeningStyleTag(TMPro.TMP_Style,System.Int32,TMPro.TMP_Text.UnicodeChar[]@,System.Int32@)">
             <summary>
            
             </summary>
             <param name="style"></param>
             <param name="srcIndex"></param>
             <param name="charBuffer"></param>
             <param name="writeIndex"></param>
             <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.InsertClosingStyleTag(TMPro.TMP_Text.UnicodeChar[]@,System.Int32@)">
             <summary>
            
             </summary>
             <param name="charBuffer"></param>
             <param name="writeIndex"></param>
        </member>
        <member name="M:TMPro.TMP_Text.GetMarkupTagHashCode(System.Int32[],System.Int32)">
             <summary>
            
             </summary>
             <param name="tagDefinition"></param>
             <param name="readIndex"></param>
             <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetMarkupTagHashCode(TMPro.TMP_Text.TextBackingContainer,System.Int32)">
             <summary>
            
             </summary>
             <param name="tagDefinition"></param>
             <param name="readIndex"></param>
             <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetStyleHashCode(System.Int32[]@,System.Int32,System.Int32@)">
            <summary>
            Get Hashcode for a given tag.
            </summary>
            <param name="text"></param>
            <param name="index"></param>
            <param name="closeIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetStyleHashCode(TMPro.TMP_Text.TextBackingContainer@,System.Int32,System.Int32@)">
            <summary>
            Get Hashcode for a given tag.
            </summary>
            <param name="text"></param>
            <param name="index"></param>
            <param name="closeIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.ResizeInternalArray``1(``0[]@)">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_Text.AddIntegerToInternalTextBackingArray(System.Double,System.Int32,System.Int32@)">
             <summary>
            
             </summary>
             <param name="number"></param>
             <param name="padding"></param>
             <param name="writeIndex"></param>
        </member>
        <member name="M:TMPro.TMP_Text.SetArraySizes(TMPro.TMP_Text.UnicodeChar[])">
            <summary>
            Method used to determine the number of visible characters and required buffer allocations.
            </summary>
            <param name="unicodeChars"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetPreferredValues">
            <summary>
            Function to Calculate the Preferred Width and Height of the text object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetPreferredValues(System.Single,System.Single)">
            <summary>
            Function to Calculate the Preferred Width and Height of the text object given the provided width and height.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetPreferredValues(System.String)">
            <summary>
            Function to Calculate the Preferred Width and Height of the text object given a certain string.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetPreferredValues(System.String,System.Single,System.Single)">
            <summary>
             Function to Calculate the Preferred Width and Height of the text object given a certain string and size of text container.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetPreferredWidth">
            <summary>
            Method to calculate the preferred width of a text object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetPreferredWidth(UnityEngine.Vector2)">
            <summary>
            Method to calculate the preferred width of a text object.
            </summary>
            <param name="margin"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetPreferredHeight">
            <summary>
            Method to calculate the preferred height of a text object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetPreferredHeight(UnityEngine.Vector2)">
            <summary>
            Method to calculate the preferred height of a text object.
            </summary>
            <param name="margin"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetRenderedValues">
            <summary>
            Method returning the rendered width and height of the text object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetRenderedValues(System.Boolean)">
             <summary>
            
             </summary>
             <param name="onlyVisibleCharacters">Should returned value only factor in visible characters and exclude those greater than maxVisibleCharacters for instance.</param>
             <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetRenderedWidth">
            <summary>
            Method returning the rendered width of the text object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetRenderedWidth(System.Boolean)">
            <summary>
            Method returning the rendered width of the text object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetRenderedHeight">
            <summary>
            Method returning the rendered height of the text object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetRenderedHeight(System.Boolean)">
            <summary>
            Method returning the rendered height of the text object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.CalculatePreferredValues(System.Single@,UnityEngine.Vector2,System.Boolean,System.Boolean)">
            <summary>
            Method to calculate the preferred width and height of the text object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetCompoundBounds">
            <summary>
            Method returning the compound bounds of the text object and child sub objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetTextBounds">
            <summary>
            Method which returns the bounds of the text object;
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetTextBounds(System.Boolean)">
            <summary>
            Method which returns the bounds of the text object;
            </summary>
            <param name="onlyVisibleCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.AdjustLineOffset(System.Int32,System.Int32,System.Single)">
            <summary>
            Method to adjust line spacing as a result of using different fonts or font point size.
            </summary>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="offset"></param>
        </member>
        <member name="M:TMPro.TMP_Text.ResizeLineExtents(System.Int32)">
            <summary>
            Function to increase the size of the Line Extents Array.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:TMPro.TMP_Text.GetTextInfo(System.String)">
            <summary>
            Function used to evaluate the length of a text string.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.ComputeMarginSize">
            <summary>
            Function to force an update of the margin size.
            </summary>
        </member>
        <member name="M:TMPro.TMP_Text.InsertNewLine(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean@,System.Single@)">
            <summary>
            Function used in conjunction with GetTextInfo to figure out Array allocations.
            </summary>
            <param name="chars"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.SaveWordWrappingState(TMPro.WordWrapState@,System.Int32,System.Int32)">
            <summary>
            Save the State of various variables used in the mesh creation loop in conjunction with Word Wrapping
            </summary>
            <param name="state"></param>
            <param name="index"></param>
            <param name="count"></param>
        </member>
        <member name="M:TMPro.TMP_Text.RestoreWordWrappingState(TMPro.WordWrapState@)">
            <summary>
            Restore the State of various variables used in the mesh creation loop.
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.SaveGlyphVertexInfo(System.Single,System.Single,UnityEngine.Color32)">
            <summary>
            Store vertex information for each character.
            </summary>
            <param name="style_padding">Style_padding.</param>
            <param name="vertexColor">Vertex color.</param>
        </member>
        <member name="M:TMPro.TMP_Text.SaveSpriteVertexInfo(UnityEngine.Color32)">
            <summary>
            Store vertex information for each sprite.
            </summary>
            <param name="padding"></param>
            <param name="style_padding"></param>
            <param name="vertexColor"></param>
        </member>
        <member name="M:TMPro.TMP_Text.FillCharacterVertexBuffers(System.Int32,System.Int32)">
            <summary>
            Store vertex attributes into the appropriate TMP_MeshInfo.
            </summary>
            <param name="i"></param>
            <param name="index_X4"></param>
        </member>
        <member name="M:TMPro.TMP_Text.FillSpriteVertexBuffers(System.Int32,System.Int32)">
            <summary>
            Fill Vertex Buffers for Sprites
            </summary>
            <param name="i"></param>
            <param name="spriteIndex_X4"></param>
        </member>
        <member name="M:TMPro.TMP_Text.DrawUnderlineMesh(UnityEngine.Vector3,UnityEngine.Vector3,System.Int32@,System.Single,System.Single,System.Single,System.Single,UnityEngine.Color32)">
            <summary>
            Method to add the underline geometry.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="startScale"></param>
            <param name="endScale"></param>
            <param name="maxScale"></param>
            <param name="underlineColor"></param>
        </member>
        <member name="M:TMPro.TMP_Text.LoadDefaultSettings">
            <summary>
            Internal function used to load the default settings of text objects.
            </summary>
        </member>
        <member name="M:TMPro.TMP_Text.GetSpecialCharacters(TMPro.TMP_FontAsset)">
            <summary>
            Method used to find and cache references to the Underline and Ellipsis characters.
            </summary>
            <param name=""></param>
        </member>
        <member name="M:TMPro.TMP_Text.ReplaceTagWithCharacter(System.Int32[],System.Int32,System.Int32,System.Char)">
            <summary>
            Replace a given number of characters (tag) in the array with a new character and shift subsequent characters in the array.
            </summary>
            <param name="chars">Array which contains the text.</param>
            <param name="insertionIndex">The index of where the new character will be inserted</param>
            <param name="tagLength">Length of the tag being replaced.</param>
            <param name="c">The replacement character.</param>
        </member>
        <member name="M:TMPro.TMP_Text.GetFontAssetForWeight(System.Int32)">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.SetActiveSubMeshes(System.Boolean)">
            <summary>
            Method to Enable or Disable child SubMesh objects.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:TMPro.TMP_Text.DestroySubMeshObjects">
            <summary>
            Destroy Sub Mesh Objects.
            </summary>
        </member>
        <member name="M:TMPro.TMP_Text.ClearMesh">
            <summary>
            Function to clear the geometry of the Primary and Sub Text objects.
            </summary>
        </member>
        <member name="M:TMPro.TMP_Text.ClearMesh(System.Boolean)">
            <summary>
            Function to clear the geometry of the Primary and Sub Text objects.
            </summary>
        </member>
        <member name="M:TMPro.TMP_Text.GetParsedText">
            <summary>
            Function which returns the text after it has been parsed and rich text tags removed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.PackUV(System.Single,System.Single,System.Single)">
            <summary>
            Function to pack scale information in the UV2 Channel.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="scale"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.PackUV(System.Single,System.Single)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <param name="y"></param>
             <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.InternalUpdate">
            <summary>
            Function used as a replacement for LateUpdate()
            </summary>
        </member>
        <member name="M:TMPro.TMP_Text.HexToInt(System.Char)">
            <summary>
            Method to convert Hex to Int
            </summary>
            <param name="hex"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetUTF16(System.String,System.Int32)">
            <summary>
            Convert UTF-16 Hex to Char
            </summary>
            <returns>The Unicode hex.</returns>
            <param name="i">The index.</param>
        </member>
        <member name="M:TMPro.TMP_Text.GetUTF16(System.Text.StringBuilder,System.Int32)">
            <summary>
            Convert UTF-16 Hex to Char
            </summary>
            <returns>The Unicode hex.</returns>
            <param name="i">The index.</param>
        </member>
        <member name="M:TMPro.TMP_Text.GetUTF32(System.String,System.Int32)">
            <summary>
            Convert UTF-32 Hex to Char
            </summary>
            <returns>The Unicode hex.</returns>
            <param name="i">The index.</param>
        </member>
        <member name="M:TMPro.TMP_Text.GetUTF32(System.Text.StringBuilder,System.Int32)">
            <summary>
            Convert UTF-32 Hex to Char
            </summary>
            <returns>The Unicode hex.</returns>
            <param name="i">The index.</param>
        </member>
        <member name="M:TMPro.TMP_Text.HexCharsToColor(System.Char[],System.Int32)">
            <summary>
            Method to convert Hex color values to Color32
            </summary>
            <param name="hexChars"></param>
            <param name="tagCount"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.HexCharsToColor(System.Char[],System.Int32,System.Int32)">
            <summary>
            Method to convert Hex Color values to Color32
            </summary>
            <param name="hexChars"></param>
            <param name="startIndex"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.GetAttributeParameters(System.Char[],System.Int32,System.Int32,System.Single[]@)">
            <summary>
            Method which returns the number of parameters used in a tag attribute and populates an array with such values.
            </summary>
            <param name="chars">Char[] containing the tag attribute and data</param>
            <param name="startIndex">The index of the first char of the data</param>
            <param name="length">The length of the data</param>
            <param name="parameters">The number of parameters contained in the Char[]</param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.ConvertToFloat(System.Char[],System.Int32,System.Int32)">
            <summary>
            Extracts a float value from char[] assuming we know the position of the start, end and decimal point.
            </summary>
            <param name="chars"></param>
            <param name="startIndex"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.ConvertToFloat(System.Char[],System.Int32,System.Int32,System.Int32@)">
            <summary>
            Extracts a float value from char[] given a start index and length.
            </summary>
            <param name="chars"></param> The Char[] containing the numerical sequence.
            <param name="startIndex"></param> The index of the start of the numerical sequence.
            <param name="length"></param> The length of the numerical sequence.
            <param name="lastIndex"></param> Index of the last character in the validated sequence.
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Text.ValidateHtmlTag(TMPro.TMP_Text.UnicodeChar[],System.Int32,System.Int32@)">
            <summary>
            Function to identify and validate the rich tag. Returns the position of the > if the tag was valid.
            </summary>
            <param name="chars"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="T:TMPro.TMP_VertexDataUpdateFlags">
            <summary>
            Flags to control what vertex data is pushed to the mesh and renderer.
            </summary>
        </member>
        <member name="T:TMPro.VertexGradient">
            <summary>
            TMP custom data type to represent 32 bit characters.
            </summary>
        </member>
        <member name="M:TMPro.VertexGradient.#ctor(UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color)">
            <summary>
            The vertex colors at the corners of the characters.
            </summary>
            <param name="color0">Top left color.</param>
            <param name="color1">Top right color.</param>
            <param name="color2">Bottom left color.</param>
            <param name="color3">Bottom right color.</param>
        </member>
        <member name="T:TMPro.TMP_LinkInfo">
            <summary>
            Structure containing information about individual links contained in the text object.
            </summary>
        </member>
        <member name="M:TMPro.TMP_LinkInfo.GetLinkText">
            <summary>
            Function which returns the text contained in a link.
            </summary>
            <param name="textInfo"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_LinkInfo.GetLinkID">
            <summary>
            Function which returns the link ID as a string.
            </summary>
            <param name="text">The source input text.</param>
            <returns></returns>
        </member>
        <member name="T:TMPro.TMP_WordInfo">
            <summary>
            Structure containing information about the individual words contained in the text object.
            </summary>
        </member>
        <member name="M:TMPro.TMP_WordInfo.GetWord">
            <summary>
            Returns the word as a string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:TMPro.TagAttribute">
            <summary>
            Structure used to store retrieve the name and hashcode of the font and material
            </summary>
        </member>
        <member name="T:TMPro.TMP_Settings">
            <summary>
            Scaling options for the sprites
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.version">
            <summary>
            Returns the release version of the product.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.enableWordWrapping">
            <summary>
            Controls if Word Wrapping will be enabled on newly created text objects by default.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.enableKerning">
            <summary>
            Controls if Kerning is enabled on newly created text objects by default.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.enableExtraPadding">
            <summary>
            Controls if Extra Padding is enabled on newly created text objects by default.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.enableTintAllSprites">
            <summary>
            Controls if TintAllSprites is enabled on newly created text objects by default.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.enableParseEscapeCharacters">
            <summary>
            Controls if Escape Characters will be parsed in the Text Input Box on newly created text objects.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.enableRaycastTarget">
            <summary>
            Controls if Raycast Target is enabled by default on newly created text objects.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.getFontFeaturesAtRuntime">
            <summary>
            Determines if OpenType Font Features should be retrieved at runtime from the source font file.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.missingGlyphCharacter">
            <summary>
            The character that will be used as a replacement for missing glyphs in a font asset.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.warningsDisabled">
            <summary>
            Controls the display of warning message in the console.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.defaultFontAsset">
            <summary>
            Returns the Default Font Asset to be used by newly created text objects.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.defaultFontAssetPath">
            <summary>
            The relative path to a Resources folder in the project.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.defaultFontSize">
            <summary>
            The Default Point Size of newly created text objects.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.defaultTextAutoSizingMinRatio">
            <summary>
            The multiplier used to computer the default Min point size when Text Auto Sizing is used.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.defaultTextAutoSizingMaxRatio">
            <summary>
            The multiplier used to computer the default Max point size when Text Auto Sizing is used.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.defaultTextMeshProTextContainerSize">
            <summary>
            The Default Size of the Text Container of a TextMeshPro object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.defaultTextMeshProUITextContainerSize">
            <summary>
            The Default Width of the Text Container of a TextMeshProUI object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.autoSizeTextContainer">
            <summary>
            Set the size of the text container of newly created text objects to match the size of the text.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.isTextObjectScaleStatic">
            <summary>
            Disables InternalUpdate() calls when true. This can improve performance when the scale of the text object is static.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.fallbackFontAssets">
            <summary>
            Returns the list of Fallback Fonts defined in the TMP Settings file.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.matchMaterialPreset">
            <summary>
            Controls whether or not TMP will create a matching material preset or use the default material of the fallback font asset.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.defaultSpriteAsset">
            <summary>
            The Default Sprite Asset to be used by default.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.defaultSpriteAssetPath">
            <summary>
            The relative path to a Resources folder in the project.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.enableEmojiSupport">
            <summary>
            Determines if Emoji support is enabled in the Input Field TouchScreenKeyboard.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.missingCharacterSpriteUnicode">
            <summary>
            The unicode value of the sprite that will be used when the requested sprite is missing from the sprite asset and potential fallbacks.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.defaultColorGradientPresetsPath">
            <summary>
            The relative path to a Resources folder in the project that contains Color Gradient Presets.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.defaultStyleSheet">
            <summary>
            The Default Style Sheet used by the text objects.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.styleSheetsResourcePath">
            <summary>
            The relative path to a Resources folder in the project that contains the TMP Style Sheets.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.leadingCharacters">
            <summary>
            Text file that contains the leading characters used for line breaking for Asian languages.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.followingCharacters">
            <summary>
            Text file that contains the following characters used for line breaking for Asian languages.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.linebreakingRules">
             <summary>
            
             </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.useModernHangulLineBreakingRules">
            <summary>
            Determines if Modern or Traditional line breaking rules should be used for Korean text.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Settings.instance">
            <summary>
            Get a singleton instance of the settings class.
            </summary>
        </member>
        <member name="M:TMPro.TMP_Settings.LoadDefaultSettings">
            <summary>
            Static Function to load the TMP Settings file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Settings.GetSettings">
            <summary>
            Returns the Sprite Asset defined in the TMP Settings file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Settings.GetFontAsset">
            <summary>
            Returns the Font Asset defined in the TMP Settings file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Settings.GetSpriteAsset">
            <summary>
            Returns the Sprite Asset defined in the TMP Settings file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Settings.GetStyleSheet">
            <summary>
            Returns the Style Sheet defined in the TMP Settings file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_Settings.GetCharacters(UnityEngine.TextAsset)">
            <summary>
             Get the characters from the line breaking files
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="T:TMPro.TMP_SpriteGlyph">
            <summary>
            The visual representation of the sprite character using this glyph.
            </summary>
        </member>
        <member name="F:TMPro.TMP_SpriteGlyph.sprite">
            <summary>
            An optional reference to the underlying sprite used to create this glyph. 
            </summary>
        </member>
        <member name="M:TMPro.TMP_SpriteGlyph.#ctor(System.UInt32,UnityEngine.TextCore.GlyphMetrics,UnityEngine.TextCore.GlyphRect,System.Single,System.Int32)">
            <summary>
            Constructor for new sprite glyph.
            </summary>
            <param name="index">Index of the sprite glyph.</param>
            <param name="metrics">Metrics which define the position of the glyph in the context of text layout.</param>
            <param name="glyphRect">GlyphRect which defines the coordinates of the glyph in the atlas texture.</param>
            <param name="scale">Scale of the glyph.</param>
            <param name="atlasIndex">Index of the atlas texture that contains the glyph.</param>      
        </member>
        <member name="M:TMPro.TMP_SpriteGlyph.#ctor(System.UInt32,UnityEngine.TextCore.GlyphMetrics,UnityEngine.TextCore.GlyphRect,System.Single,System.Int32,UnityEngine.Sprite)">
            <summary>
            Constructor for new sprite glyph.
            </summary>
            <param name="index">>Index of the sprite glyph.</param>
            <param name="metrics">Metrics which define the position of the glyph in the context of text layout.</param>
            <param name="glyphRect">GlyphRect which defines the coordinates of the glyph in the atlas texture.</param>
            <param name="scale">Scale of the glyph.</param>
            <param name="atlasIndex">Index of the atlas texture that contains the glyph.</param>
            <param name="sprite">A reference to the Unity Sprite representing this sprite glyph.</param>
        </member>
        <member name="M:TMPro.TMP_Compatibility.ConvertTextAlignmentEnumValues(TMPro.TextAlignmentOptions)">
            <summary>
            Function used to convert text alignment option enumeration format.
            </summary>
            <param name="oldValue"></param>
            <returns></returns>
        </member>
        <member name="T:TMPro.ITextPreprocessor">
            <summary>
            Interface used for preprocessing and shaping of text.
            </summary>
        </member>
        <member name="M:TMPro.ITextPreprocessor.PreprocessText(System.String)">
            <summary>
            Function used for preprocessing of text
            </summary>
            <param name="text">Source text to be processed</param>
            <returns>Processed text</returns>
        </member>
        <member name="P:TMPro.MaterialReferenceManager.instance">
            <summary>
            Get a singleton instance of the registry
            </summary>
        </member>
        <member name="M:TMPro.MaterialReferenceManager.AddFontAsset(TMPro.TMP_FontAsset)">
            <summary>
            Add new font asset reference to dictionary.
            </summary>
            <param name="fontAsset"></param>
        </member>
        <member name="M:TMPro.MaterialReferenceManager.AddFontAssetInternal(TMPro.TMP_FontAsset)">
            <summary>
             Add new Font Asset reference to dictionary.
            </summary>
            <param name="fontAsset"></param>
        </member>
        <member name="M:TMPro.MaterialReferenceManager.AddSpriteAsset(TMPro.TMP_SpriteAsset)">
            <summary>
            Add new Sprite Asset to dictionary.
            </summary>
            <param name="hashCode"></param>
            <param name="spriteAsset"></param>
        </member>
        <member name="M:TMPro.MaterialReferenceManager.AddSpriteAssetInternal(TMPro.TMP_SpriteAsset)">
            <summary>
            Internal method to add a new sprite asset to the dictionary.
            </summary>
            <param name="hashCode"></param>
            <param name="spriteAsset"></param>
        </member>
        <member name="M:TMPro.MaterialReferenceManager.AddSpriteAsset(System.Int32,TMPro.TMP_SpriteAsset)">
            <summary>
            Add new Sprite Asset to dictionary.
            </summary>
            <param name="hashCode"></param>
            <param name="spriteAsset"></param>
        </member>
        <member name="M:TMPro.MaterialReferenceManager.AddSpriteAssetInternal(System.Int32,TMPro.TMP_SpriteAsset)">
            <summary>
            Internal method to add a new sprite asset to the dictionary.
            </summary>
            <param name="hashCode"></param>
            <param name="spriteAsset"></param>
        </member>
        <member name="M:TMPro.MaterialReferenceManager.AddFontMaterial(System.Int32,UnityEngine.Material)">
            <summary>
            Add new Material reference to dictionary.
            </summary>
            <param name="hashCode"></param>
            <param name="material"></param>
        </member>
        <member name="M:TMPro.MaterialReferenceManager.AddFontMaterialInternal(System.Int32,UnityEngine.Material)">
            <summary>
            Add new material reference to dictionary.
            </summary>
            <param name="hashCode"></param>
            <param name="material"></param>
        </member>
        <member name="M:TMPro.MaterialReferenceManager.AddColorGradientPreset(System.Int32,TMPro.TMP_ColorGradient)">
            <summary>
            Add new Color Gradient Preset to dictionary.
            </summary>
            <param name="hashCode"></param>
            <param name="spriteAsset"></param>
        </member>
        <member name="M:TMPro.MaterialReferenceManager.AddColorGradientPreset_Internal(System.Int32,TMPro.TMP_ColorGradient)">
            <summary>
            Internal method to add a new Color Gradient Preset to the dictionary.
            </summary>
            <param name="hashCode"></param>
            <param name="spriteAsset"></param>
        </member>
        <member name="M:TMPro.MaterialReferenceManager.Contains(TMPro.TMP_FontAsset)">
            <summary>
            Function to check if the font asset is already referenced.
            </summary>
            <param name="font"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.MaterialReferenceManager.Contains(TMPro.TMP_SpriteAsset)">
            <summary>
            Function to check if the sprite asset is already referenced.
            </summary>
            <param name="font"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.MaterialReferenceManager.TryGetFontAsset(System.Int32,TMPro.TMP_FontAsset@)">
            <summary>
            Function returning the Font Asset corresponding to the provided hash code.
            </summary>
            <param name="hashCode"></param>
            <param name="fontAsset"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.MaterialReferenceManager.TryGetFontAssetInternal(System.Int32,TMPro.TMP_FontAsset@)">
            <summary>
            Internal Function returning the Font Asset corresponding to the provided hash code.
            </summary>
            <param name="hashCode"></param>
            <param name="fontAsset"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.MaterialReferenceManager.TryGetSpriteAsset(System.Int32,TMPro.TMP_SpriteAsset@)">
            <summary>
            Function returning the Sprite Asset corresponding to the provided hash code.
            </summary>
            <param name="hashCode"></param>
            <param name="spriteAsset"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.MaterialReferenceManager.TryGetSpriteAssetInternal(System.Int32,TMPro.TMP_SpriteAsset@)">
            <summary>
            Internal function returning the Sprite Asset corresponding to the provided hash code.
            </summary>
            <param name="hashCode"></param>
            <param name="fontAsset"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.MaterialReferenceManager.TryGetColorGradientPreset(System.Int32,TMPro.TMP_ColorGradient@)">
            <summary>
            Function returning the Color Gradient Preset corresponding to the provided hash code.
            </summary>
            <param name="hashCode"></param>
            <param name="gradientPreset"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.MaterialReferenceManager.TryGetColorGradientPresetInternal(System.Int32,TMPro.TMP_ColorGradient@)">
            <summary>
            Internal function returning the Color Gradient Preset corresponding to the provided hash code.
            </summary>
            <param name="hashCode"></param>
            <param name="fontAsset"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.MaterialReferenceManager.TryGetMaterial(System.Int32,UnityEngine.Material@)">
            <summary>
            Function returning the Font Material corresponding to the provided hash code.
            </summary>
            <param name="hashCode"></param>
            <param name="material"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.MaterialReferenceManager.TryGetMaterialInternal(System.Int32,UnityEngine.Material@)">
            <summary>
            Internal function returning the Font Material corresponding to the provided hash code.
            </summary>
            <param name="hashCode"></param>
            <param name="material"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.MaterialReference.#ctor(System.Int32,TMPro.TMP_FontAsset,TMPro.TMP_SpriteAsset,UnityEngine.Material,System.Single)">
            <summary>
            Constructor for new Material Reference.
            </summary>
            <param name="index"></param>
            <param name="fontAsset"></param>
            <param name="spriteAsset"></param>
            <param name="material"></param>
            <param name="padding"></param>
        </member>
        <member name="M:TMPro.MaterialReference.Contains(TMPro.MaterialReference[],TMPro.TMP_FontAsset)">
            <summary>
            Function to check if a certain font asset is contained in the material reference array.
            </summary>
            <param name="materialReferences"></param>
            <param name="fontAsset"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.MaterialReference.AddMaterialReference(UnityEngine.Material,TMPro.TMP_FontAsset,TMPro.MaterialReference[]@,System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            <summary>
            Function to add a new material reference and returning its index in the material reference array.
            </summary>
            <param name="material"></param>
            <param name="fontAsset"></param>
            <param name="materialReferences"></param>
            <param name="materialReferenceIndexLookup"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.MaterialReference.AddMaterialReference(UnityEngine.Material,TMPro.TMP_SpriteAsset,TMPro.MaterialReference[]@,System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
             <summary>
            
             </summary>
             <param name="material"></param>
             <param name="spriteAsset"></param>
             <param name="materialReferences"></param>
             <param name="materialReferenceIndexLookup"></param>
             <returns></returns>
        </member>
        <member name="T:TMPro.TMP_FontStyleStack">
            <summary>
            Structure used to track basic XML tags which are binary (on / off)
            </summary>
        </member>
        <member name="M:TMPro.TMP_FontStyleStack.Clear">
            <summary>
            Clear the basic XML tag stack.
            </summary>
        </member>
        <member name="T:TMPro.TMP_TextProcessingStack`1">
            <summary>
            Structure used to track XML tags of various types.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:TMPro.TMP_TextProcessingStack`1.#ctor(`0[])">
            <summary>
            Constructor to create a new item stack.
            </summary>
            <param name="stack"></param>
        </member>
        <member name="M:TMPro.TMP_TextProcessingStack`1.#ctor(System.Int32)">
            <summary>
            Constructor for a new item stack with the given capacity.
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="P:TMPro.TMP_TextProcessingStack`1.Count">
             <summary>
            
             </summary>
        </member>
        <member name="P:TMPro.TMP_TextProcessingStack`1.current">
            <summary>
            Returns the current item on the stack.
            </summary>
        </member>
        <member name="P:TMPro.TMP_TextProcessingStack`1.rolloverSize">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_TextProcessingStack`1.SetDefault(TMPro.TMP_TextProcessingStack{`0}[],`0)">
            <summary>
            Set stack elements to default item.
            </summary>
            <param name="stack">The stack of elements.</param>
            <param name="item"></param>
        </member>
        <member name="M:TMPro.TMP_TextProcessingStack`1.Clear">
            <summary>
            Function to clear and reset stack to first item.
            </summary>
        </member>
        <member name="M:TMPro.TMP_TextProcessingStack`1.SetDefault(`0)">
            <summary>
            Function to set the first item on the stack and reset index.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:TMPro.TMP_TextProcessingStack`1.Add(`0)">
            <summary>
            Function to add a new item to the stack.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:TMPro.TMP_TextProcessingStack`1.Remove">
            <summary>
            Function to retrieve an item from the stack.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_TextProcessingStack`1.Peek">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TMPro.TMP_TextProcessingStack`1.CurrentItem" -->
        <member name="M:TMPro.TMP_TextProcessingStack`1.PreviousItem">
            <summary>
            Function to retrieve the previous item without affecting the stack.
            </summary>
            <returns></returns>
        </member>
        <member name="T:TMPro.TMP_TextInfo">
            <summary>
            Class which contains information about every element contained within the text object.
            </summary>
        </member>
        <member name="M:TMPro.TMP_TextInfo.Clear">
            <summary>
            Function to clear the counters of the text object.
            </summary>
        </member>
        <member name="M:TMPro.TMP_TextInfo.ClearAllData">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_TextInfo.ClearMeshInfo(System.Boolean)">
            <summary>
            Function to clear the content of the MeshInfo array while preserving the Triangles, Normals and Tangents.
            </summary>
        </member>
        <member name="M:TMPro.TMP_TextInfo.ClearAllMeshInfo">
            <summary>
            Function to clear the content of all the MeshInfo arrays while preserving their Triangles, Normals and Tangents.
            </summary>
        </member>
        <member name="M:TMPro.TMP_TextInfo.ResetVertexLayout(System.Boolean)">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_TextInfo.ClearUnusedVertices(TMPro.MaterialReference[])">
            <summary>
            Function used to mark unused vertices as degenerate.
            </summary>
            <param name="materials"></param>
        </member>
        <member name="M:TMPro.TMP_TextInfo.ClearLineInfo">
            <summary>
            Function to clear and initialize the lineInfo array.
            </summary>
        </member>
        <member name="M:TMPro.TMP_TextInfo.CopyMeshInfoVertexData">
            <summary>
            Function to copy the MeshInfo Arrays and their primary vertex data content.
            </summary>
            <returns>A copy of the MeshInfo[]</returns>
        </member>
        <member name="M:TMPro.TMP_TextInfo.Resize``1(``0[]@,System.Int32)">
            <summary>
            Function to resize any of the structure contained in the TMP_TextInfo class.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array"></param>
            <param name="size"></param>
        </member>
        <member name="M:TMPro.TMP_TextInfo.Resize``1(``0[]@,System.Int32,System.Boolean)">
            <summary>
            Function to resize any of the structure contained in the TMP_TextInfo class.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array"></param>
            <param name="size"></param>
            <param name="isFixedSize"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "P:TMPro.TMP_Style.name" -->
        <member name="P:TMPro.TMP_Style.hashCode">
            <summary>
            The hash code corresponding to the name of this style.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:TMPro.TMP_Style.styleOpeningDefinition" -->
        <!-- Badly formed XML comment ignored for member "P:TMPro.TMP_Style.styleClosingDefinition" -->
        <member name="M:TMPro.TMP_Style.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="styleName">Name of the style.</param>
            <param name="styleOpeningDefinition">Style opening definition.</param>
            <param name="styleClosingDefinition">Style closing definition.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TMPro.TMP_Style.RefreshStyle" -->
        <member name="M:TMPro.TMP_ColorGradient.#ctor">
            <summary>
            Default Constructor which sets each of the colors as white.
            </summary>
        </member>
        <member name="M:TMPro.TMP_ColorGradient.#ctor(UnityEngine.Color)">
            <summary>
            Constructor allowing to set the default color of the Color Gradient.
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:TMPro.TMP_ColorGradient.#ctor(UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color)">
            <summary>
            The vertex colors at the corners of the characters.
            </summary>
            <param name="color0">Top left color.</param>
            <param name="color1">Top right color.</param>
            <param name="color2">Bottom left color.</param>
            <param name="color3">Bottom right color.</param>
        </member>
        <member name="T:TMPro.TMP_MeshInfo">
            <summary>
            Structure which contains the vertex attributes (geometry) of the text object.
            </summary>
        </member>
        <member name="M:TMPro.TMP_MeshInfo.#ctor(UnityEngine.Mesh,System.Int32)">
            <summary>
            Function to pre-allocate vertex attributes for a mesh of size X.
            </summary>
            <param name="mesh"></param>
            <param name="size"></param>
        </member>
        <member name="M:TMPro.TMP_MeshInfo.#ctor(UnityEngine.Mesh,System.Int32,System.Boolean)">
            <summary>
            Function to pre-allocate vertex attributes for a mesh of size X.
            </summary>
            <param name="mesh"></param>
            <param name="size"></param>
            <param name="isVolumetric"></param>
        </member>
        <member name="M:TMPro.TMP_MeshInfo.ResizeMeshInfo(System.Int32)">
            <summary>
            Function to resized the content of MeshData and re-assign normals, tangents and triangles.
            </summary>
            <param name="meshData"></param>
            <param name="size"></param>
        </member>
        <member name="M:TMPro.TMP_MeshInfo.ResizeMeshInfo(System.Int32,System.Boolean)">
            <summary>
            Function to resized the content of MeshData and re-assign normals, tangents and triangles.
            </summary>
            <param name="size"></param>
            <param name="isVolumetric"></param>
        </member>
        <member name="M:TMPro.TMP_MeshInfo.Clear">
            <summary>
            Function to clear the vertices while preserving the Triangles, Normals and Tangents.
            </summary>
        </member>
        <member name="M:TMPro.TMP_MeshInfo.Clear(System.Boolean)">
            <summary>
            Function to clear the vertices while preserving the Triangles, Normals and Tangents.
            </summary>
        </member>
        <member name="M:TMPro.TMP_MeshInfo.ClearUnusedVertices">
            <summary>
            Function to clear the vertices while preserving the Triangles, Normals and Tangents.
            </summary>
        </member>
        <member name="M:TMPro.TMP_MeshInfo.ClearUnusedVertices(System.Int32)">
            <summary>
            Function used to mark unused vertices as degenerate.
            </summary>
            <param name="startIndex"></param>
        </member>
        <member name="M:TMPro.TMP_MeshInfo.ClearUnusedVertices(System.Int32,System.Boolean)">
            <summary>
            Function used to mark unused vertices as degenerate an upload resulting data to the mesh.
            </summary>
            <param name="startIndex"></param>
        </member>
        <member name="M:TMPro.TMP_MeshInfo.SortGeometry(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Function to rearrange the quads of the text object to change their rendering order.
            </summary>
            <param name="sortingOrder"></param>
        </member>
        <member name="M:TMPro.TMP_MeshInfo.SwapVertexData(System.Int32,System.Int32)">
            <summary>
            Method to swap the vertex attributes between src and dst quads.
            </summary>
            <param name="src">Index of the first vertex attribute of the source character / quad.</param>
            <param name="dst">Index of the first vertex attribute of the destination character / quad.</param>
        </member>
        <member name="P:TMPro.TMP_StyleSheet.styles">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_StyleSheet.GetStyle(System.Int32)">
            <summary>
            Get the Style for the given hash code value.
            </summary>
            <param name="hashCode">Hash code of the style.</param>
            <returns>The style matching the hash code.</returns>
        </member>
        <member name="M:TMPro.TMP_StyleSheet.GetStyle(System.String)">
            <summary>
            Get the Style for the given name.
            </summary>
            <param name="name">The name of the style.</param>
            <returns>The style if found.</returns>
        </member>
        <member name="M:TMPro.TMP_StyleSheet.RefreshStyles">
            <summary>
            Function to refresh the Style Dictionary.
            </summary>
        </member>
        <member name="M:TMPro.TMP_StyleSheet.LoadStyleDictionaryInternal">
             <summary>
            
             </summary>
        </member>
        <member name="T:TMPro.TMP_FontFeatureTable">
            <summary>
            Table that contains the various font features available for the given font asset.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontFeatureTable.glyphPairAdjustmentRecords">
            <summary>
            List that contains the glyph pair adjustment records.
            </summary>
        </member>
        <member name="F:TMPro.TMP_FontFeatureTable.m_GlyphPairAdjustmentRecordLookupDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="M:TMPro.TMP_FontFeatureTable.SortGlyphPairAdjustmentRecords">
            <summary>
            Sort the glyph pair adjustment records by glyph index.
            </summary>
        </member>
        <member name="P:TMPro.TMP_Asset.instanceID">
            <summary>
            Instance ID of the TMP Asset
            </summary>
        </member>
        <member name="F:TMPro.TMP_Asset.hashCode">
            <summary>
            HashCode based on the name of the asset.
            </summary>
        </member>
        <member name="F:TMPro.TMP_Asset.material">
            <summary>
            The material used by this asset.
            </summary>
        </member>
        <member name="F:TMPro.TMP_Asset.materialHashCode">
            <summary>
            HashCode based on the name of the material assigned to this asset.
            </summary>
        </member>
        <member name="M:TMPro.TMP_FontAssetUtilities.#cctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAssetUtilities.instance">
            <summary>
            Get a singleton instance of the Font Asset Utilities class.
            </summary>
        </member>
        <member name="F:TMPro.TMP_FontAssetUtilities.k_SearchedAssets">
            <summary>
            HashSet containing instance ID of font assets already searched.
            </summary>
        </member>
        <member name="M:TMPro.TMP_FontAssetUtilities.GetCharacterFromFontAsset(System.UInt32,TMPro.TMP_FontAsset,System.Boolean,TMPro.FontStyles,TMPro.FontWeight,System.Boolean@)">
            <summary>
            Returns the text element (character) for the given unicode value taking into consideration the requested font style and weight.
            Function searches the source font asset, its list of font assets assigned as alternative typefaces and potentially its fallbacks.
            The font asset out parameter contains a reference to the font asset containing the character.
            The typeface type indicates whether the returned font asset is the source font asset, an alternative typeface or fallback font asset.
            </summary>
            <param name="unicode">The unicode value of the requested character</param>
            <param name="sourceFontAsset">The font asset to be searched</param>
            <param name="includeFallbacks">Include the fallback font assets in the search</param>
            <param name="fontStyle">The font style</param>
            <param name="fontWeight">The font weight</param>
            <param name="isAlternativeTypeface">Indicates if the OUT font asset is an alternative typeface or fallback font asset</param>
            <param name="fontAsset">The font asset that contains the requested character</param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_FontAssetUtilities.GetCharacterFromFontAsset_Internal(System.UInt32,TMPro.TMP_FontAsset,System.Boolean,TMPro.FontStyles,TMPro.FontWeight,System.Boolean@)">
            <summary>
            Internal function returning the text element character for the given unicode value taking into consideration the font style and weight.
            Function searches the source font asset, list of font assets assigned as alternative typefaces and list of fallback font assets.
            </summary>
        </member>
        <member name="M:TMPro.TMP_FontAssetUtilities.GetCharacterFromFontAssets(System.UInt32,TMPro.TMP_FontAsset,System.Collections.Generic.List{TMPro.TMP_FontAsset},System.Boolean,TMPro.FontStyles,TMPro.FontWeight,System.Boolean@)">
            <summary>
            Returns the text element (character) for the given unicode value taking into consideration the requested font style and weight.
            Function searches the provided list of font assets, the list of font assets assigned as alternative typefaces to them as well as their fallbacks.
            The font asset out parameter contains a reference to the font asset containing the character.
            The typeface type indicates whether the returned font asset is the source font asset, an alternative typeface or fallback font asset.
            </summary>
            <param name="unicode">The unicode value of the requested character</param>
            <param name="sourceFontAsset">The font asset originating the search query</param>
            <param name="fontAssets">The list of font assets to search</param>
            <param name="includeFallbacks">Determines if the fallback of each font assets on the list will be searched</param>
            <param name="fontStyle">The font style</param>
            <param name="fontWeight">The font weight</param>
            <param name="isAlternativeTypeface">Determines if the OUT font asset is an alternative typeface or fallback font asset</param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_FontAssetUtilities.GetSpriteCharacterFromSpriteAsset(System.UInt32,TMPro.TMP_SpriteAsset,System.Boolean)">
             <summary>
            
             </summary>
             <param name="unicode"></param>
             <param name="spriteAsset"></param>
             <param name="includeFallbacks"></param>
             <returns></returns>
        </member>
        <member name="M:TMPro.TMP_FontAssetUtilities.GetSpriteCharacterFromSpriteAsset_Internal(System.UInt32,TMPro.TMP_SpriteAsset,System.Boolean)">
             <summary>
            
             </summary>
             <param name="unicode"></param>
             <param name="spriteAsset"></param>
             <param name="includeFallbacks"></param>
             <returns></returns>
        </member>
        <member name="P:TMPro.TextContainer.rectTransform">
            <summary>
            The RectTransform used by the object
            </summary>
        </member>
        <member name="P:TMPro.TextContainer.textMeshPro">
            <summary>
            
            </summary>
        </member>
        <member name="M:TMPro.TextContainer.OnEnable">
            <summary>
            
            </summary>
        </member>
        <member name="M:TMPro.TextContainer.OnDisable">
            <summary>
            
            </summary>
        </member>
        <member name="M:TMPro.TextContainer.OnContainerChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:TMPro.TextContainer.OnValidate">
            <summary>
            
            </summary>
        </member>
        <member name="M:TMPro.TextContainer.OnRectTransformDimensionsChange">
            <summary>
            Callback from Unity to handle RectTransform changes.
            </summary>
        </member>
        <member name="T:TMPro.TMP_LineInfo">
            <summary>
            Structure which contains information about the individual lines of text.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SubMeshUI.fontAsset">
            <summary>
            The TMP Font Asset assigned to this sub text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SubMeshUI.spriteAsset">
            <summary>
            The TMP Sprite Asset assigned to this sub text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SubMeshUI.mainTexture">
             <summary>
            
             </summary>
        </member>
        <member name="P:TMPro.TMP_SubMeshUI.material">
            <summary>
            The material to be assigned to this object. Returns an instance of the material.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SubMeshUI.sharedMaterial">
            <summary>
            The material to be assigned to this text object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SubMeshUI.fallbackMaterial">
             <summary>
            
             </summary>
        </member>
        <member name="P:TMPro.TMP_SubMeshUI.fallbackSourceMaterial">
            <summary>
            The source material used by the fallback font
            </summary>
        </member>
        <member name="P:TMPro.TMP_SubMeshUI.materialForRendering">
            <summary>
            Get the material that will be used for rendering.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SubMeshUI.isDefaultMaterial">
            <summary>
            Is the text object using the default font asset material.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SubMeshUI.padding">
            <summary>
            Padding value resulting for the property settings on the material.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SubMeshUI.mesh">
            <summary>
            The Mesh of this text sub object.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SubMeshUI.textComponent">
            <summary>
            Reference to the parent Text Component.
            </summary>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.AddSubTextObject(TMPro.TextMeshProUGUI,TMPro.MaterialReference)">
            <summary>
            Function to add a new sub text object.
            </summary>
            <param name="textComponent"></param>
            <param name="materialReference"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.OnEnable">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.ON_TMP_SETTINGS_CHANGED">
            <summary>
            Event received when the TMP Settings are changed.
            </summary>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.OnTransformParentChanged">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.GetModifiedMaterial(UnityEngine.Material)">
            <summary>
            Function returning the modified material for masking if necessary.
            </summary>
            <param name="baseMaterial"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.GetPaddingForMaterial">
            <summary>
            Function called when the padding value for the material needs to be re-calculated.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.GetPaddingForMaterial(UnityEngine.Material)">
            <summary>
            Function called when the padding value for the material needs to be re-calculated.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.UpdateMeshPadding(System.Boolean,System.Boolean)">
             <summary>
            
             </summary>
             <param name="isExtraPadding"></param>
             <param name="isBold"></param>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.SetAllDirty">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.SetVerticesDirty">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.SetLayoutDirty">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.SetMaterialDirty">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.SetPivotDirty">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.Cull(UnityEngine.Rect,System.Boolean)">
            <summary>
            Override Cull function as this is handled by the parent text object.
            </summary>
            <param name="clipRect"></param>
            <param name="validRect"></param>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.UpdateGeometry">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.Rebuild(UnityEngine.UI.CanvasUpdate)">
             <summary>
            
             </summary>
             <param name="update"></param>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.RefreshMaterial">
            <summary>
            Function to update the material from the parent text object.
            </summary>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.UpdateMaterial">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.RecalculateClipping">
            <summary>
            Method called when the state of a parent changes.
            </summary>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.GetMaterial">
            <summary>
            Method which returns an instance of the shared material
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.CreateMaterialInstance(UnityEngine.Material)">
            <summary>
            Method used to create an instance of the material
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.GetSharedMaterial">
            <summary>
            Method returning the shared material assigned to the text object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_SubMeshUI.SetSharedMaterial(UnityEngine.Material)">
            <summary>
            Method to set the shared material.
            </summary>
            <param name="mat"></param>
        </member>
        <member name="P:TMPro.TMP_SpriteAsset.version">
            <summary>
            The version of the sprite asset class.
            Version 1.1.0 updates the asset data structure to be compatible with new font asset structure.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SpriteAsset.faceInfo">
            <summary>
            Information about the sprite asset's face.
            </summary>
        </member>
        <member name="P:TMPro.TMP_SpriteAsset.spriteCharacterTable">
             <summary>
            
             </summary>
        </member>
        <member name="P:TMPro.TMP_SpriteAsset.spriteCharacterLookupTable">
            <summary>
            Dictionary used to lookup sprite characters by their unicode value.
            </summary>
        </member>
        <member name="F:TMPro.TMP_SpriteAsset.fallbackSpriteAssets">
            <summary>
            List which contains the Fallback font assets for this font.
            </summary>
        </member>
        <member name="M:TMPro.TMP_SpriteAsset.GetDefaultSpriteMaterial">
            <summary>
            Create a material for the sprite asset.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_SpriteAsset.UpdateLookupTables">
            <summary>
            Function to update the sprite name and unicode lookup tables.
            This function should be called when a sprite's name or unicode value changes or when a new sprite is added.
            </summary>
        </member>
        <member name="M:TMPro.TMP_SpriteAsset.GetSpriteIndexFromHashcode(System.Int32)">
            <summary>
            Function which returns the sprite index using the hashcode of the name
            </summary>
            <param name="hashCode"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_SpriteAsset.GetSpriteIndexFromUnicode(System.UInt32)">
            <summary>
            Returns the index of the sprite for the given unicode value.
            </summary>
            <param name="unicode"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_SpriteAsset.GetSpriteIndexFromName(System.String)">
            <summary>
            Returns the index of the sprite for the given name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="F:TMPro.TMP_SpriteAsset.k_searchedSpriteAssets">
            <summary>
            Used to keep track of which Sprite Assets have been searched.
            </summary>
        </member>
        <member name="M:TMPro.TMP_SpriteAsset.SearchForSpriteByUnicode(TMPro.TMP_SpriteAsset,System.UInt32,System.Boolean,System.Int32@)">
            <summary>
            Search through the given sprite asset and its fallbacks for the specified sprite matching the given unicode character.
            </summary>
            <param name="spriteAsset">The font asset to search for the given character.</param>
            <param name="unicode">The character to find.</param>
            <param name="glyph">out parameter containing the glyph for the specified character (if found).</param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_SpriteAsset.SearchForSpriteByUnicodeInternal(System.Collections.Generic.List{TMPro.TMP_SpriteAsset},System.UInt32,System.Boolean,System.Int32@)">
            <summary>
            Search through the given list of sprite assets and fallbacks for a sprite whose unicode value matches the target unicode.
            </summary>
            <param name="spriteAssets"></param>
            <param name="unicode"></param>
            <param name="includeFallbacks"></param>
            <param name="spriteIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_SpriteAsset.SearchForSpriteByUnicodeInternal(TMPro.TMP_SpriteAsset,System.UInt32,System.Boolean,System.Int32@)">
            <summary>
            Search the given sprite asset and fallbacks for a sprite whose unicode value matches the target unicode.
            </summary>
            <param name="spriteAsset"></param>
            <param name="unicode"></param>
            <param name="includeFallbacks"></param>
            <param name="spriteIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_SpriteAsset.SearchForSpriteByHashCode(TMPro.TMP_SpriteAsset,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            Search the given sprite asset and fallbacks for a sprite whose hash code value of its name matches the target hash code.
            </summary>
            <param name="spriteAsset">The Sprite Asset to search for the given sprite whose name matches the hashcode value</param>
            <param name="hashCode">The hash code value matching the name of the sprite</param>
            <param name="includeFallbacks">Include fallback sprite assets in the search</param>
            <param name="spriteIndex">The index of the sprite matching the provided hash code</param>
            <returns>The Sprite Asset that contains the sprite</returns>
        </member>
        <member name="M:TMPro.TMP_SpriteAsset.SearchForSpriteByHashCodeInternal(System.Collections.Generic.List{TMPro.TMP_SpriteAsset},System.Int32,System.Boolean,System.Int32@)">
            <summary>
             Search through the given list of sprite assets and fallbacks for a sprite whose hash code value of its name matches the target hash code.
            </summary>
            <param name="spriteAssets"></param>
            <param name="hashCode"></param>
            <param name="searchFallbacks"></param>
            <param name="spriteIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_SpriteAsset.SearchForSpriteByHashCodeInternal(TMPro.TMP_SpriteAsset,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            Search through the given sprite asset and fallbacks for a sprite whose hash code value of its name matches the target hash code.
            </summary>
            <param name="spriteAsset"></param>
            <param name="hashCode"></param>
            <param name="searchFallbacks"></param>
            <param name="spriteIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_SpriteAsset.SortGlyphTable">
            <summary>
            Sort the sprite glyph table by glyph index.
            </summary>
        </member>
        <member name="M:TMPro.TMP_SpriteAsset.SortCharacterTable">
            <summary>
            Sort the sprite character table by Unicode values.
            </summary>
        </member>
        <member name="M:TMPro.TMP_SpriteAsset.SortGlyphAndCharacterTables">
            <summary>
            Sort both sprite glyph and character tables.
            </summary>
        </member>
        <member name="M:TMPro.TMP_SpriteAsset.UpgradeSpriteAsset">
            <summary>
            Internal method used to upgrade sprite asset.
            </summary>
        </member>
        <member name="T:TMPro.MarkupTag">
            <summary>
            Rich Text Tags and Attribute definitions and their respective HashCode values.
            </summary>
        </member>
        <member name="T:TMPro.TagValueType">
            <summary>
            Defines the type of value used by a rich text tag or tag attribute.
            </summary>
        </member>
        <member name="T:TMPro.CodePoint">
            <summary>
            Commonly referenced Unicode characters in the text generation process.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.version">
            <summary>
            The version of the font asset class.
            Version 1.1.0 adds support for the new TextCore.FontEngine and Dynamic SDF system.
            </summary>
        </member>
        <member name="F:TMPro.TMP_FontAsset.m_SourceFontFileGUID">
            <summary>
            This field is set when the font asset is first created.
            </summary>
        </member>
        <member name="F:TMPro.TMP_FontAsset.m_SourceFontFile_EditorRef">
            <summary>
            Persistent reference to the source font file maintained in the editor.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.sourceFontFile">
            <summary>
            Source font file when atlas population mode is set to dynamic. Null when the atlas population mode is set to static.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.faceInfo">
            <summary>
            Information about the font's face.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.glyphTable">
            <summary>
            List of glyphs contained in the font asset.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.glyphLookupTable">
            <summary>
            Dictionary used to lookup glyphs contained in the font asset by their index.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.characterTable">
            <summary>
            List containing the characters of the given font asset.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.characterLookupTable">
            <summary>
            Dictionary used to lookup characters contained in the font asset by their unicode values.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.atlasTexture">
            <summary>
            The font atlas used by this font asset.
            This is always the texture at index [0] of the fontAtlasTextures.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.atlasTextures">
            <summary>
            Array of atlas textures that contain the glyphs used by this font asset.
            </summary>
        </member>
        <member name="F:TMPro.TMP_FontAsset.m_AtlasTextureIndex">
            <summary>
            Index of the font atlas texture that still has available space to add new glyphs.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.atlasTextureCount">
            <summary>
            Number of atlas textures used by this font asset.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.isMultiAtlasTexturesEnabled">
            <summary>
            Enables the font asset to create additional atlas textures as needed.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.clearDynamicDataOnBuild">
            <summary>
            Determines if dynamic font asset data should be cleared before builds.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.usedGlyphRects">
            <summary>
            List of spaces occupied by glyphs in a given texture.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.freeGlyphRects">
            <summary>
            List of spaces available in a given texture to add new glyphs.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.fontInfo">
            <summary>
            The general information about the font.
            This property and FaceInfo_Legacy type are no longer used in version 1.1.0 of the font asset.
            </summary>
        </member>
        <member name="F:TMPro.TMP_FontAsset.atlas">
             <summary>
            
             </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.atlasWidth">
            <summary>
            The width of the atlas texture(s) used by this font asset.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.atlasHeight">
            <summary>
            The height of the atlas texture(s) used by this font asset.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.atlasPadding">
            <summary>
            The padding used between glyphs contained in the atlas texture(s) used by this font asset.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.fontFeatureTable">
            <summary>
            Table containing the various font features of this font asset.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.fallbackFontAssetTable">
            <summary>
            List containing the Fallback font assets for this font.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.creationSettings">
            <summary>
            The settings used in the Font Asset Creator when this font asset was created or edited.
            </summary>
        </member>
        <member name="P:TMPro.TMP_FontAsset.fontWeightTable">
            <summary>
            Array containing font assets to be used as alternative typefaces for the various potential font weights of this font asset.
            </summary>
        </member>
        <member name="F:TMPro.TMP_FontAsset.fontWeights">
            <summary>
            Font weights used by font asset prior to version 1.1.0.
            This is legacy and will be removed at some point in the future.
            </summary>
        </member>
        <member name="F:TMPro.TMP_FontAsset.normalStyle">
            <summary>
            Defines the dilation of the text when using regular style.
            </summary>
        </member>
        <member name="F:TMPro.TMP_FontAsset.normalSpacingOffset">
            <summary>
            The spacing between characters when using regular style.
            </summary>
        </member>
        <member name="F:TMPro.TMP_FontAsset.boldStyle">
            <summary>
            Defines the dilation of the text when using bold style.
            </summary>
        </member>
        <member name="F:TMPro.TMP_FontAsset.boldSpacing">
            <summary>
            The spacing between characters when using regular style.
            </summary>
        </member>
        <member name="F:TMPro.TMP_FontAsset.italicStyle">
            <summary>
            Defines the slant of the text when using italic style.
            </summary>
        </member>
        <member name="M:TMPro.TMP_FontAsset.CreateFontAsset(UnityEngine.Font)">
            <summary>
            Create new instance of a font asset using default settings.
            </summary>
            <param name="font"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_FontAsset.CreateFontAsset(UnityEngine.Font,System.Int32,System.Int32,UnityEngine.TextCore.LowLevel.GlyphRenderMode,System.Int32,System.Int32,TMPro.AtlasPopulationMode,System.Boolean)">
            <summary>
            Create new instance of a font asset.
            </summary>
            <param name="font">The source font file.</param>
            <param name="samplingPointSize">The sampling point size.</param>
            <param name="atlasPadding">The padding / spread between individual glyphs in the font asset.</param>
            <param name="renderMode"></param>
            <param name="atlasWidth">The atlas texture width.</param>
            <param name="atlasHeight">The atlas texture height.</param>
            <param name="atlasPopulationMode"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_FontAsset.InitializeDictionaryLookupTables">
            <summary>
            Read the various data tables of the font asset to populate its different dictionaries to allow for faster lookup of related font asset data.
            </summary>
        </member>
        <member name="M:TMPro.TMP_FontAsset.SortCharacterTable">
            <summary>
            Sort the Character table by Unicode values.
            </summary>
        </member>
        <member name="M:TMPro.TMP_FontAsset.SortGlyphTable">
            <summary>
            Sort the Glyph table by index values.
            </summary>
        </member>
        <member name="M:TMPro.TMP_FontAsset.SortAllTables">
            <summary>
            Sort both glyph and character tables.
            </summary>
        </member>
        <member name="F:TMPro.TMP_FontAsset.k_SearchedFontAssetLookup">
            <summary>
            HashSet of font asset instance ID used in the process of searching for through fallback font assets for a given character or characters.
            </summary>
        </member>
        <member name="M:TMPro.TMP_FontAsset.HasCharacter(System.Int32)">
            <summary>
            Function to check if a certain character exists in the font asset.
            </summary>
            <param name="character"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_FontAsset.HasCharacter(System.Char,System.Boolean,System.Boolean)">
            <summary>
            Function to check if a character is contained in the font asset with the option to also check potential local fallbacks.
            </summary>
            <param name="character"></param>
            <param name="searchFallbacks"></param>
            <param name="tryAddCharacter"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_FontAsset.HasCharacter_Internal(System.UInt32,System.Boolean,System.Boolean)">
            <summary>
            Function to check if a character is contained in a font asset with the option to also check through fallback font assets.
            This private implementation does not search the fallback font asset in the TMP Settings file.
            </summary>
            <param name="character"></param>
            <param name="searchFallbacks"></param>
            <param name="tryAddCharacter"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_FontAsset.HasCharacters(System.String,System.Collections.Generic.List{System.Char}@)">
            <summary>
            Function to check if certain characters exists in the font asset. Function returns a list of missing characters.
            </summary>
            <param name="text">String containing the characters to check.</param>
            <param name="missingCharacters">List of missing characters.</param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_FontAsset.HasCharacters(System.String,System.UInt32[]@,System.Boolean,System.Boolean)">
            <summary>
            Function to check if the characters in the given string are contained in the font asset with the option to also check its potential local fallbacks.
            </summary>
            <param name="text">String containing the characters to check.</param>
            <param name="missingCharacters">Array containing the unicode values of the missing characters.</param>
            <param name="searchFallbacks">Determines if fallback font assets assigned to this font asset should be searched.</param>
            <param name="tryAddCharacter"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_FontAsset.HasCharacters(System.String)">
            <summary>
            Function to check if certain characters exists in the font asset. Function returns false if any characters are missing.
            </summary>
            <param name="text">String containing the characters to check</param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_FontAsset.GetCharacters(TMPro.TMP_FontAsset)">
            <summary>
            Function to extract all the characters from a font asset.
            </summary>
            <param name="fontAsset"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_FontAsset.GetCharactersArray(TMPro.TMP_FontAsset)">
            <summary>
            Function which returns an array that contains all the characters from a font asset.
            </summary>
            <param name="fontAsset"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_FontAsset.GetGlyphIndex(System.UInt32)">
            <summary>
            Internal function used to get the glyph index for the given Unicode.
            </summary>
            <param name="unicode"></param>
            <returns></returns>
        </member>
        <member name="M:TMPro.TMP_FontAsset.RegisterFontAssetForFontFeatureUpdate(TMPro.TMP_FontAsset)">
             <summary>
            
             </summary>
             <param name="fontAsset"></param>
        </member>
        <member name="M:TMPro.TMP_FontAsset.UpdateFontFeaturesForFontAssetsInQueue">
            <summary>
            Function called to update the font atlas texture and character data of font assets to which
            new characters were added.
            </summary>
        </member>
        <member name="M:TMPro.TMP_FontAsset.RegisterFontAssetForAtlasTextureUpdate(TMPro.TMP_FontAsset)">
             <summary>
            
             </summary>
             <param name="fontAsset"></param>
        </member>
        <member name="M:TMPro.TMP_FontAsset.UpdateAtlasTexturesForFontAssetsInQueue">
             <summary>
            
             </summary>
        </member>
        <member name="F:TMPro.TMP_FontAsset.m_GlyphsToRender">
            <summary>
            List of glyphs that need to be rendered and added to an atlas texture.
            </summary>
        </member>
        <member name="F:TMPro.TMP_FontAsset.m_GlyphsRendered">
            <summary>
            List of glyphs that we just rendered and added to an atlas texture.
            </summary>
        </member>
        <member name="F:TMPro.TMP_FontAsset.m_GlyphIndexList">
            <summary>
            List of all the glyph indexes contained in the font asset.
            </summary>
        </member>
        <member name="F:TMPro.TMP_FontAsset.m_GlyphIndexListNewlyAdded">
            <summary>
            List of glyph indexes newly added to the font asset.
            This list is used in the process of retrieving font features.
            </summary>
        </member>
        <member name="F:TMPro.TMP_FontAsset.m_GlyphsToAdd">
             <summary>
            
             </summary>
        </member>
        <member name="F:TMPro.TMP_FontAsset.s_MissingCharacterList">
            <summary>
            Internal list used to track characters that could not be added to the font asset.
            </summary>
        </member>
        <member name="F:TMPro.TMP_FontAsset.m_MissingUnicodesFromFontFile">
            <summary>
            Hash table used to track characters that are known to be missing from the font file.
            </summary>
        </member>
        <member name="F:TMPro.TMP_FontAsset.k_GlyphIndexArray">
            <summary>
            Internal static array used to avoid allocations when using the GetGlyphPairAdjustmentTable().
            </summary>
        </member>
        <member name="M:TMPro.TMP_FontAsset.TryAddCharacters(System.UInt32[],System.Boolean)">
            <summary>
            Try adding the characters from the provided string to the font asset.
            </summary>
            <param name="unicodes">Array that contains the characters to add to the font asset.</param>
            <param name="includeFontFeatures"></param>
            <returns>Returns true if all the characters were successfully added to the font asset. Return false otherwise.</returns>
        </member>
        <member name="M:TMPro.TMP_FontAsset.TryAddCharacters(System.UInt32[],System.UInt32[]@,System.Boolean)">
            <summary>
            Try adding the characters from the provided string to the font asset.
            </summary>
            <param name="unicodes">Array that contains the characters to add to the font asset.</param>
            <param name="missingUnicodes">Array containing the characters that could not be added to the font asset.</param>
            <param name="includeFontFeatures"></param>
            <returns>Returns true if all the characters were successfully added to the font asset. Return false otherwise.</returns>
        </member>
        <member name="M:TMPro.TMP_FontAsset.TryAddCharacters(System.String,System.Boolean)">
            <summary>
            Try adding the characters from the provided string to the font asset.
            </summary>
            <param name="characters">String containing the characters to add to the font asset.</param>
            <param name="includeFontFeatures"></param>
            <returns>Returns true if all the characters were successfully added to the font asset. Return false otherwise.</returns>
        </member>
        <member name="M:TMPro.TMP_FontAsset.TryAddCharacters(System.String,System.String@,System.Boolean)">
            <summary>
            Try adding the characters from the provided string to the font asset.
            </summary>
            <param name="characters">String containing the characters to add to the font asset.</param>
            <param name="missingCharacters">String containing the characters that could not be added to the font asset.</param>
            <param name="includeFontFeatures"></param>
            <returns>Returns true if all the characters were successfully added to the font asset. Return false otherwise.</returns>
        </member>
        <member name="M:TMPro.TMP_FontAsset.TryAddCharacterInternal(System.UInt32,TMPro.TMP_Character@)">
            <summary>
            Try adding character using Unicode value to font asset.
            Function assumes internal user has already checked to make sure the character is not already contained in the font asset.
            </summary>
            <param name="unicode">The Unicode value of the character.</param>
            <param name="character">The character data if successfully added to the font asset. Null otherwise.</param>
            <returns>Returns true if the character has been added. False otherwise.</returns>
        </member>
        <member name="M:TMPro.TMP_FontAsset.TryAddGlyphsToAtlasTextures">
            <summary>
            This function requires an update to the TextCore:FontEngine
            </summary>
        </member>
        <member name="M:TMPro.TMP_FontAsset.TryAddGlyphsToNewAtlasTexture">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:TMPro.TMP_FontAsset.SetupNewAtlasTexture">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_FontAsset.UpdateAtlasTexture">
            <summary>
            Not used currently
            </summary>
        </member>
        <member name="M:TMPro.TMP_FontAsset.UpdateGlyphAdjustmentRecords">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_FontAsset.UpdateGlyphAdjustmentRecords(System.UInt32[])">
            <summary>
            Function used for debugging and performance testing.
            </summary>
            <param name="glyphIndexes"></param>
        </member>
        <member name="M:TMPro.TMP_FontAsset.UpdateGlyphAdjustmentRecords(System.Collections.Generic.List{System.UInt32})">
            <summary>
            Function requires an update to the TextCore:FontEngine
            </summary>
            <param name="glyphIndexes"></param>
        </member>
        <member name="M:TMPro.TMP_FontAsset.UpdateGlyphAdjustmentRecords(System.Collections.Generic.List{System.UInt32},System.Collections.Generic.List{System.UInt32})">
            <summary>
            Function requires an update to the TextCore:FontEngine
            </summary>
            <param name="newGlyphIndexes"></param>
            <param name="allGlyphIndexes"></param>
        </member>
        <member name="M:TMPro.TMP_FontAsset.CopyListDataToArray``1(System.Collections.Generic.List{``0},``0[]@)">
            <summary>
            Internal method to copy generic list data to generic array of the same type.
            </summary>
            <param name="srcList">Source</param>
            <param name="dstArray">Destination</param>
            <typeparam name="T">Element type</typeparam>
        </member>
        <member name="M:TMPro.TMP_FontAsset.ClearFontAssetData(System.Boolean)">
            <summary>
            Clears font asset data including the glyph and character tables and textures.
            Function might be changed to Internal and only used in tests.
            </summary>
            <param name="setAtlasSizeToZero">Will set the atlas texture size to zero width and height if true.</param>
        </member>
        <member name="M:TMPro.TMP_FontAsset.UpdateFontAssetData">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_FontAsset.ClearFontAssetTables">
             <summary>
            
             </summary>
        </member>
        <member name="M:TMPro.TMP_FontAsset.ClearAtlasTextures(System.Boolean)">
            <summary>
            Internal function to clear all atlas textures.
            </summary>
            <param name="setAtlasSizeToZero">Set main atlas texture size to zero if true.</param>
        </member>
        <member name="M:TMPro.TMP_FontAsset.UpgradeFontAsset">
            <summary>
            Internal method used to upgrade font asset to support Dynamic SDF.
            </summary>
        </member>
        <member name="M:TMPro.TMP_FontAsset.UpgradeGlyphAdjustmentTableToFontFeatureTable">
             <summary>
            
             </summary>
        </member>
    </members>
</doc>
