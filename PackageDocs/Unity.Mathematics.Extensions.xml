<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Unity.Mathematics.Extensions</name>
    </assembly>
    <members>
        <member name="T:Unity.Mathematics.MinMaxAABB">
            <summary>
            Axis aligned bounding box (AABB) stored in min and max form.
            </summary>
            <remarks>
            Axis aligned bounding boxes (AABB) are boxes where each side is parallel with one of the Cartesian coordinate axes
            X, Y, and Z. AABBs are useful for approximating the region an object (or collection of objects) occupies and quickly
            testing whether or not that object (or collection of objects) is relevant. Because they are axis aligned, they
            are very cheap to construct and perform overlap tests with them.
            </remarks>
        </member>
        <member name="F:Unity.Mathematics.MinMaxAABB.Min">
            <summary>
            The minimum point contained by the AABB.
            </summary>
            <remarks>
            If any component of <see cref="F:Unity.Mathematics.MinMaxAABB.Min"/> is greater than <see cref="F:Unity.Mathematics.MinMaxAABB.Max"/> then this AABB is invalid.
            </remarks>
        </member>
        <member name="F:Unity.Mathematics.MinMaxAABB.Max">
            <summary>
            The maximum point contained by the AABB.
            </summary>
            <remarks>
            If any component of <see cref="F:Unity.Mathematics.MinMaxAABB.Max"/> is less than <see cref="F:Unity.Mathematics.MinMaxAABB.Min"/> then this AABB is invalid.
            </remarks>
        </member>
        <member name="P:Unity.Mathematics.MinMaxAABB.IsEmpty">
            <summary>
            Is this AABB empty? It is empty only if the minimum and maximum coordinates are at opposing infinities.
            </summary>
            <returns>Whether the AABB is empty (its minimum and maximum coordinates are at opposing infinities)</returns>
        </member>
        <member name="P:Unity.Mathematics.MinMaxAABB.Empty">
            <summary>
            An empty AABB - where the minimum and maximum coordinates are at opposing infinities.
            </summary>
        </member>
        <member name="M:Unity.Mathematics.MinMaxAABB.Encapsulate(Unity.Mathematics.MinMaxAABB)">
            <summary>
            Make this AABB into the smallest AABB that contains both this AABB, and another AABB.
            </summary>
            <param name="aabb">The other AABB</param>
        </member>
        <member name="M:Unity.Mathematics.MinMaxAABB.Encapsulate(Unity.Mathematics.float3)">
            <summary>
            Encapsulates the given AABB.
            </summary>
            <remarks>
            Modifies this AABB so that it contains the given AABB. If the given AABB is already contained by this AABB,
            then this AABB doesn't change.
            </remarks>
            <param name="point">AABB to encapsulate.</param>
        </member>
        <member name="M:Unity.Mathematics.MinMaxAABB.op_Implicit(Unity.Mathematics.AABB)~Unity.Mathematics.MinMaxAABB">
            <summary>
            Make a MinMaxAABB from an AABB (an AABB which has a center and extents)
            </summary>
            <param name="aabb">The AABB to convert to a MinMaxAABB</param>
            <returns>Returns the new AABB.</returns>
        </member>
        <member name="M:Unity.Mathematics.MinMaxAABB.op_Implicit(Unity.Mathematics.MinMaxAABB)~Unity.Mathematics.AABB">
            <summary>
            Make an AABB (an AABB which has a center and extents) from a MinMaxAABB
            </summary>
            <param name="aabb">The MinMaxAABB to convert to an AABB</param>
            <returns>Returns the new AABB.</returns>
        </member>
        <member name="M:Unity.Mathematics.MinMaxAABB.Equals(Unity.Mathematics.MinMaxAABB)">
            <summary>
            Determine whether this MinMaxAABB is the same as another MinMaxAABB
            </summary>
            <param name="other">The MinMaxAABB to compare against.</param>
            <returns>True if the MinMaxAABB is the same as the other parameter.</returns>
        </member>
        <member name="T:Unity.Mathematics.AABB">
            <summary>
             An AABB, or axis-aligned bounding box, is a simple bounding shape, typically used for quick determination
             of whether two objects may intersect. If the AABBs that enclose each object do not intersect, then logically
             the objects also may not intersect. This AABB struct is formulated as a center and a size, rather than as a
             minimum and maximum coordinate. Therefore, there may be issues at extreme coordinates, such as FLT_MAX or infinity.
            </summary>
        </member>
        <member name="F:Unity.Mathematics.AABB.Center">
            <summary>
            The location of the center of the AABB
            </summary>
        </member>
        <member name="F:Unity.Mathematics.AABB.Extents">
            <summary>
            A 3D vector from the center of the AABB, to the corner of the AABB with maximum XYZ values
            </summary>
        </member>
        <member name="P:Unity.Mathematics.AABB.Size">
            <summary>
            The size of the AABB
            </summary>
            <returns>The size of the AABB, in three dimensions. All three dimensions must be positive.</returns>
        </member>
        <member name="P:Unity.Mathematics.AABB.Min">
            <summary>
            The minimum coordinate of the AABB
            </summary>
            <returns>The minimum coordinate of the AABB, in three dimensions.</returns>
        </member>
        <member name="P:Unity.Mathematics.AABB.Max">
            <summary>
            The maximum coordinate of the AABB
            </summary>
            <returns>The maximum coordinate of the AABB, in three dimensions.</returns>
        </member>
        <member name="M:Unity.Mathematics.AABB.ToString">
            <summary>Returns a string representation of the AABB.</summary>
            <returns>a string representation of the AABB.</returns>
        </member>
        <member name="M:Unity.Mathematics.AABB.Contains(Unity.Mathematics.float3)">
            <summary>
            Returns whether a point in 3D space is contained by the AABB, or not. Because math is done
            to compute the minimum and maximum coordinates of the AABB, overflow is possible for extreme values.
            </summary>
            <param name="point">The point to check for whether it's contained by the AABB</param>
            <returns>True if the point is contained, and false if the point is not contained by the AABB.</returns>
        </member>
        <member name="M:Unity.Mathematics.AABB.Contains(Unity.Mathematics.AABB)">
            <summary>
            Returns whether the AABB contains another AABB completely. Because math is done
            to compute the minimum and maximum coordinates of the AABBs, overflow is possible for extreme values.
            </summary>
            <param name="b">The AABB to check for whether it's contained by this AABB</param>
            <returns>True if the AABB is contained, and false if it is not.</returns>
        </member>
        <member name="M:Unity.Mathematics.AABB.Transform(Unity.Mathematics.float4x4,Unity.Mathematics.AABB)">
            <summary>
            Transforms an AABB by a 4x4 transformation matrix, and returns a new AABB that contains the transformed
            AABB completely.
            </summary>
            <param name="transform">The 4x4 transformation matrix, with which to transform the AABB</param>
            <param name="localBounds">The AABB to transform by the matrix</param>
            <returns>A new AABB that contains the transformed AABB.</returns>
        </member>
        <member name="M:Unity.Mathematics.AABB.DistanceSq(Unity.Mathematics.float3)">
            <summary>
            Determines the squared distance from a point to the nearest point to it that is contained by an AABB.
            </summary>
            <param name="point">The point to find the distance from</param>
            <returns>The squared distance from the point to the nearest point to it that is contained by the AABB.</returns>
        </member>
        <member name="T:Unity.Mathematics.GeneratePoints">
            <summary>
            Tools for generating random points inside of a shape of interest
            </summary>
        </member>
        <member name="M:Unity.Mathematics.GeneratePoints.RandomPointsInSphere(Unity.Mathematics.float3,System.Single,Unity.Collections.NativeArray{Unity.Mathematics.float3},Unity.Jobs.JobHandle)">
            <summary>
            Schedule Burst jobs to generate random points inside of a sphere
            </summary>
            <param name="center">The center of the sphere</param>
            <param name="radius">The radius of the sphere</param>
            <param name="points">An array into which the random points are stored</param>
            <param name="inputDeps">A JobHandle to wait for, before the jobs scheduled by this function</param>
            <returns>A JobHandle of the job that was created to generate random points inside a sphere</returns>
        </member>
        <member name="M:Unity.Mathematics.GeneratePoints.RandomPointsInSphere(Unity.Mathematics.float3,System.Single,Unity.Collections.NativeArray{Unity.Mathematics.float3})">
            <summary>
            A function that generates random points inside of a sphere. Schedules and completes jobs,
            before returning to its caller.
            </summary>
            <param name="center">The center of the sphere</param>
            <param name="radius">The radius of the sphere</param>
            <param name="points">A NativeArray in which to store the randomly generated points</param>
        </member>
        <member name="M:Unity.Mathematics.GeneratePoints.RandomPointsInUnitSphere(Unity.Collections.NativeArray{Unity.Mathematics.float3})">
            <summary>
            A function that generates random points inside of a unit sphere. Schedules and completes jobs,
            before returning to its caller.
            </summary>
            <param name="points">A NativeArray in which to store the randomly generated points</param>
        </member>
        <member name="M:Unity.Mathematics.GeneratePoints.RandomPositionInsideUnitSphere(System.UInt32)">
            <summary>
            A function that returns a single random position, fairly distributed inside the unit sphere.
            </summary>
            <param name="seed">A seed to the random number generator</param>
            <returns>A point inside of the unit sphere, fairly distributed</returns>
        </member>
    </members>
</doc>
